var reportModule = angular.module('mainmodule');
var ReportController = function($rootScope, modal,$interval, $scope,$filter, $window,
		$http, localStorageService, CommonService, $state, httpPostService,
		$timeout, $stateParams, MotorSearchService, GridServices, uiGridConstants,
		ReportService,FilterSearchService) {
	var self = $scope;
	self.searchCriteria = {};
	var gridSettings = {
					
			showColumnFooter: true,enableRowHeaderSelection : false,enableSelectAll : false,
			multiSelect : false,enableRowSelection : true,enableCellEdit : false,enableCellEditOnFocus : false,
			enableColumnReordering : false,enableSorting : false,enableColumnResizing : false,enableColumnMenus : true,
			cellFilter: 'number: 2',
			showGridFooter : true,showColumnFooter : true
		};
	
	var pagination = {pageSizes :[10,20,50,100],page:10};
	
	/*Common*/
	
	self.fnLoadRptSourceTypes = function(){
		return CommonService.getLoginSourceTypes().then(function(response){
			self.rptSourceTypeOptions = response.data;
			return response;
		});
	};
	
	self.fnLoadRptBranchesBySourceType = function(formObject){
		formObject.branchId = 0;
		formObject.agentId = 0;
		formObject.accountCode = null;
		return CommonService.getBranchListBySourceTypeId({sourceTypeId:formObject.sourceTypeId}).then(function(response){
			self.rptBranchOptions = response.data;
			return response;
		});
	};
	
	//To Load Branch - AccountCode - SubAccountCode
	self.fnLoadDlyAcCode = function(formObject){
		if(formObject.branchId != 0){			
			ReportService.loadDlyAcCodeByBranch(self);
			}
	};	
	//To Load Class based on Main Class
	self.fnSetSelectedMainClassId = function(formObject){
		if(formObject.otsMainClassId!=undefined && formObject.otsMainClassId != 0 && formObject.otsMainClassId>0){			
			ReportService.loadClassByMainClass(formObject);
		}else{
			self.classCodeOptions = "";
		}
	};
	//Date common for Report
	self.fnOnChangeReportFromDate = function() {	
		if (self.reportdet.fromDate != undefined && self.reportdet.fromDate.length > 0) {	
			if(isValidDate(self.reportdet.fromDate)){				
				CommonService.getCurrentDate().then(function(response) {
					if(stringToDate(self.reportdet.fromDate) > stringToDate(response.date)) {
							swal(FILTER_MSGS.FILTER_VALIDATION.EQUAL_LESS_SYSDATE);
							self.reportdet.fromDate = '';
							self.reportdet.toDate = '';
							$("#DDT_FROM_DATE").focus();
						}
					else {
						var maxDate = fnDateManipulation(self.reportdet.fromDate,30,"+", "D");	
						if(stringToDate(maxDate) > stringToDate(response.date))
							self.reportdet.toDate = response.date;
						else if ((stringToDate(maxDate) < stringToDate(response.date)))
							self.reportdet.toDate = maxDate;			
					}
				});		
			}
			else{				
				self.reportdet.fromDate = '';
				$("#DDT_FROM_DATE").focus();	
			}
		}
	};
	self.fnOnChangeReportToDate = function() {
		if (self.reportdet.toDate != undefined && self.reportdet.toDate.length > 0) {
			if(isValidDate(self.reportdet.toDate)){
			CommonService.getCurrentDate().then(function(response) {
			var currDate=response.date;			
			var maxDate = fnDateManipulation(self.reportdet.fromDate, 1,"+", "Y");				
			 if(stringToDate(currDate) < stringToDate(self.reportdet.toDate)){				
					self.reportdet.toDate = '';
					swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_SYS_TO_DATE);
					$("#DDT_TO_DATE").focus();						
				}
			else if (self.reportdet.fromDate != null && self.reportdet.fromDate.length > 0 &&(isValidDate(self.reportdet.toDate))) {
				if (stringToDate(self.reportdet.fromDate) > stringToDate(self.reportdet.toDate)) {
					swal(FILTER_MSGS.FILTER_VALIDATION.EQUAL_GREATER_FROMDT);
					self.reportdet.toDate = '';
					$("#DDT_TO_DATE").focus();	
				}
				else if(stringToDate(maxDate) < stringToDate(self.reportdet.toDate)){
					self.reportdet.toDate = '';
					swal("Please select within 1 year from given From Date","reportdet.toDate");
				}	
				
			}	
			
		});}else{
			self.reportdet.toDate = '';				
			$("#DDT_TO_DATE").focus();	
		}}
	};

	self.fnOnChangeReportToDateSixMonth = function(menuId) {
		if (self.reportdet.toDate != undefined && self.reportdet.toDate.length > 0) {
			if(isValidDate(self.reportdet.toDate)){
			CommonService.getCurrentDate().then(function(response) {
				var currDate=response.date;			
				var maxDate = fnDateManipulation(self.reportdet.fromDate, 6,"+", "M");
				if(stringToDate(currDate) < stringToDate(self.reportdet.toDate)){				
						self.reportdet.toDate = '';
						swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_SYS_TO_DATE);
						$("#DDT_TO_DATE").focus();						
				}
				else if (self.reportdet.fromDate != null && self.reportdet.fromDate.length > 0 &&(isValidDate(self.reportdet.toDate))){
					if (stringToDate(self.reportdet.fromDate) > stringToDate(self.reportdet.toDate)){
						swal(FILTER_MSGS.FILTER_VALIDATION.EQUAL_GREATER_FROMDT);
						self.reportdet.toDate = '';
						$("#DDT_TO_DATE").focus();	
					}
					else if(stringToDate(maxDate) < stringToDate(self.reportdet.toDate)){
						self.reportdet.toDate = '';
						swal("Please select within 6 months from given From Date","reportdet.toDate");
					}					
				}				
			});
		}else{
		self.reportdet.toDate = '';				
		$("#DDT_TO_DATE").focus();	
		}}
	};
	
	self.fnReportTimeRestrict = function(menuId) {
		if (self.reportdet.toDate != undefined && self.reportdet.toDate.length > 0) {
			if(isValidDate(self.reportdet.toDate)){
			CommonService.getCurrentDate().then(function(response) {
				var time = response.time;
				time = time.toLocaleString('en-US', { hour: 'numeric',minute:'numeric', hour12: true });
				
				var currDate=response.date;			
				var maxDate = fnDateManipulation(self.reportdet.fromDate, 6,"+", "M");
				var chkIfOneMonth = fnDateManipulation(self.reportdet.fromDate, 1,"+", "M");
				if(stringToDate(currDate) < stringToDate(self.reportdet.toDate)){				
						self.reportdet.toDate = '';
						swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_SYS_TO_DATE);
						$("#DDT_TO_DATE").focus();						
				}
				else if (self.reportdet.fromDate != null && self.reportdet.fromDate.length > 0 &&(isValidDate(self.reportdet.toDate))){
					if (stringToDate(self.reportdet.fromDate) > stringToDate(self.reportdet.toDate)){
						swal(FILTER_MSGS.FILTER_VALIDATION.EQUAL_GREATER_FROMDT);
						self.reportdet.toDate = '';
						$("#DDT_TO_DATE").focus();	
					}
					else if(stringToDate(chkIfOneMonth) < stringToDate(frmModel.toDate) && stringToDate(maxDate) >= stringToDate(frmModel.toDate))
					{		
						$http.post(CONTEXT_PATH+'reports/loadReportGenTimeDet',''+menuId).then(function(response) {
							if(response.data != null && response.data.length > 0){
								self.reportTimeList = response.data;
								
								var time1From = response.data[0].time1FromHH+":"+((parseInt(response.data[0].time1FromMM) < 10)?"0"+response.data[0].time1FromMM:response.data[0].time1FromMM)+":00 "+response.data[0].time1FromAM;
								var time1To = response.data[0].time1ToHH+":"+((parseInt(response.data[0].time1ToMM) < 10)?"0"+response.data[0].time1ToMM:response.data[0].time1ToMM)+":00 "+response.data[0].time1ToAM;
								if(response.data[0].time2FromHH != null){
									var time2From = response.data[0].time2FromHH+":"+((parseInt(response.data[0].time2FromMM) < 10)?"0"+response.data[0].time2FromMM:response.data[0].time2FromMM)+":00 "+response.data[0].time2FromAM;
									var time2To = response.data[0].time2ToHH+":"+((parseInt(response.data[0].time2ToMM) < 10)?"0"+response.data[0].time2ToMM:response.data[0].time2ToMM)+":00 "+response.data[0].time2ToAM;
								}
								var effectivedate = null;
								if(response.data[0].rptTimeEffectDate != null ){
									effectivedate = response.data[0].rptTimeEffectDate+" "+response.data[0].rptTimeEffectHH+":"+response.data[0].rptTimeEffectMM+":00 "+response.data[0].rptTimeEffectAM;
								}
								if(response.data[0].rptTimeEffectDate != null && Date.parse(currDate) < Date.parse(effectivedate))
								{
									status = false;
									swal("Report access for more than one month has been restricted for now, Please contact Administrator !","reportdet.toDate");
									return;
								}
								/*else if ((response.data[0].staffId != null && response.data[0].staffId > 0) && (GLOBAL_DATA.staffId !=undefined && GLOBAL_DATA.staffId > 0) && response.data[0].staffId != GLOBAL_DATA.staffId)
								{
									alert("staff");
									status = false;
									swal("Report access for more than one month has been restricted for now, Please contact Administrator !","reportdet.toDate");
									return;
								}*/
								else if((((response.data[0].staffId != null && response.data[0].staffId > 0) && (GLOBAL_DATA.staffId !=undefined && GLOBAL_DATA.staffId > 0) && response.data[0].staffId != GLOBAL_DATA.staffId) || (response.data[0].staffId == undefined || response.data[0].staffId == null) || GLOBAL_DATA.staffId == null) )
								{
									if (time<time1From || time>time1To){
										if(response.data[0].time1FromAM == "PM" && response.data[0].time1ToAM == "AM"){status = true;}
										else{
											//alert(time+"<"+time1From +"||"+ time+">"+time1To);
											status = false;
											swal("Report access for more than one month has been restricted for now, Please contact Administrator !","reportdet.toDate");
											return;
										}
									}
									else if(time2From != null && time2From != undefined && (time<time2From || time>time2To)){
										if(response.data[0].time2FromAM == "PM" && response.data[0].time2ToAM == "AM"){status = true;}
										else{
											//alert(time+"<"+time2From +"||"+ time+">"+time2To);
											status = false;
											swal("Report access for more than one month has been restricted for now, Please contact Administrator !","reportdet.toDate");
											return;
										}
									}
									else
										{status=true;}
								}
								
							}
						});						
										
					}
					else if(stringToDate(maxDate) < stringToDate(self.reportdet.toDate)){
						self.reportdet.toDate = '';
						swal("Please select within 6 months from given From Date","reportdet.toDate");
					}					
				}				
			});
		}else{
		self.reportdet.toDate = '';				
		$("#DDT_TO_DATE").focus();	
		}}
	};
			
	//Date Manipulation	
	self.fnGetToDate = function(formObject) {
		var currDate=formObject.fromDate;
		var toDate = fnDateManipulation(currDate,1,"+", "M");	  
        if(toDate != null){
            toDate = fnDateManipulation(toDate,1,"-", "D");	  
        }
		formObject.toDate = toDate; 		
	};	
	self.fnGetAgentToDate = function(formObject){
		var fromDate = stringToDate(formObject.fromDate);
		var date = new Date(fromDate.getFullYear(),fromDate.getMonth()+1,0);
		formObject.toDate = dateToString(date);
	};
	
	self.fnGetMonthFromtoDate = function(){
		
		if (self.voidpaymentdet != null && self.voidpaymentdet != undefined ) {
			var toDate = fnDateManipulation(self.voidpaymentdet.fromDate,3,"+", "M");
			if(!isValidDate(self.voidpaymentdet.toDate)) {
				self.voidpaymentdet.toDate="";
				return false;
			}
			if(self.voidpaymentdet.toDate==undefined){			
				self.voidpaymentdet.toDate='';
			} else if(self.voidpaymentdet.fromDate!=''&& self.voidpaymentdet.fromDate!=undefined){
				if(self.voidpaymentdet.fromDate instanceof Date) {
					fromDate=dateToString(self.voidpaymentdet.fromDate);
				} else {
					fromDate=self.voidpaymentdet.fromDate;
				}
				if(stringToDate(fromDate)>stringToDate(self.voidpaymentdet.toDate)){
					alert("To Date should be greater than or equal to From Date");
					self.voidpaymentdet.toDate='';
				} else if(stringToDate(toDate) < stringToDate(self.reportdet.toDate) || (getDiffInDays(self.reportdet.fromDate,self.reportdet.toDate) > 31 && getDiffInDays(monthLast(self.reportdet.fromDate),self.reportdet.toDate) > 1)){
					alert("To Date should not be greater than 31 days from given From Date");
					self.reportdet.toDate='';
				} else if(stringToDate(toDate) < stringToDate(self.reportdet.toDate) || (getDiffInDays(self.reportdet.fromDate,self.reportdet.toDate) > 30 && getDiffInDays(monthLast(self.reportdet.fromDate),self.reportdet.toDate) > 1)){
					alert("To Date should not be greater than 30 days from given From Date");
					self.reportdet.toDate='';
				} 
			}
			
		} else {			
			var toDate = fnDateManipulation(self.reportdet.fromDate,3,"+", "M");
			if(!isValidDate(self.reportdet.toDate)) {
				self.reportdet.toDate="";
				return false;
			}
			if(self.reportdet.toDate==undefined){			
				self.reportdet.toDate='';
			} else if(self.reportdet.fromDate!=''&& self.reportdet.fromDate!=undefined){
				if(self.reportdet.fromDate instanceof Date) {
					fromDate=dateToString(self.reportdet.fromDate);
				} else {
					fromDate=self.reportdet.fromDate;
				}
				if(stringToDate(fromDate)>stringToDate(self.reportdet.toDate)){
					/*alert(FILTER_MSGS.FILTER_VALIDATION.EQUAL_GREATER_FROMDT);*/
					alert("To Date should be greater than or equal to From Date");
					self.reportdet.toDate='';
				} else if(stringToDate(toDate) < stringToDate(self.reportdet.toDate) || (getDiffInDays(self.reportdet.fromDate,self.reportdet.toDate) > 31 && getDiffInDays(monthLast(self.reportdet.fromDate),self.reportdet.toDate) > 1)){
					/*alert(FILTER_MSGS.FILTER_VALIDATION.VALIDATE_RNWL_FROMDATE);*/
					alert("To Date should not be greater than 31 days from given From Date");
					self.reportdet.toDate='';
				} else if(stringToDate(toDate) < stringToDate(self.reportdet.toDate) || (getDiffInDays(self.reportdet.fromDate,self.reportdet.toDate) > 30 && getDiffInDays(monthLast(self.reportdet.fromDate),self.reportdet.toDate) > 1)){
					alert("To Date should not be greater than 30 days from given From Date");
					self.reportdet.toDate='';
				} 
			}
		}
		
		
	 };
	//Add new jsp for search Grid(Account Code)
	self.fnShowAccountCodeSearch = function(formObject,searchPageType){
		if(searchPageType == "voidpaymentreport"){
			var data = JSON.stringify(formObject);
			localStorageService.set("searchPageType",searchPageType);
	    	localStorageService.set("searchScopeObj",formObject);
	    	if (formObject.id != undefined && formObject.id != "") {
	    		localStorageService.set("searchScopeObjId",formObject.id);
	    	}
	    	$http.get(CONTEXT_PATH+'nsurebase/common/search/accountcodesearch').success(function(data) {    		
				new modal().open(data);
			});
		
		}else if((self.reportdet.branchId!=undefined && self.reportdet.branchId!=0 && self.reportdet.branchId!="" )||(self.id == "PAYMENT_VOUCHER_SUMMARY")){
			localStorageService.set("searchPageType",searchPageType);
	    	localStorageService.set("searchScopeObj",formObject);
	    	if (formObject.id != undefined && formObject.id != "") {
	    		localStorageService.set("searchScopeObjId",formObject.id);
	    	}
	    	$http.get(CONTEXT_PATH+'nsurebase/common/search/accountcodesearch').success(function(data) { 
				new modal().open(data);
	    	});
		}
		else
			{
			swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_BRANCH);
			}
	};
	//search Grid(Account Code without mandatory)
	self.fnShowAccountCodeSearchWOMandatory = function(formObject,searchPageType){
			localStorageService.set("searchPageType",searchPageType);
	    	localStorageService.set("searchScopeObj",formObject);
	    	if (formObject.id != undefined && formObject.id != "") {
	    		localStorageService.set("searchScopeObjId",formObject.id);
	    	}
	    	$http.get(CONTEXT_PATH+'nsurebase/common/search/accountcodesearch').success(function(data) { 
				new modal().open(data);
	    	});
	};
	//Add new JSP search for LoginName based search
	self.fnShowLoginNameSearch = function(formObject,searchPageType){
			//if(self.reportdet.staffInd !=undefined && self.reportdet.staffInd =="Y" && self.reportdet.staffInd !=""){
				localStorageService.set("searchPageType",searchPageType);
		    	localStorageService.set("searchScopeObj",formObject);
		    	$http.get(CONTEXT_PATH+'nsurebase/common/search/loginnamesearch').success(function(data) { 
					new modal().open(data);
		    	});
			//}
	};	
	
	//Account Code clear
	self.fnClearAccountCode = function(){
		self.reportdet.accountCode="";
		self.reportdet.agentId="";
		
	};
	
	self.fnClearAuditAccountCode= function(){
		self.reportdet.accountCode="";
		self.reportdet.agentId="";
		self.userIdAccessRightsDetGrid.data = [];
		
	};
	//Account Code - SubAccount code clear
	self.fnClearAccountWithSubAccCode = function(){
		self.reportdet.accountCode="";
		self.reportdet.subAgentId="";
	};
	//Cancel Button
	 self.fnCancel = function(){
		 jConfirm(FILTER_MSGS.FILTER_VALIDATION.CONFIRM_CLOSE,"Warning",function(res){
				if(res){       
            $state.go("layout");
        } });
	}; 
	// Reset Button
	self.fnreset = function (){
		jConfirm(FILTER_MSGS.FILTER_VALIDATION.CONFIRM_RESET,"Warning",function(res){
			if(res){    
				$state.reload();} });
	};	
/*Daily Transaction Report Details Start*/
	//Init Function
	self.setDefaultDailyTransReportDet = function() {
		var events = {"ondblclick" : "fnGetSelectedDailyTransactionDetail"};
		GridServices.defineGrid(self,null, 'totalBranchTranByTellerDetGrid',null,columnDefs.totalBranchTranByTellerDet,null,null, events);
		GridServices.defineGrid(self,null, 'totalTranByTellerDetGrid',null,columnDefs.totalTranByTellerDet,null, pagination, null);
		
		self.fnLoadRptSourceTypes().then(function(response){
			if(GLOBAL_DATA.staffId != 0){
				self.reportdet.staffInd="Y";
			}
			$("#DD_BRANCH").focus();
			CommonService.getCurrentDate().then(function(response) {
				var currDate=response.date;
				var date = stringToDate(currDate);
				date.setDate(date.getDate() - 30);
				
				self.reportdet.toDate = currDate;			
				self.reportdet.fromDate = dateToString(date);
			});
			self.gridAlertInd = false;
			if(self.staffId == 0){
				self.reportdet.sourceTypeId = 1;
				ReportService.loadDlyTransBranch(self);
			}
			ReportService.loadMainClassListRefer1(self);
		});
	};
	
	/*// Export Excel
	self.fnExportExcelDailyTransactionReport=function(){
		 jConfirm(FILTER_MSGS.FILTER_VALIDATION.CONFIRM_EXCEL,"Warning",function(res){
				if(res){    
			 if(self.totalBranchTranByTellerDetGrid.data.length > 0){
				 document.getElementById('EXCEL_DAILYTRANS').click();    				
			 }
			 else
				 swal(FILTER_MSGS.FILTER_VALIDATION.NO_DATA_TOEXPORT);
		 	}	 });
	};*/
	
	
	self.fnBranchChange = function(){
		if (self.reportdet.accountCode != undefined && self.reportdet.accountCode != null && self.reportdet.accountCode != 0){
			self.reportdet.accountCode = 0;
			self.reportdet.accountCode = ""; 
		}
		if (self.reportdet.otsMainClassId != undefined && self.reportdet.otsMainClassId != null && self.reportdet.otsMainClassId != 0){
			self.reportdet.otsMainClassId = 0;
			self.reportdet.otsMainClassId = ""; 
		}
		if (self.reportdet.otsClassId != undefined && self.reportdet.otsClassId != null && self.reportdet.otsClassId != 0){
			self.reportdet.otsClassId = 0;
			self.reportdet.otsClassId = ""; 
		}
		if (self.reportdet.transactionTypeId != undefined && self.reportdet.transactionTypeId != null && self.reportdet.transactionTypeId != 0){
			self.reportdet.transactionTypeId = 0;
			self.reportdet.transactionTypeId = ""; 
		}
		self.reportdet.totalCash="";
		self.reportdet.totalCheque="";
		self.reportdet.totalCredit="";
		self.reportdet.totalDirectIn="";
		self.reportdet.totalDebit="";
		self.reportdet.grandTotal="";
		self.reportdet.totalAmount="";
		self.reportdet.totalCases = "";
		self.reportdet.commission= "";
		self.reportdet.gstonCommission="";
		self.reportdet.gstPremium="";
		
		self.reportdet.totalPremium="";
		
	};
/*	self.fnChkAll = function() {
		if(document.getElementById("CHK_ALL").checked){
			self.endtjpj=true;
			self.endtnonjpj=true;
			self.motnewbusrenewal=true;
			self.nonmotcrosselling=true;
			document.getElementById("CHK_MTR_NBR").checked = false;
			document.getElementById("CHK_MTR_ENDT_JPJ").checked = false;
			document.getElementById("CHK_MTR_ENDT_NJPJ").checked = false;
			document.getElementById("CHK_NM_NBRE").checked = false;
			
		}
		else{
			self.endtjpj=false;
			self.endtnonjpj=false;
			self.motnewbusrenewal=false;
			self.nonmotcrosselling=false;
		}
	};*/
	//Search button click(Load First Grid)	
	self.fnSearchDailyTransactionDet = function(){
		
		self.totalBranchTranByTellerDetGrid.data=[];
		self.totalTranByTellerDetGrid.data=[];	
		
		if(self.reportdet.sourceTypeId == undefined || self.reportdet.sourceTypeId == null || self.reportdet.sourceTypeId == 0 || self.reportdet.sourceTypeId == '')
			swal("Please select Source Type","reportdet.sourceTypeId");
		else if(self.reportdet.branchId == 0 || self.reportdet.branchId == '' || self.reportdet.branchId == undefined || self.reportdet.branchId == null)
			swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_BRANCH,"reportdet.branchId");
		/*else if(self.reportdet.accountCode == 0 || self.reportdet.accountCode == '' || self.reportdet.accountCode == undefined || self.reportdet.accountCode == null)
			swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_ACCCODE,"reportdet.accountCode");	*/
		else if (self.reportdet.fromDate == null || self.reportdet.fromDate == '' || self.reportdet.fromDate == undefined)
			swal(FILTER_MSGS.FILTER_VALIDATION.VALID_FROMDT,"reportdet.fromDate");
		else if (self.reportdet.toDate == null || self.reportdet.toDate == '' || self.reportdet.toDate == undefined)
			swal(FILTER_MSGS.FILTER_VALIDATION.VALID_TODT,"reportdet.toDate");	
		else if(self.reportdet.otsMainClassId==null || self.reportdet.otsMainClassId=='' || self.reportdet.otsMainClassId==undefined || self.reportdet.otsMainClassId==0)
			 swal("Please select Main Class","reportdet.otsMainClassId");		 
		else 
			 {
				 //self.fnReportTimeRestrict(64);
				status = true;
				CommonService.getCurrentDate().then(function(response) {
					var time = response.time;
					var menuId = 64;
					time = time.toLocaleString('en-US', { hour: 'numeric',minute:'numeric', hour24: true });
	
					var maxDate = fnDateManipulation(self.reportdet.fromDate, 6,"+", "M");
					var chkIfOneMonth = fnDateManipulation(self.reportdet.fromDate, 1,"+", "M");
	
					if(stringToDate(chkIfOneMonth) < stringToDate(self.reportdet.toDate) && stringToDate(maxDate) >= stringToDate(self.reportdet.toDate))
					{		
						$http.post(CONTEXT_PATH+'reports/loadReportGenTimeDet',''+menuId).then(function(response) {
							if(response.data != null && response.data.length > 0){
								self.reportTimeList = response.data;
								
								var time1From = response.data[0].time1FromHH+":"+((parseInt(response.data[0].time1FromMM) < 10)?"0"+response.data[0].time1FromMM:response.data[0].time1FromMM)+":00 "+response.data[0].time1FromAM;
								var time1To = response.data[0].time1ToHH+":"+((parseInt(response.data[0].time1ToMM) < 10)?"0"+response.data[0].time1ToMM:response.data[0].time1ToMM)+":00 "+response.data[0].time1ToAM;
	
								var d = new Date();
							  	var d1Start = new Date(d.toLocaleDateString()+" "+time1From);	
							  	var d1End = new Date(d.toLocaleDateString()+" "+time1To);
							  	var d2Start = null; 
						  		var d2End = null;
	
								var dateCurr = new Date(d.toLocaleDateString()+" "+time);
								var time2From = null;
								var time2To = null;
								if(response.data[0].time2FromHH != null && response.data[0].time2FromHH > 0){
									time2From = response.data[0].time2FromHH+":"+((parseInt(response.data[0].time2FromMM) < 10)?"0"+response.data[0].time2FromMM:response.data[0].time2FromMM)+":00 "+response.data[0].time2FromAM;
									time2To = response.data[0].time2ToHH+":"+((parseInt(response.data[0].time2ToMM) < 10)?"0"+response.data[0].time2ToMM:response.data[0].time2ToMM)+":00 "+response.data[0].time2ToAM;
									d2Start = new Date(d.toLocaleDateString()+" "+time2From);	
								  	d2End = new Date(d.toLocaleDateString()+" "+time2To);
								}
								var effectivedate = new Date();
								var effdate = new Date();
								if(response.data[0].rptTimeEffectDate != null ){
									effdate = stringToDate(response.data[0].rptTimeEffectDate);
									effectivedate.setDate(effdate.getDate());
									effectivedate.setMonth(effdate.getMonth());
									effectivedate.setFullYear(effdate.getFullYear());
									if(response.data[0].rptTimeEffectHH != 12 && response.data[0].rptTimeEffectAM == "PM")
									{
									effectivedate.setHours(response.data[0].rptTimeEffectHH+12);
									}
									else
									{effectivedate.setHours(response.data[0].rptTimeEffectHH);}
									
									effectivedate.setMinutes(response.data[0].rptTimeEffectMM);
									effectivedate.setSeconds(0);
								}
								if(response.data[0].rptTimeEffectDate != null && dateCurr < effectivedate)
								{
									status = false;
									jAlert('Report access for more than one month has been restricted for now, Please contact Administrator.',null,function(){
										$('#DDT_TO_DATE').focus();
									});
									return;
								}
								else if((((response.data[0].staffId != null && response.data[0].staffId > 0) && (GLOBAL_DATA.staffId !=undefined && GLOBAL_DATA.staffId != null) && response.data[0].staffId != GLOBAL_DATA.staffId) || (response.data[0].staffId == undefined || response.data[0].staffId == null) || GLOBAL_DATA.staffId == null) )
								{
									if ((dateCurr>d1Start && dateCurr < d1End))
									{	
										status = true;
									}
									else if (time2From != null && time2From > 0 && (dateCurr>d2Start && dateCurr < d2End))
									{	
										status = true;
									}
									else
									{
										if(response.data[0].time1FromAM == "PM" && response.data[0].time1ToAM == "AM"){status = true;}
										else if(time2From != null && (response.data[0].time2FromAM == "PM" && response.data[0].time2ToAM == "AM")){status = true;}
										else{
										status = false;
										jAlert('Report access for more than one month has been restricted for now, Please contact Administrator.',null,function(){
											$('#DDT_TO_DATE').focus();
										});
										return;
										}
									}								
								}							
								if(status)
								{
									ReportService.getDailyTransactionGridDetails(self);
								}
							}
						});						
										
					}
					else
						ReportService.getDailyTransactionGridDetails(self);
				});
				 if(self.reportdet.accountCode == 0 || self.reportdet.accountCode == '' || self.reportdet.accountCode == undefined || self.reportdet.accountCode == null){
					 self.reportdet.agentId = null; 					 
				 }
				 if(self.reportdet.subAgentId == 0 || self.reportdet.subAgentId == '' || self.reportdet.subAgentId == undefined || self.reportdet.subAgentId == null){
					 self.reportdet.subAgentId = null;					 
				 }
				 if(self.reportdet.otsClassId == 0 || self.reportdet.otsClassId == '' || self.reportdet.otsClassId == undefined || self.reportdet.otsClassId == null){
					 self.reportdet.otsClassId = null;					 
				 }
				 if(self.reportdet.transactionTypeId == 0 || self.reportdet.transactionTypeId == '' || self.reportdet.transactionTypeId == undefined || self.reportdet.transactionTypeId == null){
					 self.reportdet.transactionTypeId = null;					 
				 }
				 
			 }
	};
	var dailyTransactionType;
	//Double Click on First Grid (To Load second grid)
	self.fnGetSelectedDailyTransactionDetail = function(rowEntity){	
		self.reportdet.secondMainClassId = rowEntity.nextInputMainClassId;
		self.reportdet.secondClassId=rowEntity.nextInputClassId;
		self.reportdet.transactionType=rowEntity.transactionType;
		self.reportdet.secondSubUserId=rowEntity.nextInputSubUserId;
		self.reportdet.secondLogInId = rowEntity.nextInputLogInId;
		self.reportdet.secondCncategory = rowEntity.cnCategory;
		self.reportdet.agentId = rowEntity.agentId;
		dailyTransactionType = self.reportdet.transactionType;
		ReportService.getSelectDailyTransGridDetail(self);
	};	
	//Print Generation
	self.fnExportPdfDailyTransaction = function(doObject) {
		 jConfirm(FILTER_MSGS.FILTER_VALIDATION.CONFIRM_PRINT,"Warning",function(res){
				if(res){   
					
		doObject.sourceTypeName = ($("#DD_SOURCE_TYPE option:selected").text()!= null && doObject.sourceTypeId > 0) ? $("#DD_SOURCE_TYPE option:selected").text() : null;
		doObject.branchName = ($("#DD_BRANCH option:selected").text()!= null &&  doObject.branchId > 0) ? $("#DD_BRANCH option:selected").text() : null;
		doObject.subAccount=($("#DD_SUB_AGENT option:selected").text()!= null && doObject.subAgentId > 0)  ? $("#DD_SUB_AGENT option:selected").text() : null ;
		doObject.otsMainClassDesc=($("#DD_MAINCLASS option:selected").text()!= null && doObject.otsMainClassId > 0)  ? $("#DD_MAINCLASS option:selected").text() : null ;
		doObject.otsClassDesc=($("#DD_SUBCLASS option:selected").text()!= null && doObject.otsClassId > 0)  ? $("#DD_SUBCLASS option:selected").text() : null ;
		doObject.transactionType = dailyTransactionType;
		var data = JSON.stringify(doObject);	
		var form = $('<form action="'+CONTEXT_PATH+'reports/pdfdailytransactionreport" method="post" target="_blank" >');
		var input =  $('<input type="hidden" name="json"/>').val(data);
		input.appendTo(form);
		form.appendTo('body');
		form.submit();}});
	};	
	//FirstGrid - DT
	columnDefs.totalBranchTranByTellerDet = [  {
		field : 'agentId', visible : false},{
		field : 'sino',				displayName : 'S.No.',				cellClass: 'text-center',		enableColumnMenu : false,width:50	},{

		field : 'transactionType',		displayName : 'Transaction Type',		cellClass: 'text-left',	enableColumnMenu : false,width:170	},{

		field : 'accountCode',		displayName : 'Intermediary Code',		cellClass: 'text-left',	enableColumnMenu : false,width:150	},{
		field : 'agencyName',		displayName : 'Intermediary Name',		cellClass: 'text-left',	enableColumnMenu : false,width:200	},{
		field : 'tellerName',		displayName : 'Created By',		cellClass: 'text-left',	enableColumnMenu : false,width:150	},{
		field : 'otsClassDesc',		displayName : 'Sub Class',		cellClass: 'text-left',	enableColumnMenu : false,width:190	},{
		field : 'totalCases',		displayName : 'Total Cases',		cellClass: 'text-left',	enableColumnMenu : false,width:100	},{

		field : 'grossPremium',		displayName : 'Gross Premium',		cellClass: 'text-right',enableColumnMenu : false,width:150,cellFilter: 'number: 2'	},{
		field : 'gstPremium',		displayName : 'GST On Premium',		cellClass: 'text-right',enableColumnMenu : false,width:150,cellFilter: 'number: 2'	},{
		field : 'stampDuty',		displayName : 'Stamp Duty',			cellClass: 'text-right',enableColumnMenu : false,width:100,cellFilter: 'number: 2'	},{
		field : 'gstTransferAmt',	displayName : 'Transfer Fee',		cellClass: 'text-right',enableColumnMenu : false,width:100,cellFilter: 'number: 2'	},{
		field : 'commission',		displayName : 'Commission',			cellClass: 'text-right',enableColumnMenu : false,width:150,cellFilter: 'number: 2'	},{
		field : 'gstonCommission',	displayName : 'GST On Commission',	cellClass: 'text-right',enableColumnMenu : false,width:150,cellFilter: 'number: 2'	},{
		field : 'totalPremium',		displayName : 'Total Premium',		cellClass: 'text-right',enableColumnMenu : false,width:150,cellFilter: 'number: 2'	},{
		field : 'cnCategory',		displayName : 'CN Category',		cellClass: 'text-left',	enableColumnMenu : false,width:150	},{
		field : 'branchName',		displayName : 'Branch Name',		cellClass: 'text-left',	enableColumnMenu : false,width:200,visible : false	}
		];
	//Second Grid - DT
	columnDefs.totalTranByTellerDet = [ {
		field : 'slNo',				displayName : 'S.No.',				cellClass: 'text-center',		enableColumnMenu : false,width:50	},{
		field : 'tellerName',		displayName : 'Created By',		cellClass: 'text-left',			enableColumnMenu : false,width:150	},{
		field : 'accountCode',		displayName : 'Created For',		cellClass: 'text-left',			enableColumnMenu : false,width:150	},{
		field : 'timeIssued',		displayName : 'Time Issued',		cellClass: 'text-left',			enableColumnMenu : false,width:150	},{
		field : 'supervisor',		displayName : 'Supervisor',			cellClass: 'text-left',			enableColumnMenu : false,width:150	},{
		field : 'customerName',		displayName : 'Customer Name',		cellClass: 'text-left',			enableColumnMenu : false,width:150	},{
		field : 'mainClassDesc',	displayName : 'Class',				cellClass: 'text-left',			enableColumnMenu : false,width:180	},{
		field : 'coverNoteNo',		displayName : 'Cover Note No.',		cellClass: 'text-left',			enableColumnMenu : false,width:150	},{
		field : 'vehicleNo',		displayName : 'Vehicle No.',		cellClass: 'text-left',			enableColumnMenu : false,width:150	},{
		field : 'grossPremium',		displayName : 'Gross Premium',		cellClass: 'text-right',		enableColumnMenu : false,width:200,	cellFilter: 'number: 2'},{
		field : 'gstPremium',		displayName : 'GST On Premium',		cellClass: 'text-right',		enableColumnMenu : false,width:200, cellFilter: 'number: 2'},{
		field : 'stampDuty',		displayName : 'Stamp Duty',			cellClass: 'text-right',		enableColumnMenu : false,width:200,	cellFilter: 'number: 2'},{
		field : 'gstTransferAmt',	displayName : 'Transfer Fee',		cellClass: 'text-right', 		enableColumnMenu : false,width:100,cellFilter: 	'number: 2'	},{	
		field : 'commission',		displayName : 'Commission',			cellClass: 'text-right', 		enableColumnMenu : false,width:150, cellFilter: 'number: 2'},{
		field : 'gstonCommission',	displayName : 'GST On Commission',	cellClass: 'text-right',		enableColumnMenu : false,width:200, cellFilter: 'number: 2'},{
		field : 'totalPremium',		displayName : 'Total Premium',		cellClass: 'text-right',		enableColumnMenu : false,width:200,	cellFilter: 'number: 2'

		}
	];	
/* Daily Transaction Report Details End*/
	
/* System Error Log Report Details Start*/
	//Init Function
	self.setDefaultSystemErrorLogReportDet = function() {
		self.gridAlertInd =false;
		ReportService.errorTypeList(self);
		$("#DD_ERROR_TYPE").focus();
		GridServices.defineGrid(self,null, 'systemErrorLogDetGrid',null,columnDefs.systemErrorLogDet,null, pagination, null);
	};	
	//Search button click(Load Grid)	
	self.fnSearchSystemErrorLogDet = function(){		
	self.systemErrorLogDetGrid.data = [];
	GridServices.bindGrid(self,'reportdet','systemErrorLogDetGrid',null,pagination,null);
	if (self.reportdet.errorTypeId == 0 || self.reportdet.errorTypeId == '' || self.reportdet.errorTypeId == undefined || self.reportdet.errorTypeId == null){
		swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_ERROR_TYPE,"reportdet.errorTypeId");
	}		
	else if (self.reportdet.errorLogDate == null || self.reportdet.errorLogDate == '' || self.reportdet.errorLogDate == undefined){
		swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_DATE,"reportdet.errorLogDate");
	}			
	else{		
		self.reportdet.isPagination = "Y";	
		ReportService.getSystemErrorLogGridDetails(self);
		}		
	};		
	//Export Excel button click - (Excel)
	self.fnExportExcelSystemErrorLog = function(){	
		 jConfirm(FILTER_MSGS.FILTER_VALIDATION.CONFIRM_EXCEL,"Warning",function(res){
				if(res){    
			 if(self.systemErrorLogDetGrid.data.length > 0){
				 document.getElementById('EXCEL_SYS').click();    				
			 }
			 else
				 swal(FILTER_MSGS.FILTER_VALIDATION.NO_DATA_TOEXPORT);
		 	}	 });
	};
	// Date Validation
	self.fnOnChangeDate = function(){
		if(isValidDate(self.reportdet.errorLogDate)){
			if(self.reportdet.errorLogDate!=''){
				if(self.reportdet.errorLogDate!=undefined){
					if(self.reportdet.errorLogDate instanceof Date)
						errorLogDate=dateToString(self.reportdet.errorLogDate);
					else
						errorLogDate=self.reportdet.errorLogDate; 	
					CommonService.getCurrentDate().then(function(response){
						if(stringToDate(errorLogDate)>stringToDate(response.date)){
							self.reportdet.errorLogDate='';
							swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_SYS_TO_DATE,"reportdet.errorLogDate");
						}
					});	
				}else{				
				 	self.reportdet.errorLogDate='';
				}
			}
		}else{				
		 	self.reportdet.errorLogDate='';
		 	$("#DDT_ERROR_LOG_DATE").focus();
		}
	};
	
	//Print button click(PDF)
	self.fnExportPdfSystemErrorLog = function(){
		jConfirm(FILTER_MSGS.FILTER_VALIDATION.CONFIRM_PRINT,"Warning",function(res){
			if(res){ 
				self.reportdet.errorTypeDesc = $("#DD_ERROR_TYPE option:selected").html();
				if(self.systemErrorLogDetGrid.data.length > 0){					
				self.printSystemErrorLog(self.reportdet);		
			}else
				swal(FILTER_MSGS.FILTER_VALIDATION.NO_DATA_TOPRINT);} });
	};
	// Print Generation
	self.printSystemErrorLog = function(doObject) {
		var data = JSON.stringify(doObject);
		var form = $('<form action="'+CONTEXT_PATH+'reports/pdfsystemerrorlogreport" method="post" target="_blank" >');
		var input =  $('<input type="hidden" name="json"/>').val(data);
		input.appendTo(form);
		form.appendTo('body');
		form.submit();
	};	
	//SEL-Grid
	columnDefs.systemErrorLogDet = [ {
		field : 'slNo',				displayName : 'S.No.',				enableColumnMenu : false,width:50,		cellClass: 'text-center'	},{
		field : 'errorMessage',		displayName : 'Error Message',		enableColumnMenu : false,width:400,		cellClass: 'text-left'	},{
		field : 'createdBy',		displayName : 'Created By',			enableColumnMenu : false,width:100,		cellClass: 'text-left'	},{
		field : 'createdOn',		displayName : 'Created On',			enableColumnMenu : false,width:150,		cellClass: 'text-left'	},{
		field : 'errorSource',		displayName : 'Error Source',		enableColumnMenu : false,width:300,		cellClass: 'text-left'	},{		
		field : 'totalRecords',		visible : false	}
	];	
/* System Error Log Report Details End*/
	
/* User Hits Statistics Report Details Start*/
	//Init Function
	self.setDefaultUserHitsStatisticsReportDet = function() {
		if(GLOBAL_DATA.staffId != 0){
			self.reportdet.staffInd="Y";
		}
		$("#LOGIN_NAME").focus();
		ReportService.loadLoginNameList(self);		
		var events = {"ondblclick" : "fnGetSelectedDateUHDetail"};		
		GridServices.defineGrid(self,null, 'userHitsStatisticsFirstGrid',null,columnDefs.userHitsStatisticsFirstGrid,null, null, events);
		GridServices.defineGrid(self,null, 'userHitsStatisticsDetGrid',null,columnDefs.userHitsStatisticsDet,null, pagination, null);
	};
	//from date -user hits validation	
	self.fnOnChangeUserHitFromDate = function() {
		if (self.reportdet.fromDate != undefined && self.reportdet.fromDate.length > 0) {	
			if(isValidDate(self.reportdet.fromDate)){				
				CommonService.getCurrentDate().then(function(response) {
					if (self.reportdet.fromDate instanceof Date){
						fromDate = dateToString(self.reportdet.fromDate);
					}else{
						fromDate = self.reportdet.fromDate;
					}
					if(isValidDate(fromDate)){
						if (stringToDate(fromDate) > stringToDate(response.date)) {
							self.reportdet.fromDate = '';
							self.reportdet.toDate = '';
							swal(FILTER_MSGS.FILTER_VALIDATION.EQUAL_LESS_SYSDATE,"reportdet.fromDate");
							}
					}else{
						self.reportdet.fromDate = '';	
						self.reportdet.toDate='';
					}
				});		
			}
			else{
				self.reportdet.fromDate = '';
			}
		}
	};
	
	//User Hits ng- change to get to date
	self.fnGetUserHitsToDate = function(formObject) {
				CommonService.getCurrentDate().then(function(response) {
				var currDate=response.date;			
				var maxDate = fnDateManipulation(formObject.fromDate,30,"+", "D");			
				if(stringToDate(maxDate) > stringToDate(currDate))
					self.reportdet.toDate = currDate;
				else
					self.reportdet.toDate = maxDate;		
			});			
	};
	
		self.fnGetuserHitsToDate = function() {
		if(isValidDate(self.reportdet.toDate)){
			CommonService.getCurrentDate().then(function(response) {
				var currDate=response.date;			
				var maxDate = fnDateManipulation(self.reportdet.fromDate, 90,"+", "D");				
				 if(stringToDate(currDate) < stringToDate(self.reportdet.toDate)){				
							self.reportdet.toDate = '';
							swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_SYS_TO_DATE);
						}
				else if (self.reportdet.fromDate != null && self.reportdet.fromDate.length > 0 &&(isValidDate(self.reportdet.toDate))) {
					if (stringToDate(self.reportdet.fromDate) > stringToDate(self.reportdet.toDate)) {
						self.reportdet.toDate = '';
						swal(FILTER_MSGS.FILTER_VALIDATION.EQUAL_GREATER_FROMDT,"reportdet.toDate");
					}
					else if(stringToDate(maxDate) < stringToDate(self.reportdet.toDate)){
						self.reportdet.toDate = '';
						swal(FILTER_MSGS.FILTER_VALIDATION.DATE_THIRTY_DIFF,"reportdet.toDate");
					}
				}	
		});
		}	else{
			self.reportdet.toDate = '';
		}	
		};
	//Search button click(Load Grid)	
	self.fnSearchUserHitsStatisticsDet = function(){
		self.userHitsStatisticsFirstGrid.data = [];
		if(self.userHitsStatisticsFirstGrid.data!=undefined)
	    	GridServices.bindGrid(self,'reportdet','userHitsStatisticsFirstGrid',null,pagination,null);		
		if (self.reportdet.logInName == null || self.reportdet.logInName == '' || self.reportdet.logInName == undefined)
			swal(FILTER_MSGS.FILTER_VALIDATION.VALID_TODT.SELECT_LOGIN_NAME,"reportdet.logInName"); 
		else if (self.reportdet.firstLogInId == null || self.reportdet.firstLogInId == '' || self.reportdet.firstLogInId == undefined)
			swal('No Id for this login');
		else if (self.reportdet.fromDate == null || self.reportdet.fromDate == '' || self.reportdet.fromDate == undefined)
			swal(FILTER_MSGS.FILTER_VALIDATION.VALID_FROMDT,"reportdet.fromDate");
		else if (self.reportdet.toDate == null || self.reportdet.toDate == '' || self.reportdet.toDate == undefined)
			swal(FILTER_MSGS.FILTER_VALIDATION.VALID_TODT,"reportdet.toDate");
		else			
			ReportService.getUserHitsStatisticsGridDetails(self);	
	};	
	//Double click function 	
	self.fnGetSelectedDateUHDetail = function(rowEntity){		
			//self.reportdet.userHSGridInd=true;
			self.reportdet.errorLogDate=rowEntity.displayCreatedDate;			
			self.reportdet.secondLogInId=rowEntity.nextInputLogInId;
			ReportService.getUserHitsStatisticsSecondGridDetails(self);	
		};
	//FirstGrid 	
	columnDefs.userHitsStatisticsFirstGrid = [ {
		field : 'slNo',						displayName : 'S.No.',			enableColumnMenu : false,width:50,	cellClass: 'text-center'	},{
		field : 'displayCreatedDate',		displayName : 'Date',			enableColumnMenu : false,			cellClass: 'text-left'	},{
		field : 'nextInputDate',			visible : false	},{
		field : 'accessCounter',			displayName : 'Access Count',	enableColumnMenu : false,			cellClass: 'text-left'	}
	];
	//SecondGrid - User Hits Statistics
	columnDefs.userHitsStatisticsDet = [ {
		field : 'serialNo',			displayName : 'S.No.',				enableColumnMenu : false,width:50,		cellClass: 'text-center'	},{
		field : 'accessedOn',		displayName : 'Accessed On',		enableColumnMenu : false,				cellClass: 'text-left'	},{
		field : 'loginTime',		displayName : 'Login Time',			enableColumnMenu : false,				cellClass: 'text-left'	},{
		field : 'logoutTime',		displayName : 'Logout Time',		enableColumnMenu : false,				cellClass: 'text-left'	}/*,{
		field : 'sessionId',		displayName : 'Session Id',			enableColumnMenu : false,width:350,		cellClass: 'text-left'	}*/,{
		field : 'totalRecords',		visible : false	}	
	];
	//Excel 
	self.fnExcelUserHits =function(){		
		jConfirm(FILTER_MSGS.FILTER_VALIDATION.CONFIRM_EXCEL,"Warning",function(res){
			if(res){
				if(self.userHitsStatisticsFirstGrid.data.length > 0){	
					document.getElementById('EXCEL_DLD').click();  				 
				}
		 else
			 swal(FILTER_MSGS.FILTER_VALIDATION.NO_DATA_TOEXPORT);
	 	} });	
	};
	//Print button click(PDF)
	self.fnExportPdfUserHitsStatistics = function(){
		jConfirm(FILTER_MSGS.FILTER_VALIDATION.CONFIRM_PRINT,"Warning",function(res){
			if(res){
			if(self.userHitsStatisticsDetGrid.data.length > 0){	
				var json = self.reportdet;					
				self.printUserHits(json);		
					
			}else
				swal(FILTER_MSGS.FILTER_VALIDATION.NO_DATA_TOPRINT);} });
	};
	// Print Generation
	self.printUserHits = function(doObject) {
		var data = JSON.stringify(doObject);
		var form = $('<form action="'+CONTEXT_PATH+'reports/pdfuserhitsreportreport" method="post" target="_blank" >');
		var input =  $('<input type="hidden" name="json"/>').val(data);
		input.appendTo(form);
		form.appendTo('body');
		form.submit();
	};		
	// User Hits statistics Date validation
	self.fnOnChangeFromDate = function(){
		if(self.reportdet.fromDate!=''){
			if(self.reportdet.fromDate!=undefined){
				if(self.reportdet.fromDate instanceof Date)
					fromDate=dateToString(self.reportdet.fromDate);
				else
					fromDate=self.reportdet.fromDate;
				CommonService.getCurrentDate().then(function(response){
					if(stringToDate(fromDate)>stringToDate(response.date)){
						swal(FILTER_MSGS.FILTER_VALIDATION.EQUAL_LESS_SYSDATE);
						self.reportdet.fromDate='';
						self.reportdet.toDate='';
						return false;
					}
				});	
			}else{
				//alert(FILTER_MSGS.FILTER_VALIDATION.INVAL_DT);
			 	self.reportdet.fromDate='';
			 	self.reportdet.toDate='';
			 	return false;
			}
		}
		return true;
	};
	
	self.fnOnChangeFromDateVoid = function(){
		if(self.voidpaymentdet.fromDate!=''){
			if(self.voidpaymentdet.fromDate!=undefined){
				if(self.voidpaymentdet.fromDate instanceof Date)
					fromDate=dateToString(self.voidpaymentdet.fromDate);
				else
					fromDate=self.voidpaymentdet.fromDate;
				CommonService.getCurrentDate().then(function(response){
					if(stringToDate(fromDate)>stringToDate(response.date)){
						swal(FILTER_MSGS.FILTER_VALIDATION.EQUAL_LESS_SYSDATE);
						self.voidpaymentdet.fromDate='';
						self.voidpaymentdet.toDate='';
						return false;
					}
				});	
			}else{
				//alert(FILTER_MSGS.FILTER_VALIDATION.INVAL_DT);
			 	self.voidpaymentdet.fromDate='';
			 	self.voidpaymentdet.toDate='';
			 	return false;
			}
		}
		return true;
	};
	
	self.fnOnChangeToDate = function(){
		var toDate = fnDateManipulation(self.reportdet.fromDate,1,"+", "M");
		if(!isValidDate(self.reportdet.toDate))
		{
			self.reportdet.toDate="";
			return false;
		}
		if(self.reportdet.toDate==undefined){			
	 	self.reportdet.toDate='';
		}
		else if(self.reportdet.fromDate!=''&& self.reportdet.fromDate!=undefined){
			if(self.reportdet.fromDate instanceof Date)
				fromDate=dateToString(self.reportdet.fromDate);
			else
				fromDate=self.reportdet.fromDate;				
			if(stringToDate(fromDate)>stringToDate(self.reportdet.toDate)){
				swal(FILTER_MSGS.FILTER_VALIDATION.EQUAL_GREATER_FROMDT);
				self.reportdet.toDate='';
			} 
			else if(stringToDate(toDate) < stringToDate(self.reportdet.toDate)){
				swal(FILTER_MSGS.FILTER_VALIDATION.EQUAL_GREATER_FROMDT);
				self.reportdet.toDate='';
			} 
		} 			
	 };
/* User Hits Statistics Report Details End*/
	
/* Audit Log Report Details Start*/
	//Init Function	AL-1(User Id & Access Rights) 
	self.setDefaultAuditUserAccessRightsDet = function() {
		self.reportdet.id = "AUDIT_LOG_RPT";
		
		if(GLOBAL_DATA.staffId != 0){
			self.reportdet.staffInd="Y";
		}
		$("#DD_BRANCH").focus();
		self.gridAlertInd=false;		
		self.fnLoadRptSourceTypes();
		if(self.staffId == 0){
			self.reportdet.sourceTypeId = 1;
		}
		ReportService.loadBranchList(self);
		GridServices.defineGrid(self,null, 'userIdAccessRightsDetGrid',null,columnDefs.userIdAccessRightsDet,null, pagination, null);
	};
	
	//Search button click AL1(User Id & Access Rights) - (Load Grid)
	self.fnSearchUserIdAccessRightsDet = function(){
		self.reportdet.branchName = $("#DD_BRANCH option:selected").html();
		GridServices.defineGrid(self,null, 'userIdAccessRightsDetGrid',null,columnDefs.userIdAccessRightsDet,null, pagination, null);
		if(self.reportdet.sourceTypeId == undefined || self.reportdet.sourceTypeId == null || self.reportdet.sourceTypeId == 0 || self.reportdet.sourceTypeId == ''){
			swal("Please Select Source Type","reportdet.sourceTypeId");
		}
		else if(self.reportdet.branchId=='' || self.reportdet.branchId== undefined )	
		{		
			swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_BRANCH,"reportdet.branchId");				
		}			
		else if(self.reportdet.accountCode=='' || self.reportdet.accountCode== undefined){
			swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_ACCCODE,"reportdet.accountCode");
		}	
		else{			
			ReportService.getUserIdAccessRightsGridDetails(self);	
		}
	};
	//Export Excel button click AL1(User Id & Access Rights) - (Excel)
	self.fnExportExcelUserIdAccessRights = function(){	
		jConfirm(FILTER_MSGS.FILTER_VALIDATION.CONFIRM_EXCEL,"Warning",function(res){
			if(res){
				if(self.userIdAccessRightsDetGrid.data.length > 0){
					document.getElementById('EXCEL_DLD').click();  				 
				}
			 else
				 swal(FILTER_MSGS.FILTER_VALIDATION.NO_DATA_TOEXPORT);
					} });			 
		 	};	
	//Print button click AL1(User Id & Access Rights) - (PDF)
	self.fnExportPdfUserIdAccessRights = function(){
		jConfirm(FILTER_MSGS.FILTER_VALIDATION.CONFIRM_PRINT,"Warning",function(res){
			if(res){
				if(self.userIdAccessRightsDetGrid.data.length > 0){
					self.printAccessRights(self.reportdet);					
				}
				else
					swal(FILTER_MSGS.FILTER_VALIDATION.NO_DATA_TOPRINT);
			}
			});	
	};	
	//Print Generation
	self.printAccessRights = function(doObject) {
		var data = JSON.stringify(doObject);
		var form = $('<form action="'+CONTEXT_PATH+'reports/pdfaccessrights" method="post" target="_blank" >');
		var input =  $('<input type="hidden" name="json"/>').val(data);
		input.appendTo(form);
		form.appendTo('body');
		form.submit();
	};		
	//Grid - AL1(User Id & Access Rights)
	columnDefs.userIdAccessRightsDet = [ {
		field : 'slNo',displayName : 'S.No.',enableColumnMenu : false,cellClass:'text-center',width:50},{
		field : 'branchName',displayName : 'Branch Name',cellClass:'text-left',enableColumnMenu : false,width:220},{
		field : 'agentName',displayName : 'User / Intermediary Name',cellClass:'text-left',enableColumnMenu : false,width:350},{
		field : 'userName',displayName : 'User Id / Intermediary Code',cellClass:'text-left',enableColumnMenu : false,width:250},{
		field : 'subUserName',displayName : 'Sub User Name',cellClass:'text-left',enableColumnMenu : false,width:250},{
		field : 'roleName',displayName : 'Role Name',cellClass:'text-left',enableColumnMenu : false,width:200},{
		field : 'statusGrid',displayName : 'Status',cellClass:'text-left',enableColumnMenu : false,width:80},{
		field : 'totalRecords', visible : false}
	];	
	//Audit Log - UserId & Access Rights
	self.resetAuditLogUserIdAccess = function (){
		jConfirm(FILTER_MSGS.FILTER_VALIDATION.CONFIRM_RESET,"Warning",function(res){
			if(res){
			$state.reload(); }
			});		
	};
		
	//Init Function - AL2(Inactive & Dormant User)
	self.setDefaultAuditInActiveDmantUserDet = function() {
		if(GLOBAL_DATA.staffId != 0){
			self.reportdet.staffInd="Y";
		}
		$("#DD_USER_TYPE_ID").focus();
		self.gridAlertInd=false;
		FilterSearchService.loadUserTypeItemList(self);
		self.fnLoadRptSourceTypes();
		if(self.staffId == 0){
			self.reportdet.sourceTypeId = 1;
			ReportService.loadBranchList(self);
		}
		GridServices.defineGrid(self,null, 'inActiveDormantUserDetGrid',null,columnDefs.inActiveDormantUserDet,null, pagination, null);
	};
	
	//Search button click AL2(Inactive & Dormant User) - (Load Grid)
	self.fnSearchInActiveDmantUserDet = function(){
		self.inActiveDormantUserDetGrid.data = [];
		if(self.reportdet.userTypeIdForm == '' || self.reportdet.userTypeIdForm == undefined)
			swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_USER_TYPE,"reportdet.userTypeIdForm");
		else if(self.reportdet.sourceTypeId == undefined || self.reportdet.sourceTypeId == null || self.reportdet.sourceTypeId == 0 || self.reportdet.sourceTypeId == '')
			swal("Please Select Source Type","reportdet.sourceTypeId");
		else if (self.reportdet.branchId == '' || self.reportdet.branchId == undefined)
			swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_BRANCH,"reportdet.branchId");
		else		
			ReportService.getInActiveDmantUserGridDetails(self);				
	};
	//Export Excel button click AL2(Inactive & Dormant User) - (Excel)
	self.fnExportExcelActiveDmantUser = function(){	
		jConfirm(FILTER_MSGS.FILTER_VALIDATION.CONFIRM_EXCEL,"Warning",function(res){
			if(res){
			 if(self.inActiveDormantUserDetGrid.data.length > 0){
				 document.getElementById('EXCEL_DLD').click();    
			 }
		 else
			 swal(FILTER_MSGS.FILTER_VALIDATION.NO_DATA_TOEXPORT);}
		});	
	};	
	//Print button click AL2(Inactive & Dormant User) - (Print)
	self.fnExportPdfInActiveDmantUser = function(){	
		jConfirm(FILTER_MSGS.FILTER_VALIDATION.CONFIRM_PRINT,"Warning",function(res){
			if(res){
		self.reportdet.branchName = $("#DD_BRANCH option:selected").html();
			if(self.inActiveDormantUserDetGrid.data.length > 0){		
				self.printInactiveDment(self.reportdet);
			}else
				swal(FILTER_MSGS.FILTER_VALIDATION.NO_DATA_TOPRINT);
		} });
	};
	// Print Generation
	self.printInactiveDment = function(doObject) {		
		var data = JSON.stringify(doObject);
		var form = $('<form action="'+CONTEXT_PATH+'reports/pdfactivedment" method="post" target="_blank" >');
		var input =  $('<input type="hidden" name="json"/>').val(data);
		input.appendTo(form);
		form.appendTo('body');
		form.submit();
	};	
	//Grid - AL2(Inactive & Dormant User)
	columnDefs.inActiveDormantUserDet = [ {
		field : 'slNo',					displayName : 'S.No.',					enableColumnMenu : false,cellClass:'text-center',width:50	},{
		field : 'userType',				displayName : 'User Type',				enableColumnMenu : false,cellClass:'text-left',width:120	},{
		field : 'branchName',			displayName : 'Branch Name',			enableColumnMenu : false,cellClass:'text-left',width:130	},{
		field : 'userName',				displayName : 'User / Intermediary Name',		enableColumnMenu : false,cellClass:'text-left',width:250	},{
		field : 'userIdGrid',			displayName : 'User Id / Intermediary Code',	enableColumnMenu : false,cellClass:'text-left',width:250	},{
		field : 'lastLoginDate',		displayName : 'Last Login Date',		enableColumnMenu : false,cellClass:'text-left',width:120	},{
		field : 'noofInactiveDays',		displayName : 'No.of In-Active Days',	enableColumnMenu : false,cellClass:'text-center',width:150	},{
		field : 'statusGrid',			displayName : 'User Status',			enableColumnMenu : false,cellClass:'text-left',width:100	}
	];
	//Audit Log - Inactive Dormant User
	self.resetAuditInactivieDormant = function (){	
		jConfirm(FILTER_MSGS.FILTER_VALIDATION.CONFIRM_RESET,"Warning",function(res){
				if(res){
		$state.reload();} });
	};
		
	//Init Function -  AL3(Invalid Sign on Attempt)
	self.setDefaultAuditInValidSignAttemptDet = function() {
		if (GLOBAL_DATA.staffId != 0) {
			self.reportdet.staffInd = "Y";
		}
		self.gridAlertInd=false;
		self.fnLoadRptSourceTypes();
		ReportService.loadBranchList(self);
		if(self.staffId == 0){
			self.reportdet.sourceTypeId = 1;
			ReportService.loadBranchList(self);
		}
		FilterSearchService.loadUserTypeItemList(self);
		GridServices.defineGrid(self,null, 'inValidSignAttemptUserDetGrid', null,columnDefs.inValidSignAttemptUserDet, null, pagination, null);
	};	
	//Search button click AL3(Invalid Sign on Attempt) - (Load Grid)
	self.fnSearchInValidSignAttemptUserDet = function(){
		self.inValidSignAttemptUserDetGrid.data=[];
		/*if(self.reportdet.branchId== '' || self.reportdet.branchId == undefined || self.reportdet.branchId == null)
			swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_BRANCH,"reportdet.branchId");
		else*/ 
		if (self.reportdet.userTypeIdForm == '' || self.reportdet.userTypeIdForm == undefined || self.reportdet.userTypeIdForm == null)
			swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_USER_TYPE,"reportdet.userTypeIdForm");
		else if(self.reportdet.sourceTypeId == undefined || self.reportdet.sourceTypeId == null || self.reportdet.sourceTypeId == 0 || self.reportdet.sourceTypeId == '')
			swal("Please Select Source Type","reportdet.sourceTypeId");
		else if (self.reportdet.branchId == '' || self.reportdet.branchId == undefined)
			swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_BRANCH,"reportdet.branchId");
		else if (self.reportdet.fromDate == '' || self.reportdet.fromDate == undefined || self.reportdet.fromDate == null)
			swal(FILTER_MSGS.FILTER_VALIDATION.VALID_FROMDT,"reportdet.fromDate");
		else if (self.reportdet.toDate == '' || self.reportdet.toDate == undefined || self.reportdet.toDate == null)
			swal(FILTER_MSGS.FILTER_VALIDATION.VALID_TODT,"reportdet.toDate");
		else		
			ReportService.getInValidSignAttemptUserGridDetails(self);		
	};	
	//Export Excel button click AL3(Invalid Sign on Attempt) - (Excel)
	self.fnExportExcelInvalidSignOnAttempt = function(){	
		jConfirm(FILTER_MSGS.FILTER_VALIDATION.CONFIRM_EXCEL,"Warning",function(res){
			if(res){
			 if(self.inValidSignAttemptUserDetGrid.data.length > 0){
				 document.getElementById('EXCEL_DLD').click();    					
			 }else{
				 swal(FILTER_MSGS.FILTER_VALIDATION.NO_DATA_TOEXPORT);
			 } } });
	};	
	//Print button click AL3(Invalid Sign on Attempt) - (Print)
	self.fnExportPdfInvalidSignonAttempt = function(){	
		jConfirm(FILTER_MSGS.FILTER_VALIDATION.CONFIRM_PRINT,"Warning",function(res){
			if(res){
		self.reportdet.branchName = $("#DD_BRANCH option:selected").html();
			if(self.inValidSignAttemptUserDetGrid.data.length > 0){								
				self.printInvalidSignonAttempt(self.reportdet);					
			}else
				swal(FILTER_MSGS.FILTER_VALIDATION.NO_DATA_TOPRINT);
		} });
	};  
	// Print Generation
	self.printInvalidSignonAttempt = function(doObject) {		
		var data = JSON.stringify(doObject);
		var form = $('<form action="'+CONTEXT_PATH+'reports/pdfinvalidsignattempt" method="post" target="_blank" >');
		var input =  $('<input type="hidden" name="json"/>').val(data);
		input.appendTo(form);
		form.appendTo('body');
		form.submit();
	};
	self.fnGetALInvalidToDate = function(formObject){		
		CommonService.getCurrentDate().then(function(response) {
			var currDate=response.date;			
			var maxDate = fnDateManipulation(formObject.fromDate,1,"+", "M");			
			if(stringToDate(maxDate) > stringToDate(currDate))
				self.reportdet.toDate = currDate;
			else
				self.reportdet.toDate = maxDate;		
		});
	};
	
	self.fnOnChangeALInvalidToDate = function(formObject)
	{
		CommonService.getCurrentDate().then(function(response) {
		var currDate=response.date;			
		var maxDate = fnDateManipulation(self.reportdet.fromDate, 1,"+", "M");				
		 if(stringToDate(currDate) < stringToDate(self.reportdet.toDate)){				
					self.reportdet.toDate = '';
					swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_SYS_TO_DATE,"reportdet.toDate");
				}
		else if (self.reportdet.fromDate != null && self.reportdet.fromDate.length > 0 &&(isValidDate(self.reportdet.toDate))) {
			if (stringToDate(self.reportdet.fromDate) > stringToDate(self.reportdet.toDate)) {
				self.reportdet.toDate = '';
				swal(FILTER_MSGS.FILTER_VALIDATION.EQUAL_GREATER_FROMDT,"reportdet.toDate");
			}
			else if(stringToDate(maxDate) < stringToDate(self.reportdet.toDate)){
				self.reportdet.toDate = '';
				swal(FILTER_MSGS.FILTER_VALIDATION.DATE_ONE_DIFF,"reportdet.toDate");
			}		
		}	});

		};
		//Grid - AL3(Invalid Sign on Attempt)
		columnDefs.inValidSignAttemptUserDet = [ {
			field : 'slNo',				displayName : 'S.No.',					cellClass: 'text-center',		enableColumnMenu : false,width:50		},{
			field : 'branchName',		displayName : 'Branch Name',			cellClass: 'text-left',			enableColumnMenu : false,width:150		},{
			field : 'userName',			displayName : 'User / Intermediary Name',		cellClass: 'text-left',			enableColumnMenu : false,width:250		},{
			field : 'userIdGrid',		displayName : 'User Id / Intermediary Code',	cellClass: 'text-left',			enableColumnMenu : false,width:250		},{
			field : 'attemptDateTime',	displayName : 'Last Attempt Date Time',	cellClass: 'text-left',			enableColumnMenu : false,width:250		},{
			field : 'noofInactiveDays',	displayName : 'No.of Attempts',			cellClass: 'text-left',			enableColumnMenu : false,width:150		},{
			field : 'userType',			displayName : 'User Type',				cellClass: 'text-left',			enableColumnMenu : false,width:150		}
		];
	
	//Audit Log - Invalid Sign On Attempt
	self.resetAuditInavalidSignOnAttempt = function (){	
		jConfirm(FILTER_MSGS.FILTER_VALIDATION.CONFIRM_PRINT,"Warning",function(res){
			if(res){		
		$state.reload(); } });
	};
	//Audit Log - Access Matrix
	self.fnExcelAlaccess = function(){		
			jConfirm(FILTER_MSGS.FILTER_VALIDATION.CONFIRM_EXCEL,"Warning",function(res){
				if(res){
				 document.getElementById('EXCEL_DLD').click();    
		}		});
	};
	/*self.resetAuditAccessMatrix = function() {
		if(confirm(FILTER_MSGS.FILTER_VALIDATION.CONFIRM_RESET)){
		if (GLOBAL_DATA.staffId != 0) {
			self.reportdet.branchId = "";
		}		
		self.reportdet.fromDate = null;
		self.reportdet.toDate = null;
		self.accessMatrixDetGrid.data = [];}
	};
	
	
	//Init Function -  AL4(Access Matrix)
	self.setDefaultAuditAccessMatrixDet = function() {
		if (GLOBAL_DATA.staffId != 0) {
			self.reportdet.staffInd = "Y";
		}
		ReportService.loadBranchList(self);
		GridServices.defineGrid(self,null, 'accessMatrixDetGrid',null,columnDefs.accessMatrixDet,null, null, null);
	};	
	//Search button click AL4(Access Matrix) - (Load Grid)
	self.fnSearchAccessMatrixDet = function(){
		if (self.reportdet.fromDate == '' || self.reportdet.fromDate == undefined || self.reportdet.fromDate == null)
			alert(FILTER_MSGS.FILTER_VALIDATION.VALID_FROMDT);
		else if (self.reportdet.toDate == '' || self.reportdet.toDate == undefined || self.reportdet.toDate == null)
			alert(FILTER_MSGS.FILTER_VALIDATION.VALID_TODT);
		ReportService.getAccessMatrixGridDetails(self);
	};	
	//Grid - AL4(Access Matrix)
	columnDefs.accessMatrixDet = [ {
		field : 'slNo',
		displayName : 'S.No.',
		cellClass: 'text-center',
		enableColumnMenu : false,width:50
	},{
		field : 'userIdGrid',
		displayName : 'Agent / Staff Code',
		cellClass: 'text-left',
		enableColumnMenu : false,width:250
	},{
		field : 'menuGrid',
		displayName : 'Menu',
		cellClass: 'text-left',
		enableColumnMenu : false,width:250
	},{
		field : 'subMenuGrid',
		displayName : 'Sub Menu',
		cellClass: 'text-left',
		enableColumnMenu : false,width:250
	},{
		field : 'attemptDateTime',
		displayName : 'Access Date Time',
		cellClass: 'text-left',
		enableColumnMenu : false,width:250
	},{
		field : 'userType',
		displayName : 'Login Type',
		cellClass: 'text-left',
		enableColumnMenu : false,width:250
	}
	];*/
	
	//Audit Log - User Id Maintenance
	self.resetAuditUserIdMaintenance = function() {
		jConfirm(FILTER_MSGS.FILTER_VALIDATION.CONFIRM_RESET,"Warning",function(res){
				if(res){
		$state.reload();} });
	};

	
	//Init Function - AL5(UserId Maintenance)
	self.setDefaultAuditUserIdMaintenanceDet = function() {
		self.gridAlertInd = false;
		FilterSearchService.loadUserTypeItemList(self);
		GridServices.defineGrid(self,null, 'userIdMaintenanceDetGrid',null,columnDefs.userIdMaintenanceDet,null, pagination, null);
	};	
	//Search button click AL5(UserId Maintenance)- (Load Grid)
	self.fnSearchUserIdMaintenanceDet = function(){
		self.userIdMaintenanceDetGrid.data=[];
		if (self.reportdet.fromDate == '' || self.reportdet.fromDate == undefined || self.reportdet.fromDate == null)
			{			
			swal(FILTER_MSGS.FILTER_VALIDATION.VALID_FROMDT,"reportdet.fromDate");
			}			
		else if (self.reportdet.toDate == '' || self.reportdet.toDate == undefined || self.reportdet.toDate == null){
			swal(FILTER_MSGS.FILTER_VALIDATION.VALID_TODT,"reportdet.toDate");
		}			
		else if (self.reportdet.userTypeIdForm == '' || self.reportdet.userTypeIdForm == undefined || self.reportdet.userTypeIdForm == null){
			swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_USER_TYPE,"reportdet.userTypeIdForm");
		}							 
		else{
			self.reportdet.isPagination = "Y";
			ReportService.getUserIdMaintenanceGridDetails(self);
		}	
					
	};	
	//Export Excel button click AL5(UserId Maintenance)- (Excel)
	self.fnExportExcelUserIdMaintanance = function(){	
		jConfirm(FILTER_MSGS.FILTER_VALIDATION.CONFIRM_EXCEL,"Warning",function(res){
				if(res){			
			 if(self.userIdMaintenanceDetGrid.data.length > 0){
				 document.getElementById('EXCEL_DLD').click();    
			 }
			 else
				 swal(FILTER_MSGS.FILTER_VALIDATION.NO_DATA_TOEXPORT);
		 	} });	
	};
	//Print button click AL5(UserId Maintenance)- (Print)
	self.fnExportPdfUserIdMaintanance = function(response){	
			jConfirm(FILTER_MSGS.FILTER_VALIDATION.CONFIRM_PRINT,"Warning",function(res){
				if(res){
			self.reportdet.userTypeDesc = $("#USER_TYPE option:selected").html();
			if(self.userIdMaintenanceDetGrid.data.length > 0){		
				self.printUserIdMaintanance(response);
			}else
				swal(FILTER_MSGS.FILTER_VALIDATION.NO_DATA_TOPRINT);
		} });
	}; 
	// Print Generation
	self.printUserIdMaintanance = function(doObject) {		
		var data = JSON.stringify(doObject);
		var form = $('<form action="'+CONTEXT_PATH+'reports/pdfaudituseridmaintenance" method="post" target="_blank" >');
		var input =  $('<input type="hidden" name="json"/>').val(data);
		input.appendTo(form);
		form.appendTo('body');
		form.submit();
	};	
	//Grid - AL5(UserId Maintenance)
	columnDefs.userIdMaintenanceDet = [ {
		field : 'slNo',						displayName : 'S.No.',						cellClass: 'text-center',	enableColumnMenu : false,width:50	},{
		field : 'createModifiedDate',		displayName : 'Create / Modified Date',		cellClass: 'text-left',		enableColumnMenu : false,width:250	},{
		field : 'updatedByCode',			displayName : 'Change By User Code',		cellClass: 'text-left',		enableColumnMenu : false,width:250	},{
		field : 'updatedByName',			displayName : 'Change By User Name',		cellClass: 'text-left',		enableColumnMenu : false,width:250	},{
		field : 'affectedUserCode',			displayName : 'Affected User Code',			cellClass: 'text-left',		enableColumnMenu : false,width:250	},{
		field : 'affectedUserName',			displayName : 'Affected User Name',			cellClass: 'text-left',		enableColumnMenu : false,width:250	},{
		field : 'branchName',				displayName : 'Branch Name',				cellClass: 'text-left',		enableColumnMenu : false,width:250	},{
		field : 'userType',					displayName : 'User Type',					cellClass: 'text-left',		enableColumnMenu : false,width:100	},{
		field : 'maintenanceType',			displayName : 'Maintenance Type',			cellClass: 'text-left',		enableColumnMenu : false,width:100
	}
	];
		
	//Audit Log - Security Setting
	self.resetAuditSecuritSetting = function() {
		jConfirm(FILTER_MSGS.FILTER_VALIDATION.CONFIRM_RESET,"Warning",function(res){
			if(res){		
		$state.reload();} });
	};	
	
	//Init Function - AL6(SecuritySetting Change)
	self.setDefaultAuditSecuritySettingChgeDet = function() {
		self.gridAlertInd=false;
		GridServices.defineGrid(self,null, 'securitySettingChgeDetGrid',null,columnDefs.securitySettingChgeDet,null, pagination, null);
	};	
	//Search button click  AL6(SecuritySetting Change)- (Load Grid)
	self.fnSearchSecuritySettingChgeDet = function(){		
		self.securitySettingChgeDetGrid.data=[];
		if (self.reportdet.fromDate == '' || self.reportdet.fromDate == undefined || self.reportdet.fromDate == null)
			swal(FILTER_MSGS.FILTER_VALIDATION.VALID_FROMDT,"reportdet.fromDate");
		else if (self.reportdet.toDate == '' || self.reportdet.toDate == undefined || self.reportdet.toDate == null)
			swal(FILTER_MSGS.FILTER_VALIDATION.VALID_TODT,"reportdet.toDate");
		else{
			self.reportdet.isPagination = "Y";
			ReportService.getSecuritySettingChgeGridDetails(self);
		}							
	};	
	//Export Excel button click  AL6(SecuritySetting Change)- (Excel)
	self.fnExportExcelSecuritSettings = function(){	
		jConfirm(FILTER_MSGS.FILTER_VALIDATION.CONFIRM_EXCEL,"Warning",function(res){
			if(res){	
			 if(self.securitySettingChgeDetGrid.data.length > 0){
				 document.getElementById('EXCEL_SECURITY').click(); 
				 }
			 else
				 swal(FILTER_MSGS.FILTER_VALIDATION.NO_DATA_TOEXPORT);		 
			 } });
		};	
	//Print button click  AL6(SecuritySetting Change)- (Print)
	self.fnExportPdfSecuritySettingChange = function(){			
			jConfirm(FILTER_MSGS.FILTER_VALIDATION.CONFIRM_PRINT,"Warning",function(res){
				if(res){	
			if(self.securitySettingChgeDetGrid.data.length > 0){		
				self.printSecuritySettingChange(self.reportdet);	
				}else
					swal(FILTER_MSGS.FILTER_VALIDATION.NO_DATA_TOPRINT);	} });
		};		
	//Print Generation
	self.printSecuritySettingChange = function(doObject) {		
		var data = JSON.stringify(doObject);
		var form = $('<form action="'+CONTEXT_PATH+'reports/pdfsecuritysettingchange" method="post" target="_blank" >');
		var input =  $('<input type="hidden" name="json"/>').val(data);
		input.appendTo(form);
		form.appendTo('body');
		form.submit();
	};	
	//Grid -  AL6(SecuritySetting Change)
	columnDefs.securitySettingChgeDet = [ {
		field : 'slNo',				cellClass: 'text-center',	displayName : 'S.No.',									enableColumnMenu : false,width:50	}/*,{	
		field : 'userType',			cellClass: 'text-left',		displayName : 'Application Type',						enableColumnMenu : false,width:150	}*/,{
		field : 'userName',		cellClass: 'text-left',		displayName : 'User Id / Intermediary Code',			enableColumnMenu : false,width:250	},{			
		field : 'intermediaryName',		cellClass: 'text-left',		displayName : 'User Id / Intermediary Name',			enableColumnMenu : false,width:250	},{
		field : 'multipleSession',	cellClass: 'text-left',		displayName : 'Multiple Session',						enableColumnMenu : false,width:130	},{
		field : 'noofInactiveDays',	cellClass: 'text-left',		displayName : 'Dormant User Days',						enableColumnMenu : false,width:250	},{
		field : 'loginAttempt',		cellClass: 'text-left',		displayName : 'Unsuccessful Login Attempt',				enableColumnMenu : false,width:200	},{
		field : 'passwordRecycle',	cellClass: 'text-left',		displayName : 'Password Recycle',						enableColumnMenu : false,width:150	},{
		field : 'passwordExpiry',	cellClass: 'text-left',		displayName : 'Password Expiry',						enableColumnMenu : false,width:150	},{
		field : 'minPasswordLength',cellClass: 'text-left',		displayName : 'Minimum Password Length',				enableColumnMenu : false,width:250	},{
		field : 'intialPwdChange',	cellClass: 'text-left',		displayName : 'Intial Password Change',					enableColumnMenu : false,width:180	},{
		field : 'promptPwdChange',	cellClass: 'text-left',		displayName : 'Prompt Password Change (days before)',	enableColumnMenu : false,width:250	},{
		field : 'pwdChangePeriod',	cellClass: 'text-left',		displayName : 'Min. Period To Change Password (hours)',	enableColumnMenu : false,width:280	},{
		field : 'statusGrid',		cellClass: 'text-left',		displayName : 'Status',									enableColumnMenu : false,width:100	}
	];	
/* Audit Log Report Details End*/
/*DAILY ENDORSEMENT REPORT STARTS*/
	self.setDefaultDailyEndReportDet = function() {		
		if(GLOBAL_DATA.staffId != 0){
			self.reportdet.staffInd="Y";
		}
		$("#DD_BRANCH_ID").focus();
		self.reportdet.gridAlertInd=false;
		self.reportdet.gridAlertInd1=false;
		self.reportdet.gridAlertInd2=false;
		self.fnLoadRptSourceTypes();
		if(self.staffId == 0){
			self.reportdet.sourceTypeId = 1;
			ReportService.loadDlyTransBranch(self);
		}
		ReportService.loadPaymentType(self);
		
		CommonService.getCurrentDate().then(function(response) {
			var currDate=response.date;
			var date = stringToDate(currDate);
			date.setDate(date.getDate() - 30);
			
			self.reportdet.toDate = currDate;			
			self.reportdet.fromDate = dateToString(date);
		});
		
		var pagination = {pageSizes :[10,20,50,100],page:10};

		GridServices.defineGrid(self,null, 'dailyEndReportDetGrid',gridSettings,columnDefs.dailyEndReportDet,null,pagination, null);
		GridServices.defineGrid(self,null, 'dailyEndReportDetGrid1',null,columnDefs.dailyEndReportDet1,null, null, null);
		GridServices.defineGrid(self,null, 'dailyEndReportDetGrid2',null,columnDefs.dailyEndReportDet2,null, null, null);		
	};
	
	self.fnSearchDailyEndorDet=function(){
		var status=true;
		if(self.reportdet.sourceTypeId == undefined || self.reportdet.sourceTypeId == null || self.reportdet.sourceTypeId == 0 || self.reportdet.sourceTypeId == ''){
			swal("Please Select Source Type","reportdet.sourceTypeId");
			status=false;	
		}
		else if (self.reportdet.branchId == 0 || self.reportdet.branchId == ''|| self.reportdet.branchId == undefined || self.reportdet.branchId == null)
			{	swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_BRANCH,"reportdet.branchId");
				status=false;	}
	/*	else if (self.reportdet.accountCode == 0 || self.reportdet.accountCode == ''|| self.reportdet.accountCode == undefined || self.reportdet.accountCode == null)
			{	swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_ACCCODE,"reportdet.accountCode");
				status=false;	}*/
		else if (self.reportdet.fromDate == null || self.reportdet.fromDate == ''|| self.reportdet.fromDate == undefined)
			{	swal(FILTER_MSGS.FILTER_VALIDATION.VALID_FROMDT,"reportdet.fromDate");
				status=false;	}
		else if (self.reportdet.toDate == null || self.reportdet.toDate == ''|| self.reportdet.toDate == undefined)
			{	swal(FILTER_MSGS.FILTER_VALIDATION.VALID_TODT,"reportdet.toDate");
				status=false;	}
		
		if(status==true)
			{	 
			status = true;
			CommonService.getCurrentDate().then(function(response) {
				var time = response.time;
				var menuId = 156;
				time = time.toLocaleString('en-US', { hour: 'numeric',minute:'numeric', hour24: true });

				var maxDate = fnDateManipulation(self.reportdet.fromDate, 6,"+", "M");
				var chkIfOneMonth = fnDateManipulation(self.reportdet.fromDate, 1,"+", "M");

				if(stringToDate(chkIfOneMonth) < stringToDate(self.reportdet.toDate) && stringToDate(maxDate) >= stringToDate(self.reportdet.toDate))
				{		
					$http.post(CONTEXT_PATH+'reports/loadReportGenTimeDet',''+menuId).then(function(response) {
						if(response.data != null && response.data.length > 0){
							self.reportTimeList = response.data;
							
							var time1From = response.data[0].time1FromHH+":"+((parseInt(response.data[0].time1FromMM) < 10)?"0"+response.data[0].time1FromMM:response.data[0].time1FromMM)+":00 "+response.data[0].time1FromAM;
							var time1To = response.data[0].time1ToHH+":"+((parseInt(response.data[0].time1ToMM) < 10)?"0"+response.data[0].time1ToMM:response.data[0].time1ToMM)+":00 "+response.data[0].time1ToAM;

							var d = new Date();
						  	var d1Start = new Date(d.toLocaleDateString()+" "+time1From);	
						  	var d1End = new Date(d.toLocaleDateString()+" "+time1To);
						  	var d2Start = null; 
					  		var d2End = null;

							var dateCurr = new Date(d.toLocaleDateString()+" "+time);
							var time2From = null;
							var time2To = null;
							if(response.data[0].time2FromHH != null && response.data[0].time2FromHH > 0){
								time2From = response.data[0].time2FromHH+":"+((parseInt(response.data[0].time2FromMM) < 10)?"0"+response.data[0].time2FromMM:response.data[0].time2FromMM)+":00 "+response.data[0].time2FromAM;
								time2To = response.data[0].time2ToHH+":"+((parseInt(response.data[0].time2ToMM) < 10)?"0"+response.data[0].time2ToMM:response.data[0].time2ToMM)+":00 "+response.data[0].time2ToAM;
								d2Start = new Date(d.toLocaleDateString()+" "+time2From);	
							  	d2End = new Date(d.toLocaleDateString()+" "+time2To);
							}
							var effectivedate = new Date();
							var effdate = new Date();
							if(response.data[0].rptTimeEffectDate != null ){
								effdate = stringToDate(response.data[0].rptTimeEffectDate);
								effectivedate.setDate(effdate.getDate());
								effectivedate.setMonth(effdate.getMonth());
								effectivedate.setFullYear(effdate.getFullYear());
								if(response.data[0].rptTimeEffectHH != 12 && response.data[0].rptTimeEffectAM == "PM")
								{
								effectivedate.setHours(response.data[0].rptTimeEffectHH+12);
								}
								else
								{effectivedate.setHours(response.data[0].rptTimeEffectHH);}
								
								effectivedate.setMinutes(response.data[0].rptTimeEffectMM);
								effectivedate.setSeconds(0);
							}
							if(response.data[0].rptTimeEffectDate != null && dateCurr < effectivedate)
							{
								status = false;
								jAlert('Report access for more than one month has been restricted for now, Please contact Administrator.',null,function(){
									$('#DDT_TO_DATE').focus();
								});
								return;
							}
							else if((((response.data[0].staffId != null && response.data[0].staffId > 0) && (GLOBAL_DATA.staffId !=undefined && GLOBAL_DATA.staffId != null) && response.data[0].staffId != GLOBAL_DATA.staffId) || (response.data[0].staffId == undefined || response.data[0].staffId == null) || GLOBAL_DATA.staffId == null) )
							{
								if ((dateCurr>d1Start && dateCurr < d1End))
								{	
									status = true;
								}
								else if (time2From != null && time2From > 0 && (dateCurr>d2Start && dateCurr < d2End))
								{	
									status = true;
								}
								else
								{
									if(response.data[0].time1FromAM == "PM" && response.data[0].time1ToAM == "AM"){status = true;}
									else if(time2From != null && (response.data[0].time2FromAM == "PM" && response.data[0].time2ToAM == "AM")){status = true;}
									else{
									status = false;
									jAlert('Report access for more than one month has been restricted for now, Please contact Administrator.',null,function(){
										$('#DDT_TO_DATE').focus();
									});
									return;
									}
								}								
							}							
							if(status)
							{
								ReportService.getDailyEndorGridDetFirst(self);
							}
						}
					});						
									
				}
				else
					ReportService.getDailyEndorGridDetFirst(self);
			});
			}
		else {GridServices.bindGrid(self,'reportdet','dailyEndReportDetGrid',null,"Y",'reports/reportsdailyendorsementgrid');
			  GridServices.bindGrid(self,'reportdet','dailyEndReportDetGrid1',null,"N",'reports/reportsdailyendorsementgriddetsecond');
		      GridServices.bindGrid(self,'reportdet','dailyEndReportDetGrid2',null,"N",'reports/reportsdailyendorsementgriddetthird');
		      }
	};
	self.fnClearAccodeDailyEndor = function(){
		//self.dateOnLoad();
		self.reportdet.accountCode="";
		self.subAccountCodeList="";
		self.reportdet.paymentTypeId="";
		self.dailyEndReportDetGrid.data=[];
		self.dailyEndReportDetGrid1.data=[];
		self.dailyEndReportDetGrid2.data=[];
	};
	columnDefs.dailyEndReportDet = [
	     {field : 'slNo',displayName : 'S.No.',enableColumnMenu : false,width:60,cellClass: 'text-center'},
	     {field : 'accountCode',displayName : 'Intermediary Code',enableColumnMenu : false,width:150,cellClass: 'text-left'},
	     {field : 'agentName',displayName : 'Intermediary Name',enableColumnMenu : false,width:150,cellClass: 'text-left'},
	     {field : 'policyNo',displayName : 'Policy No.',enableColumnMenu : false,width:150,cellClass: 'text-left'},	     
	     {field : 'coverNoteNo',displayName : 'Endorsement No.',enableColumnMenu : false,width:170,cellClass: 'text-left'},
	     {field : 'status',displayName : 'Endorsement Status',enableColumnMenu : false,width:170,cellClass: 'text-left'},
	     {field : 'vehicleNo',displayName : 'Vehicle No.',enableColumnMenu : false,width:170,cellClass: 'text-left'},
	     {field : 'otsMainClassDesc',displayName : 'Class Code',enableColumnMenu : false,width:150,cellClass: 'text-left'},
	     {field : 'otsClassDesc',displayName : 'Sub Class Code',enableColumnMenu : false,width:150,cellClass: 'text-left'},
	     {field : 'totalGrossPremium',displayName : 'Total Gross Premium',cellFilter: 'number: 2',enableColumnMenu : false,width:170,cellClass: 'text-right'},
	     {field : 'extensionGrossPremium',displayName : 'Extension Gross Premium',cellFilter: 'number: 2',enableColumnMenu : false,width:200,cellClass: 'text-right'},
	     {field : 'extensionGSTPremium',displayName : 'Extension GST Premium',cellFilter: 'number: 2',enableColumnMenu : false,width:200,cellClass: 'text-right'},
	     {field : 'transferGrossPremium',displayName : 'Transfer Gross Premium',cellFilter: 'number: 2',enableColumnMenu : false,width:200,cellClass: 'text-right'},
	     {field : 'transferGSTPremium',displayName : 'Transfer GST Premium',cellFilter: 'number: 2',enableColumnMenu : false,width:170,cellClass: 'text-right'},
	     {field : 'otherEEndorseGrossPremium',displayName : 'Other EEndorse Gross Premium',cellFilter: 'number: 2',enableColumnMenu : false,width:250,cellClass: 'text-right'},
	     {field : 'otherEEndorseGSTPremium',displayName : 'Other EEndorse GST Premium',cellFilter: 'number: 2',enableColumnMenu : false,width:220,cellClass: 'text-right'},
	     {field : 'otherOnlineEndorseGrossPremium',displayName : 'Other Online Endorse Gross Premium',cellFilter: 'number: 2',enableColumnMenu : false,width:280,cellClass: 'text-right'},
	     {field : 'otherOnlineEndorseGSTPremium',displayName : 'Other Online Endorse GST Premium',cellFilter: 'number: 2',enableColumnMenu : false,width:270,cellClass: 'text-right'},
	     {field : 'repateAmount',displayName : 'Rebate Amount',cellFilter: 'number: 2',enableColumnMenu : false,width:150,cellClass: 'text-right'},
	     {field : 'transferFee',displayName : 'Transfer Fee',cellFilter: 'number: 2',enableColumnMenu : false,width:150,cellClass: 'text-right'},
	     {field : 'totalNetPremium',displayName : 'Total Net Premium',cellFilter: 'number: 2',enableColumnMenu : false,width:170,cellClass: 'text-right'},
	     {field : 'extensionNetPremium',displayName : 'Extension Net Premium',cellFilter: 'number: 2',enableColumnMenu : false,width:190,cellClass: 'text-right'},
	     {field : 'transferNetPremium',displayName : 'Transfer Net Premium',cellFilter: 'number: 2',enableColumnMenu : false,width:170,cellClass: 'text-right'},
	     {field : 'otherOnlineEndorseNetPremium',cellFilter: 'number: 2',displayName : 'Other Online Endorse Net Premium',enableColumnMenu : false,width:280,cellClass: 'text-right'},
	     {field : 'paymentMode',displayName : 'Payment Mode',enableColumnMenu : false,width:150,cellClass: 'text-left'},
	     {field : 'receiptNo',displayName : 'Receipt No.',enableColumnMenu : false,width:150,cellClass: 'text-left'},
	     {field : 'receiptAmt',cellFilter: 'number: 2',displayName : 'Receipt Amount',enableColumnMenu : false,width:150,cellClass: 'text-right'},{
	     field : 'branchName',		displayName : 'Branch Name',		cellClass: 'text-left',	enableColumnMenu : false,width:200,visible : false	},
	 	{field : 'totalRecords', visible : false}
	     ];			
	
	columnDefs.dailyEndReportDet1 = [ 
	     {field : 'mainClassDesc',displayName : 'Vehicle Type',enableColumnMenu : false,width:150,cellClass: 'text-left'},
	     {field : 'totalCases',displayName : 'Total Cases',enableColumnMenu : false,width:100,cellClass: 'text-center'},
	     {field : 'totalGrossPremium',displayName : 'Total Gross Premium',cellFilter: 'number: 2',enableColumnMenu : false,width:180,cellClass: 'text-right'},
	     {field : 'totalNetPremium',displayName : 'Total Net Premium',cellFilter: 'number: 2',enableColumnMenu : false,width:150,cellClass: 'text-right'},
	     {field : 'extensionCount',displayName : 'Extension Count',enableColumnMenu : false,width:150,cellClass: 'text-center'},
	     {field : 'extensionGrossPremium',displayName : 'Extension Gross Premium',cellFilter: 'number: 2',enableColumnMenu : false,width:200,cellClass: 'text-right'},
	     {field : 'extensionGSTPremium',displayName : 'Extension GST Premium',cellFilter: 'number: 2',enableColumnMenu : false,width:200,cellClass: 'text-right'},
	     {field : 'extensionNetPremium',displayName : 'Extension Net Premium',cellFilter: 'number: 2',enableColumnMenu : false,width:200,cellClass: 'text-right'},
	     {field : 'transferCount',displayName : 'Transfer Count',enableColumnMenu : false,width:150,cellClass: 'text-center'},
	     {field : 'transferGrossPremium',displayName : 'Transfer Gross Premium',cellFilter: 'number: 2',enableColumnMenu : false,width:200,cellClass: 'text-right'},
	     {field : 'transferGSTPremium',displayName : 'Transfer GST Premium',cellFilter: 'number: 2',enableColumnMenu : false,width:200,cellClass: 'text-right'},
	     {field : 'transferNetPremium',displayName : 'Transfer Net Premium',cellFilter: 'number: 2',enableColumnMenu : false,width:200,cellClass: 'text-right'},
	     {field : 'otherEEndorseCount',displayName : 'Other EEndorse Count',enableColumnMenu : false,width:200,cellClass: 'text-center'},
	     {field : 'otherEEndorseGrossPremium',displayName : 'Other EEndorse Gross Premium',cellFilter: 'number: 2',enableColumnMenu : false,width:250,cellClass: 'text-right'},
	     {field : 'otherEEndorseGSTPremium',displayName : 'Other EEndorse GST Premium',cellFilter: 'number: 2',enableColumnMenu : false,width:250,cellClass: 'text-right'},
	     {field : 'otherEEndorseNetPremium',displayName : 'Other EEndorse Net Premium',cellFilter: 'number: 2',enableColumnMenu : false,width:250,cellClass: 'text-right'},
	     {field : 'otherOnlineEndorseCount',displayName : 'Other Online Endorse Count',enableColumnMenu : false,width:250,cellClass: 'text-center'},
	     {field : 'otherOnlineEndorseGrossPremium',displayName : 'Other Online Endorse Gross Premium',cellFilter: 'number: 2',enableColumnMenu : false,width:280,cellClass: 'text-right'},
	     {field : 'otherOnlineEndorseGSTPremium',displayName : 'Other Online Endorse GST Premium',cellFilter: 'number: 2',enableColumnMenu : false,width:280,cellClass: 'text-right'},
	     {field : 'otherOnlineEndorseNetPremium',displayName : 'Other Online Endorse Net Premium',cellFilter: 'number: 2',enableColumnMenu : false,width:280,cellClass: 'text-right'}];
	
	columnDefs.dailyEndReportDet2 = [ 
	     {field : 'paymentMode',displayName : 'Payment Type',enableColumnMenu : false,width:150,cellClass: 'text-left'},
	     {field : 'paymentAmount',displayName : 'Amount',cellFilter: 'number: 2',enableColumnMenu : false,width:170,cellClass: 'text-right'}];

/*DAILY ENDORSEMENT REPORT ENDS*/
	
	
/* eEndorsement Summary Report Details Start*/
	//Init Function
	self.setDefaultEEndtSummaryReportDet = function() {
		if(GLOBAL_DATA.staffId != 0){
			self.reportdet.staffInd="Y";
		}
		self.reportdet.id = "EENDT_SUMMARY_REPORT";
		self.reportdet.gridOnloadInd = true;
		self.fnLoadRptSourceTypes();
		if(self.staffId == 0){
			self.reportdet.sourceTypeId = 1;
			ReportService.loadBranchList(self);
		}
		ReportService.loadMainClassList(self);
		ReportService.loadCoverNoteStatus(self);
		GridServices.defineGrid(self,null, 'eEndtSummaryReportGrid',null,columnDefs.eEndtSummaryReportDet,null, pagination, null);
		CommonService.getCurrentDate().then(function(response) {
			var currDate=response.date;
			var date = stringToDate(currDate);
			date.setDate(date.getDate() - 30);
			
			self.reportdet.toDate = currDate;			
			self.reportdet.fromDate = dateToString(date);
		});
	};	
	//Search button click(Load Grid)	
	self.fnSearchEEndtSummaryDet = function(ind){
		var status=true;
		if(ind=='S'){
		self.eEndtSummaryReportGrid.data = [];}
		if(self.reportdet.sourceTypeId == undefined || self.reportdet.sourceTypeId == null || self.reportdet.sourceTypeId == 0 || self.reportdet.sourceTypeId == ''){
			swal("Please Select Source Type","reportdet.sourceTypeId");
			status=false;	
		}
		else if(self.reportdet.branchId==undefined || self.reportdet.branchId=='')		
		{
			swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_BRANCH,"reportdet.branchId");
			status=!status;
		}
	/*	else if(self.reportdet.accountCode == undefined || self.reportdet.accountCode == '')
		{
			swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_UID_INTERCODE,"reportdet.accountCode");
			status=!status;
		}*/
		/*else if(self.reportdet.fromDate == undefined || self.reportdet.fromDate=='')
		{
			swal(FILTER_MSGS.FILTER_VALIDATION.PERIOD_FROMDT,"reportdet.fromDate");	
			status=!status;
		}
		else if(self.reportdet.toDate == undefined || self.reportdet.toDate == '')
		{
			swal(FILTER_MSGS.FILTER_VALIDATION.PERIOD_TODT,"reportdet.toDate");	
			status=!status;
		}*/
		else if(self.reportdet.covernoteStatusId == undefined || self.reportdet.covernoteStatusId == '')
		{
			swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_CNSTATUS,"reportdet.covernoteStatusId");
			status=!status;
		}
		else if(ind=='S') 		
		{ 
			status = true;
			CommonService.getCurrentDate().then(function(response) {
				var time = response.time;
				var menuId = 80;
				time = time.toLocaleString('en-US', { hour: 'numeric',minute:'numeric', hour24: true });

				var maxDate = fnDateManipulation(self.reportdet.fromDate, 6,"+", "M");
				var chkIfOneMonth = fnDateManipulation(self.reportdet.fromDate, 1,"+", "M");

				if(stringToDate(chkIfOneMonth) < stringToDate(self.reportdet.toDate) && stringToDate(maxDate) >= stringToDate(self.reportdet.toDate))
				{		
					$http.post(CONTEXT_PATH+'reports/loadReportGenTimeDet',''+menuId).then(function(response) {
						if(response.data != null && response.data.length > 0){
							self.reportTimeList = response.data;
							
							var time1From = response.data[0].time1FromHH+":"+((parseInt(response.data[0].time1FromMM) < 10)?"0"+response.data[0].time1FromMM:response.data[0].time1FromMM)+":00 "+response.data[0].time1FromAM;
							var time1To = response.data[0].time1ToHH+":"+((parseInt(response.data[0].time1ToMM) < 10)?"0"+response.data[0].time1ToMM:response.data[0].time1ToMM)+":00 "+response.data[0].time1ToAM;

							var d = new Date();
						  	var d1Start = new Date(d.toLocaleDateString()+" "+time1From);	
						  	var d1End = new Date(d.toLocaleDateString()+" "+time1To);
						  	var d2Start = null; 
					  		var d2End = null;

							var dateCurr = new Date(d.toLocaleDateString()+" "+time);
							var time2From = null;
							var time2To = null;
							if(response.data[0].time2FromHH != null && response.data[0].time2FromHH > 0){
								time2From = response.data[0].time2FromHH+":"+((parseInt(response.data[0].time2FromMM) < 10)?"0"+response.data[0].time2FromMM:response.data[0].time2FromMM)+":00 "+response.data[0].time2FromAM;
								time2To = response.data[0].time2ToHH+":"+((parseInt(response.data[0].time2ToMM) < 10)?"0"+response.data[0].time2ToMM:response.data[0].time2ToMM)+":00 "+response.data[0].time2ToAM;
								d2Start = new Date(d.toLocaleDateString()+" "+time2From);	
							  	d2End = new Date(d.toLocaleDateString()+" "+time2To);
							}
							var effectivedate = new Date();
							var effdate = new Date();
							if(response.data[0].rptTimeEffectDate != null ){
								effdate = stringToDate(response.data[0].rptTimeEffectDate);
								effectivedate.setDate(effdate.getDate());
								effectivedate.setMonth(effdate.getMonth());
								effectivedate.setFullYear(effdate.getFullYear());
								if(response.data[0].rptTimeEffectHH != 12 && response.data[0].rptTimeEffectAM == "PM")
								{
								effectivedate.setHours(response.data[0].rptTimeEffectHH+12);
								}
								else
								{effectivedate.setHours(response.data[0].rptTimeEffectHH);}
								
								effectivedate.setMinutes(response.data[0].rptTimeEffectMM);
								effectivedate.setSeconds(0);
							}
							if(response.data[0].rptTimeEffectDate != null && dateCurr < effectivedate)
							{
								status = false;
								jAlert('Report access for more than one month has been restricted for now, Please contact Administrator.',null,function(){
									$('#DDT_TO_DATE').focus();
								});
								return;
							}
							else if((((response.data[0].staffId != null && response.data[0].staffId > 0) && (GLOBAL_DATA.staffId !=undefined && GLOBAL_DATA.staffId != null) && response.data[0].staffId != GLOBAL_DATA.staffId) || (response.data[0].staffId == undefined || response.data[0].staffId == null) || GLOBAL_DATA.staffId == null) )
							{
								if ((dateCurr>d1Start && dateCurr < d1End))
								{	
									status = true;
								}
								else if (time2From != null && time2From > 0 && (dateCurr>d2Start && dateCurr < d2End))
								{	
									status = true;
								}
								else
								{
									if(response.data[0].time1FromAM == "PM" && response.data[0].time1ToAM == "AM"){status = true;}
									else if(time2From != null && (response.data[0].time2FromAM == "PM" && response.data[0].time2ToAM == "AM")){status = true;}
									else{
									status = false;
									jAlert('Report access for more than one month has been restricted for now, Please contact Administrator.',null,function(){
										$('#DDT_TO_DATE').focus();
									});
									return;
									}
								}								
							}							
							if(status)
							{
								ReportService.getEEndtSummaryGridDetails(self);
							}
						}
					});						
									
				}
				else
					ReportService.getEEndtSummaryGridDetails(self);
			});
		}
		if(ind=='P')
		{
			return status;}
	};	
	//Grid - eEndorsement Summary Report
	columnDefs.eEndtSummaryReportDet = [ {
		field : 'slNo',
		displayName : 'S.No.',
		enableColumnMenu : false,width:60
	},{
		field : 'coverNoteNo',
		displayName : 'Endt. CoverNote No.',
		enableColumnMenu : false,width:150,
		cellClass:'text-left'
	},{
		field : 'insuredName',
		displayName : 'Insured Name',
		enableColumnMenu : false,width:200,
		cellClass:'text-left'
	},{
		field : 'otsMainClassDesc',
		displayName : 'Main Class',
		enableColumnMenu : false,width:100,
		cellClass:'text-left'
	},{
		field : 'otsClassDesc',
		displayName : 'Class',
		enableColumnMenu : false,width:150,
		cellClass:'text-left'
	},{
		field : 'intermediaryCode',
		displayName : 'Intermediary Code',
		enableColumnMenu : false,width:200,
		cellClass:'text-left'
	},{
		field : 'accountCode',
		displayName : 'Intermediary Name',
		enableColumnMenu : false,width:200,
		cellClass:'text-left'
	},{
		field : 'contactNo',
		displayName : 'Contact No.',
		enableColumnMenu : false,width:100,
		cellClass:'text-left'
	},{
		field : 'endtDate',
		displayName : 'Endorsement Date',
		enableColumnMenu : false,width:150,
		cellClass:'text-center'
	},{
		field : 'statusGrid',
		displayName : 'Status',
		enableColumnMenu : false,width:150,
		cellClass:'text-left'
	},
	{field : 'totalRecords', visible : false}
	];

/*eEndorsement Summary Report Details End*/
	
/*GST Reports Details Start*/
	//Init Function
	self.setDefaultGSTReportsExtractionDet = function() {
		GridServices.defineGrid(self,null, 'gstReportsExtractionDetGrid',null,columnDefs.gstReportsExtractionDet,null, null, null);
	};	
	//Search button click(Load Grid)	
	self.fnSearchGSTReportsExtractionDet = function(){
		ReportService.getGSTReportsExtractionGridDetails(self);
	};	
	//Grid -GST Reports Details
	columnDefs.gstReportsExtractionDet = [ {
		field : 'otsMainClassDesc',
		displayName : 'Main Class Desc.',
		enableColumnMenu : false,width:150
	},{
		field : 'callingSystemNo',
		displayName : 'Calling System No.',
		enableColumnMenu : false,width:150
	},{
		field : 'hostSystem',
		displayName : 'Host System',
		enableColumnMenu : false,width:250
	},{
		field : 'externalCompanyId',
		displayName : 'External Company ID',
		enableColumnMenu : false,width:250
	},{
		field : 'companyRole',
		displayName : 'Company Role',
		enableColumnMenu : false,width:250
	},{
		field : 'customerNo',
		displayName : 'Customer No.',
		enableColumnMenu : false,width:250
	},{
		field : 'vendorNo',
		displayName : 'Vendor No.',
		enableColumnMenu : false,width:250
	},{
		field : 'invoiceNo',
		displayName : 'Invoice No.',
		enableColumnMenu : false,width:250
	},{
		field : 'uniqueInvoiceNo',
		displayName : 'Unique Invoice No.',
		enableColumnMenu : false,width:250
	},{
		field : 'invoiceDate',
		displayName : 'Invoice Date',
		enableColumnMenu : false,width:250
	},{
		field : 'currencyCode',
		displayName : 'Currency Code',
		enableColumnMenu : false,width:250
	},{
		field : 'isReversed',
		displayName : 'isReversed',
		enableColumnMenu : false,width:250
	},{
		field : 'isCredit',
		displayName : 'isCredit',
		enableColumnMenu : false,width:250
	},{
		field : 'originalInvoiceNo',
		displayName : 'Original Invoice No.',
		enableColumnMenu : false,width:250
	},{
		field : 'originalInvoiceDate',
		displayName : 'Original Invoice Date',
		enableColumnMenu : false,width:250
	},{
		field : 'transactionType',
		displayName : 'Transaction Type',
		enableColumnMenu : false,width:250
	},{
		field : 'calculationType',
		displayName : 'Calculation Type',
		enableColumnMenu : false,width:250
	},{
		field : 'buyerRegNo',
		displayName : 'Buyer Reg. No.',
		enableColumnMenu : false,width:250
	},{
		field : 'sellerRegNo',
		displayName : 'Seller Reg. No.',
		enableColumnMenu : false,width:250
	},{
		field : 'transactionDate',
		displayName : 'Transaction Date',
		enableColumnMenu : false,width:250
	},{
		field : 'lineNo',
		displayName : 'Line No.',
		enableColumnMenu : false,width:250
	},{
		field : 'grossPremium',
		displayName : 'Gross Premium',
		enableColumnMenu : false,width:250
	},{
		field : 'taxRate',
		displayName : 'Tax Rate',
		enableColumnMenu : false,width:250
	},{
		field : 'gstAmtforLine',
		displayName : 'GST Amt for Line',
		enableColumnMenu : false,width:250
	},{
		field : 'erpTaxCode',
		displayName : 'ERP Tax Code',
		enableColumnMenu : false,width:250
	},{
		field : 'buyerPrimaryCountry',
		displayName : 'Buyer Primary Country',
		enableColumnMenu : false,width:250
	},{
		field : 'buyerPrimaryProvince',
		displayName : 'Buyer Primary Province - Line',
		enableColumnMenu : false,width:250
	},{
		field : 'sellerPrimaryCountry',
		displayName : 'Seller Primary Country',
		enableColumnMenu : false,width:250
	},{
		field : 'sellerPrimaryProvince',
		displayName : 'Seller Primary Province - Line',
		enableColumnMenu : false,width:250
	},{
		field : 'supplyCountry',
		displayName : 'Supply Country - Line',
		enableColumnMenu : false,width:250
	},{
		field : 'supplyProvince',
		displayName : 'Supply Province - Line',
		enableColumnMenu : false,width:250
	},{
		field : 'shipFromCountry',
		displayName : 'Ship From Country - Line',
		enableColumnMenu : false,width:250
	},{
		field : 'shipFromProvince',
		displayName : 'Ship From Province - Line',
		enableColumnMenu : false,width:250
	},{
		field : 'shipToCountry',
		displayName : 'Ship To Country - Line',
		enableColumnMenu : false,width:250
	},{
		field : 'shipToProvince',
		displayName : 'Ship To Province - Line',
		enableColumnMenu : false,width:250
	},{
		field : 'lineTaxCode',
		displayName : 'Line Tax Code',
		enableColumnMenu : false,width:250
	},{
		field : 'documentDateLine',
		displayName : 'Document Date - Line',
		enableColumnMenu : false,width:250
	},{
		field : 'transCategoryAttr',
		displayName : 'Transaction Category (Attribute 2)',
		enableColumnMenu : false,width:250
	},{
		field : 'branchCode',
		displayName : 'Branch Code',
		enableColumnMenu : false,width:250
	},{
		field : 'policyInceptionDate',
		displayName : 'Policy Inception Date',
		enableColumnMenu : false,width:250
	},{
		field : 'attrCorePolicyNo',
		displayName : '(Attribute 5) Core Policy No.',
		enableColumnMenu : false,width:250
	},{
		field : 'riskMainClass',
		displayName : 'Risk Main Class',
		enableColumnMenu : false,width:250
	},{
		field : 'riskSubClass',
		displayName : 'Risk Sub Class',
		enableColumnMenu : false,width:250
	},{
		field : 'coreEndtTransNo',
		displayName : 'Core System Endt. No. / Transaction No.',
		enableColumnMenu : false,width:300
	},{
		field : 'ePolicyNo',
		displayName : 'ePolicy No. (Invoice Level)',
		enableColumnMenu : false,width:250
	},{
		field : 'frontEndtNo',
		displayName : 'Front End Endt. No. (Endt. CN No.)',
		enableColumnMenu : false,width:300
	},{
		field : 'vehicleNo',
		displayName : 'Vehicle No.',
		enableColumnMenu : false,width:250
	},{
		field : 'gstCutoffDate',
		displayName : 'GST Cut off Date',
		enableColumnMenu : false,width:250
	},{
		field : 'attribute',
		displayName : 'Attribute 47',
		enableColumnMenu : false,width:250
	}
	];
	
	/*---------------*/
	
	self.setDefaultGSTReportsOfflineCasesDet = function() {
		GridServices.defineGrid(self,null, 'gstReportsOfflineDetGrid',null,columnDefs.gstReportsOfflineDet,null, null, null);
	};
	
	//Search button click event
	self.fnSearchGSTReportsOfflineCasesDet = function(){
		ReportService.getGSTReportsOfflineCasesGridDetails(self);
	};
	
	/*Grid Start*/
	columnDefs.gstReportsOfflineDet = [ {
		field : 'otsMainClassDesc',
		displayName : 'Main Class Desc.',
		enableColumnMenu : false,width:150
	},{
		field : 'coverNoteNo',
		displayName : 'Cover Note No.',
		enableColumnMenu : false,width:150
	},{
		field : 'agentName',
		displayName : 'Intermediary Name',
		enableColumnMenu : false,width:250
	},{
		field : 'issueDate',
		displayName : 'Issue Date',
		enableColumnMenu : false,width:250
	},{
		field : 'inceptionDate',
		displayName : 'Inception Date',
		enableColumnMenu : false,width:250
	},{
		field : 'expiryDate',
		displayName : 'Expiry Date',
		enableColumnMenu : false,width:250
	},{
		field : 'cnStatus',
		displayName : 'CN Status',
		enableColumnMenu : false,width:250
	},{
		field : 'coverNoteType',
		displayName : 'Cover Note Type',
		enableColumnMenu : false,width:250
	},{
		field : 'otsClassDesc',
		displayName : 'Class Desc.',
		enableColumnMenu : false,width:250
	},{
		field : 'gstCountry',
		displayName : 'GST Country',
		enableColumnMenu : false,width:250
	},{
		field : 'grossPremium',
		displayName : 'Gross Premium',
		enableColumnMenu : false,width:250
	},{
		field : 'gstAmount',
		displayName : 'GST Amount',
		enableColumnMenu : false,width:250
	},{
		field : 'gstPercent',
		displayName : 'GST Percent',
		enableColumnMenu : false,width:250
	},{
		field : 'invoiceCode',
		displayName : 'Invoice Code',
		enableColumnMenu : false,width:250
	},{
		field : 'erpTaxCode',
		displayName : 'Offline Tax Code',
		enableColumnMenu : false,width:250
	},{
		field : 'gstOnlineTaxAmount',
		displayName : 'GST Online Tax Amount',
		enableColumnMenu : false,width:250
	},{
		field : 'gstOnlineTaxPercent',
		displayName : 'GST Online Tax Percent',
		enableColumnMenu : false,width:250
	},{
		field : 'gstOnlineTaxCode',
		displayName : 'GST Online Tax Code',
		enableColumnMenu : false,width:250
	},{
		field : 'auditCallSendDate',
		displayName : 'Audit Call Send Date',
		enableColumnMenu : false,width:250
	}
	];
	
	/*-------------------------*/
	
	self.setDefaultGSTReportsExceptionCasesDet = function() {
		GridServices.defineGrid(self,null, 'gstReportsExceptionDetGrid',null,columnDefs.gstReportsExceptionDet,null, null, null);
	};
	
	//Exception Search button click event
	self.fnSearchGSTReportsExceptionCasesDet = function(){
		ReportService.getGSTReportsExceptionCasesGridDetails(self);
	};
	
	/*Grid Start*/
	columnDefs.gstReportsExceptionDet = [ {
		field : 'otsMainClassDesc',
		displayName : 'Main Class Desc.',
		enableColumnMenu : false,width:150
	},{
		field : 'callingSystemNo',
		displayName : 'Calling System No.',
		enableColumnMenu : false,width:150
	},{
		field : 'hostSystem',
		displayName : 'Host System',
		enableColumnMenu : false,width:250
	},{
		field : 'externalCompanyId',
		displayName : 'External Company ID',
		enableColumnMenu : false,width:250
	},{
		field : 'companyRole',
		displayName : 'Company Role',
		enableColumnMenu : false,width:250
	},{
		field : 'customerNo',
		displayName : 'Customer No.',
		enableColumnMenu : false,width:250
	},{
		field : 'vendorNo',
		displayName : 'Vendor No.',
		enableColumnMenu : false,width:250
	},{
		field : 'invoiceNo',
		displayName : 'Invoice No.',
		enableColumnMenu : false,width:250
	},{
		field : 'uniqueInvoiceNo',
		displayName : 'Unique Invoice No.',
		enableColumnMenu : false,width:250
	},{
		field : 'invoiceDate',
		displayName : 'Invoice Date',
		enableColumnMenu : false,width:250
	},{
		field : 'currencyCode',
		displayName : 'Currency Code',
		enableColumnMenu : false,width:250
	},{
		field : 'isReversed',
		displayName : 'isReversed',
		enableColumnMenu : false,width:250
	},{
		field : 'isCredit',
		displayName : 'isCredit',
		enableColumnMenu : false,width:250
	},{
		field : 'originalInvoiceNo',
		displayName : 'Original Invoice No.',
		enableColumnMenu : false,width:250
	},{
		field : 'originalInvoiceDate',
		displayName : 'Original Invoice Date',
		enableColumnMenu : false,width:250
	},{
		field : 'transactionType',
		displayName : 'Transaction Type',
		enableColumnMenu : false,width:250
	},{
		field : 'calculationType',
		displayName : 'Calculation Type',
		enableColumnMenu : false,width:250
	},{
		field : 'buyerRegNo',
		displayName : 'Buyer Reg. No.',
		enableColumnMenu : false,width:250
	},{
		field : 'sellerRegNo',
		displayName : 'Seller Reg. No.',
		enableColumnMenu : false,width:250
	},{
		field : 'transactionDate',
		displayName : 'Transaction Date',
		enableColumnMenu : false,width:250
	},{
		field : 'lineNo',
		displayName : 'Line No.',
		enableColumnMenu : false,width:250
	},{
		field : 'grossPremium',
		displayName : 'Gross Premium',
		enableColumnMenu : false,width:250
	},{
		field : 'taxRate',
		displayName : 'Tax Rate',
		enableColumnMenu : false,width:250
	},{
		field : 'gstAmtforLine',
		displayName : 'GST Amt for Line',
		enableColumnMenu : false,width:250
	},{
		field : 'erpTaxCode',
		displayName : 'ERP Tax Code',
		enableColumnMenu : false,width:250
	},{
		field : 'buyerPrimaryCountry',
		displayName : 'Buyer Primary Country',
		enableColumnMenu : false,width:250
	},{
		field : 'buyerPrimaryProvince',
		displayName : 'Buyer Primary Province - Line',
		enableColumnMenu : false,width:250
	},{
		field : 'sellerPrimaryCountry',
		displayName : 'Seller Primary Country',
		enableColumnMenu : false,width:250
	},{
		field : 'sellerPrimaryProvince',
		displayName : 'Seller Primary Province - Line',
		enableColumnMenu : false,width:250
	},{
		field : 'supplyCountry',
		displayName : 'Supply Country - Line',
		enableColumnMenu : false,width:250
	},{
		field : 'supplyProvince',
		displayName : 'Supply Province - Line',
		enableColumnMenu : false,width:250
	},{
		field : 'shipFromCountry',
		displayName : 'Ship From Country - Line',
		enableColumnMenu : false,width:250
	},{
		field : 'shipFromProvince',
		displayName : 'Ship From Province - Line',
		enableColumnMenu : false,width:250
	},{
		field : 'shipToCountry',
		displayName : 'Ship To Country - Line',
		enableColumnMenu : false,width:250
	},{
		field : 'shipToProvince',
		displayName : 'Ship To Province - Line',
		enableColumnMenu : false,width:250
	},{
		field : 'lineTaxCode',
		displayName : 'Line Tax Code',
		enableColumnMenu : false,width:250
	},{
		field : 'transCategoryAttr',
		displayName : 'Transaction Category (Attribute 2)',
		enableColumnMenu : false,width:250
	},{
		field : 'branchCode',
		displayName : 'Branch Code',
		enableColumnMenu : false,width:250
	},{
		field : 'policyInceptionDate',
		displayName : 'Policy Inception Date',
		enableColumnMenu : false,width:250
	},{
		field : 'attrCorePolicyNo',
		displayName : '(Attribute 5) Core Policy No.',
		enableColumnMenu : false,width:250
	},{
		field : 'riskMainClass',
		displayName : 'Risk Main Class',
		enableColumnMenu : false,width:250
	},{
		field : 'riskSubClass',
		displayName : 'Risk Sub Class',
		enableColumnMenu : false,width:250
	},{
		field : 'coreEndtTransNo',
		displayName : 'Core System Endt. No. / Transaction No.',
		enableColumnMenu : false,width:300
	},{
		field : 'frontEndtNo',
		displayName : 'Front End Endt. No. (Endt. CN No.)',
		enableColumnMenu : false,width:300
	},{
		field : 'vehicleNo',
		displayName : 'Vehicle No.',
		enableColumnMenu : false,width:250
	},{
		field : 'gstCutoffDate',
		displayName : 'GST Cut off Date',
		enableColumnMenu : false,width:250
	},{
		field : 'attribute',
		displayName : 'Attribute 47',
		enableColumnMenu : false,width:250
	},{
		field : 'isAuditCall',
		displayName : 'Is Audit Call',
		enableColumnMenu : false,width:250
	},{
		field : 'errorLog',
		displayName : 'Error Log',
		enableColumnMenu : false,width:250
	}
	];	
/*GST Reports Details End*/
	
/*Pending Payment Report Details Start*/
	//Init Function
	self.setDefaultPendingPaymentReportDet = function() {		
		if(GLOBAL_DATA.staffId != 0){
			self.reportdet.staffInd="Y";
		}
		self.gridAlertInd = false;
		ReportService.loadBranchList(self);		
		ReportService.loadMainClassListRefer(self);
		GridServices.defineGrid(self,null, 'pendPaymentReportDetGrid',null,columnDefs.pendPaymentReportDet,null, pagination, null);
	};	
	//Search button click(Load Grid)	
	self.fnSearchPendingPaymentDet = function(){
		self.pendPaymentReportDetGrid.data=[];
		if(self.pendPaymentReportDetGrid.data!=undefined)
	    	GridServices.bindGrid(self,'reportdet','pendPaymentReportDetGrid',null,pagination,null);
	
		if (self.reportdet.branchId == null || self.reportdet.branchId == '' || self.reportdet.branchId == undefined)
			alert(FILTER_MSGS.FILTER_VALIDATION.SELECT_BRANCH);
		else if (self.reportdet.accountCode == null || self.reportdet.accountCode == '' || self.reportdet.accountCode ==undefined)
			alert(FILTER_MSGS.FILTER_VALIDATION.SELECT_ACCCODE);
		else if (self.reportdet.otsMainClassId == null || self.reportdet.otsMainClassId == '' || self.reportdet.otsMainClassId == undefined)
			alert(FILTER_MSGS.FILTER_VALIDATION.SELECT_MAINCLASS);
		else if ((self.reportdet.fromDate == '' || self.reportdet.fromDate == undefined || self.reportdet.fromDate == null) && (self.reportdet.toDate != '' && self.reportdet.toDate != undefined && self.reportdet.toDate != null))
			alert(FILTER_MSGS.FILTER_VALIDATION.VALID_FROMDT);
		else if ((self.reportdet.toDate == '' || self.reportdet.toDate == undefined || self.reportdet.toDate == null) && (self.reportdet.fromDate != '' && self.reportdet.fromDate != undefined && self.reportdet.fromDate != null))
			alert(FILTER_MSGS.FILTER_VALIDATION.VALID_TODT);
		else{			
			ReportService.getPendingPaymentGridDetails(self);
		}		
					
	};	 
	//Print button click(PDF)
	self.fnExportPdfPendingPaymentReport = function(){
		if (confirm(FILTER_MSGS.FILTER_VALIDATION.CONFIRM_PRINT)) {
			self.reportdet.branchName=$("#DD_BRANCH option:selected").html();
			self.reportdet.otsClassDesc=$("#DD_SUBCLASS option:selected").html();
			self.reportdet.otsMainClassDesc=$("#DD_MAIN_CLASS option:selected").html();
			if(self.pendPaymentReportDetGrid.data.length > 0){
				self.printPendingPaymentReport(self.reportdet);					
				}else
				alert(FILTER_MSGS.FILTER_VALIDATION.NO_DATA_TOPRINT);
		}
	};	
	// Print Generation
	self.printPendingPaymentReport = function(doObject) {
		var data = JSON.stringify(doObject);
		var form = $('<form action="'+CONTEXT_PATH+'reports/pdfpendingpaymentreport" method="post" target="_blank" >');
		var input =  $('<input type="hidden" name="json"/>').val(data);
		input.appendTo(form);
		form.appendTo('body');
		form.submit();
	};	
	
	self.fnOnChangePendingPaymentFromDate = function() {	
		if (self.reportdet.fromDate != undefined && self.reportdet.fromDate.length > 0) {	
			if(isValidDate(self.reportdet.fromDate)){				
				CommonService.getCurrentDate().then(function(response) {
					if(stringToDate(self.reportdet.fromDate) > stringToDate(response.date)) {
							swal(FILTER_MSGS.FILTER_VALIDATION.EQUAL_LESS_SYSDATE);
							self.reportdet.fromDate = '';
							self.reportdet.toDate = '';
							$("#DDT_FROM_DATE").focus();
						}
					else {
						var maxDate = fnDateManipulation(self.reportdet.fromDate,1,"+", "M");	
						if(stringToDate(maxDate) > stringToDate(response.date))
							self.reportdet.toDate = response.date;
						else if ((stringToDate(maxDate) < stringToDate(response.date)))
							self.reportdet.toDate = maxDate;			
					}
				});		
			}
			else{				
				self.reportdet.fromDate = '';
				$("#DDT_FROM_DATE").focus();	
			}
		}
	};
	

	self.fnOnChangeVoidPaymentFromDate = function() {	
		if (self.voidpaymentdet.fromDate != undefined && self.voidpaymentdet.fromDate.length > 0) {	
			if(isValidDate(self.voidpaymentdet.fromDate)){				
				CommonService.getCurrentDate().then(function(response) {
					if(stringToDate(self.voidpaymentdet.fromDate) > stringToDate(response.date)) {
							swal(FILTER_MSGS.FILTER_VALIDATION.EQUAL_LESS_SYSDATE);
							self.voidpaymentdet.fromDate = '';
							self.voidpaymentdet.toDate = '';
							$("#DDT_FROM_DATE").focus();
						}
					/*else {
						var maxDate = fnDateManipulation(self.voidpaymentdet.fromDate,1,"+", "M");	
						if(stringToDate(maxDate) > stringToDate(response.date))
							self.voidpaymentdet.toDate = response.date;
						else if ((stringToDate(maxDate) < stringToDate(response.date)))
							self.voidpaymentdet.toDate = maxDate;			
					}*/
				});		
			}
			else{				
				self.voidpaymentdet.fromDate = '';
				$("#DDT_FROM_DATE").focus();	
			}
		}
	};
	self.fnOnChangePendingPaymentToDate = function() {
		if (self.reportdet.toDate != undefined && self.reportdet.toDate.length > 0) {
			if(isValidDate(self.reportdet.toDate)){
			CommonService.getCurrentDate().then(function(response) {
			var currDate=response.date;			
			var maxDate = fnDateManipulation(self.reportdet.fromDate, 1,"+", "M");				
			 if(stringToDate(currDate) < stringToDate(self.reportdet.toDate)){				
					self.reportdet.toDate = '';
					swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_SYS_TO_DATE);
					$("#DDT_TO_DATE").focus();						
				}
			else if (self.reportdet.fromDate != null && self.reportdet.fromDate.length > 0 &&(isValidDate(self.reportdet.toDate))) {
				if (stringToDate(self.reportdet.fromDate) > stringToDate(self.reportdet.toDate)) {
					swal(FILTER_MSGS.FILTER_VALIDATION.EQUAL_GREATER_FROMDT);
					self.reportdet.toDate = '';
					$("#DDT_TO_DATE").focus();	
				}
				else if(stringToDate(maxDate) < stringToDate(self.reportdet.toDate)){
					self.reportdet.toDate = '';
					swal(FILTER_MSGS.FILTER_VALIDATION.DATE_ONE_DIFF,"reportdet.toDate");
				}	
				
			}	
			
	});}else{
		self.reportdet.toDate = '';				
		$("#DDT_TO_DATE").focus();	
	}}
			};
	
	//Grid - Pending Payment Report
	columnDefs.pendPaymentReportDet = [ {
		field : 'slNo',
		displayName : 'S.No.',
		cellClass: 'text-center',
		enableColumnMenu : false,width:50
	},{
		field : 'branchCode',
		displayName : 'Branch Code',
		cellClass: 'text-left',
		enableColumnMenu : false,width:150
	}/*,{
		field : '',
		displayName : 'Intermediary S.No.',
		cellClass: 'text-left',
		enableColumnMenu : false,width:150
	}*/,{
		field : 'paymentSerial',
		displayName : 'Payment S.No.',
		cellClass: 'text-left',
		enableColumnMenu : false,width:150
	},{
		field : 'mainClassDesc',
		displayName : 'Main Class',
		cellClass: 'text-left',
		enableColumnMenu : false,width:150
	},/*{
		field : 'coverNoteNo',
		displayName : 'CoverNote No.',
		cellClass: 'text-left',
		enableColumnMenu : false,width:150
	},*/{
		field : 'paymentType',
		displayName : 'Payment Type',
		cellClass: 'text-left',
		enableColumnMenu : false,width:150
	},{
		field : 'totalPremium',
		displayName : 'Payment Total Amount (RM)',
		cellClass: 'text-right',
		enableColumnMenu : false,width:200
	},{
		field : 'gstAmount',
		displayName : 'Payable Total Amount (RM)',
		cellClass: 'text-right',
		enableColumnMenu : false,width:200
	},{
		field : 'declareDate',
		displayName : 'Declared Date',
		cellClass: 'text-left',
		enableColumnMenu : false,width:150
	},{
		field : 'statusGrid',
		displayName : 'Payment Status',
		cellClass: 'text-left',
		enableColumnMenu : false,width:200
	},{
		field : 'paymentMode',
		displayName : 'Payment Mode',
		cellClass: 'text-left',
		enableColumnMenu : false,width:200
	},{
		field : 'updatedBy',
		displayName : 'Updated By',
		cellClass: 'text-left',
		enableColumnMenu : false,width:200
	},{
		field : 'updatedOn',
		displayName : 'Updated On',
		cellClass: 'text-left',
		enableColumnMenu : false,width:200
	},{
		field : 'paymentDate',
		displayName : 'Payment Date',
		cellClass: 'text-left',
		enableColumnMenu : false,width:200
	}
	];	
	//Pending Payment - reset
	self.resetPaymentReport = function (){
	jConfirm(FILTER_MSGS.FILTER_VALIDATION.CONFIRM_RESET,"Warning",function(res){
		if(res){		if(GLOBAL_DATA.staffId != 0){
			self.reportdet.branchId="";		
			self.reportdet.accountCode=null;	
		}		
		self.pendPaymentReportDetGrid.data=[];
		if(self.pendPaymentReportDetGrid.data!=undefined)
	    	GridServices.bindGrid(self,'reportdet','pendPaymentReportDetGrid',null,pagination,null);	
		self.reportdet.errorLogDate=null;		
		self.reportdet.otsMainClassId="";
		self.reportdet.paymentTypeId="";
		self.gridAlertInd =false;
		$state.reload();}
		});
	};
/*Pending Payment Report Details End*/
	
/*Payment Voucher Summary Report Details Start*/
	//Init Function
	self.setDefaultPmentVherSummReportDet = function() {
		if(GLOBAL_DATA.staffId != 0){
			self.reportdet.staffInd="Y";
		}
		self.fnLoadRptSourceTypes();
		if(self.staffId == 0){
			self.reportdet.sourceTypeId = 1;
			ReportService.loadBranchList(self);
		}
		ReportService.loadPaymentModeOptions(self);
		self.gridAlertInd =false;
		self.id="PAYMENT_VOUCHER_SUMMARY_REPORT";		
		self.reportdet.branchName="voucher";
		self.reportdet.otsClassDesc="voucher";
		self.reportdet.otsMainClassDesc="voucher";
		self.reportdet.paymentStatusDesc="voucher";
		//ReportService.loadPaymentType(self);
		$("#DD_BRANCH").focus();	
		CommonService.getCurrentDate().then(function(response) {
			var currDate=response.date;			
			self.reportdet.toDate = currDate;			
			self.reportdet.fromDate = monthFirst(currDate);
		});
		ReportService.loadMainClassListRefer(self);	
		FilterSearchService.loadPaymentVoucherlist(self);
		FilterSearchService.loadUserTypeItemList(self);
		GridServices.defineGrid(self,null, 'pmentVherSummReportDetGrid',null,columnDefs.pmentVherSummReportDet,null, pagination, null);
	};	
	//Search button click(Load Grid)	
	self.fnSearchPmentVherSummDet = function(){
		self.pmentVherSummReportDetGrid.data=[];
		
		/*if (self.reportdet.branchId == null || self.reportdet.branchId == '' || self.reportdet.branchId == undefined)
			swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_BRANCH,"reportdet.branchId");		
		else if (self.reportdet.accountCode == null || self.reportdet.accountCode == '' || self.reportdet.accountCode == undefined)
			swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_ACCCODE,"reportdet.accountCode");
		else Task 205 if (self.reportdet.otsMainClassId == null || self.reportdet.otsMainClassId == '' || self.reportdet.otsMainClassId == undefined)
			swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_MAINCLASS,"reportdet.otsMainClassId");
		 else if((self.reportdet.otsMainClassId == 12) && (self.reportdet.otsClassId == null || self.reportdet.otsClassId == undefined || self.reportdet.otsClassId == 0)){
				swal("Please select Sub Class", "reportdet.otsClassId");
			}*/
		if(self.reportdet.sourceTypeId == undefined || self.reportdet.sourceTypeId == null || self.reportdet.sourceTypeId == 0 || self.reportdet.sourceTypeId == '')
			swal("Please Select Source Type","reportdet.sourceTypeId");			
		else if ((self.reportdet.fromDate == '' || self.reportdet.fromDate == undefined || self.reportdet.fromDate == null) && (self.reportdet.toDate != '' && self.reportdet.toDate != undefined && self.reportdet.toDate != null))
			swal(FILTER_MSGS.FILTER_VALIDATION.VALID_FROMDT,"reportdet.fromDate");
		else if ((self.reportdet.toDate == '' || self.reportdet.toDate == undefined || self.reportdet.toDate == null) && (self.reportdet.fromDate != '' && self.reportdet.fromDate != undefined && self.reportdet.fromDate != null))
			swal(FILTER_MSGS.FILTER_VALIDATION.VALID_TODT,"reportdet.toDate");
		else	
			ReportService.getPmentVherSummGridDetails(self);
	};	
	//Print button click(PDF)
	self.fnExportPdfpmentvouchersummaryreport = function(){
		jConfirm(FILTER_MSGS.FILTER_VALIDATION.CONFIRM_PRINT,"Warning",function(res){
    		if(res){
    			if(self.reportdet.branchId>0)
    				self.reportdet.branchName=$("#DD_BRANCH option:selected").html();
    			if(self.reportdet.otsClassId>0)
    				self.reportdet.otsClassDesc=$("#DD_SUBCLASS option:selected").html();
    			if(self.reportdet.otsMainClassId>0)
    				self.reportdet.otsMainClassDesc=$("#DD_MAIN_CLASS option:selected").html();
    			if(self.reportdet.paymentStatusId>0)
    				self.reportdet.paymentStatusDesc=$("#DD_PAYMENT_STATUS option:selected").html();   			
    			if(self.pmentVherSummReportDetGrid.data.length > 0){
    				self.printPaymentVoucherSummaryReport(self.reportdet);					
    			}else
    				swal(FILTER_MSGS.FILTER_VALIDATION.NO_DATA_TOPRINT);
    		}
    	});		
	};	
	// Print Generation
	self.printPaymentVoucherSummaryReport = function(doObject) {
		var data = JSON.stringify(doObject);
		var form = $('<form action="'+CONTEXT_PATH+'reports/pdfpmentvhersummreport" method="post" target="_blank" >');
		var input =  $('<input type="hidden" name="json"/>').val(data);
		input.appendTo(form);
		form.appendTo('body');
		form.submit();
	};
	
	//Grid - Payment Voucher Summary Report
	columnDefs.pmentVherSummReportDet = [{
		field : 'slNo',				displayName : 'S.No.',						cellClass: 'text-center',	enableColumnMenu : false,width:50	},{
		field : 'branchCode',		displayName : 'Branch Code',				cellClass: 'text-left',		enableColumnMenu : false,width:150	},{
		field : 'batchNo',			displayName : 'Intermediary Code',			cellClass: 'text-left',		enableColumnMenu : false,width:200	},{
		field : 'agencyName',		displayName : 'Intermediary Name',		cellClass: 'text-left',		enableColumnMenu : false,width:200	},{
		field : 'paymentSerial',	displayName : 'Payment Ref No.',		cellClass: 'text-left',		enableColumnMenu : false,width:200	},{
		field : 'receiptNo',		displayName : 'Official Receipt No.',		cellClass: 'text-left',		enableColumnMenu : false,width:170	},/*{
		field : 'mainClassDesc',	displayName : 'Main Class',					cellClass: 'text-left',		enableColumnMenu : false,width:150	},*//*{
		field : 'coverNoteNo',		displayName : 'CoverNote No.',				cellClass: 'text-left',		enableColumnMenu : false,width:150	},*/{
		field : 'paymentType',		displayName : 'Payment Mode',				cellClass: 'text-left',		enableColumnMenu : false,width:150	},{
		field : 'payStatus',		displayName : 'Online/Manual',				cellClass: 'text-left',		enableColumnMenu : false,width:150	},{	
		field : 'totalPremium',		displayName : 'Payment Total Amount (RM)',	cellClass: 'text-right',	enableColumnMenu : false,width:230	},/*{
		field : 'gstAmount',		displayName : 'Payable Total Amount (RM)',	cellClass: 'text-right',	enableColumnMenu : false,width:230	}*/,{
		field : 'declareDate',		displayName : 'Declared Date',				cellClass: 'text-left',		enableColumnMenu : false,width:150	},{
		field : 'statusGrid',		displayName : 'Payment Status',				cellClass: 'text-left',		enableColumnMenu : false,width:200	},{
		field : 'paymentMode',		displayName : 'Payment Type',				cellClass: 'text-left',		enableColumnMenu : false,width:200	},{
		field : 'acknowledgeBy',	displayName : 'Acknowledged By',			cellClass: 'text-left',		enableColumnMenu : false,width:200	},{
		field : 'acknowledgeOn',	displayName : 'Acknowledged On',			cellClass: 'text-left',		enableColumnMenu : false,width:150	},{
	    field : 'updatedBy',		displayName : 'Updated By',			        cellClass: 'text-left',		enableColumnMenu : false,width:200	},{
		field : 'updatedOn',		displayName : 'Updated On',			        cellClass: 'text-left',		enableColumnMenu : false,width:150	},{
		field : 'paymentDate',		displayName : 'Payment Date',				cellClass: 'text-left',		enableColumnMenu : false,width:150	},{
		field : 'approvalClassCode',displayName : 'Cheque/Bank Ref No.',			cellClass: 'text-left',		enableColumnMenu : false,width:280	},{
		field : 'gatewayApprovalCode',		displayName : 'Approval Code',					cellClass: 'text-left',		enableColumnMenu : false,width:350	},{
		field : 'remarks',		displayName : 'Remarks',					cellClass: 'text-left',		enableColumnMenu : false,width:350	},{
		field : 'staffName',		displayName : 'Alternate Payment Done By',	cellClass: 'text-left',		enableColumnMenu : false,width:230,visible:false	},{
		field : 'modifiedDate',		displayName : 'Alternate Payment Done On',	cellClass: 'text-left',		enableColumnMenu : false,width:230,visible:false	}];
/* Payment Voucher Summary Report Details End*/
	
	
	self.fnRptClearFields=function() {
		
		branch = false;
		agentcode = false;
		datefrmto = false;
		respond = false;
		var gridRow = false;
		
		branch = self.reportdet.branchId == undefined || self.reportdet.branchId == "" || self.reportdet.branchId == 0;
		agentcode = self.reportdet.agentId == undefined || self.reportdet.agentId == "" || self.reportdet.agentId  == 0;
		datefrmto = self.reportdet.fromDate == undefined || self.reportdet.fromDate == "" || self.reportdet.fromDate == null && 
					self.reportdet.toDate == undefined || self.reportdet.toDate == "" || self.reportdet.toDate == null ;
		
		if (self.id == "PAYMENT_VOUCHER_SUMMARY_REPORT"){
			gridRow = self.pmentVherSummReportDetGrid == "" || self.pmentVherSummReportDetGrid.data == null || self.pmentVherSummReportDetGrid.data == []; 			
		}
				
		if(respond ){
			return !respond;
		} else {
			
			if (self.reportdet.agentId != undefined && (self.reportdet.agentId != "" || self.reportdet.agentId != 0 )) {
				self.reportdet.agentId = 0;
			}
			
			if (self.reportdet.fromDate != undefined && (self.reportdet.fromDate != "" ||self.reportdet.fromDate != null)){
				self.reportdet.fromDate = "";
			}
			if (self.reportdet.toDate != undefined && (self.reportdet.toDate != "" ||self.reportdet.toDate != null)){
				self.reportdet.toDate = "";
			}
			if (self.reportdet.otsMainClassId != undefined && (self.reportdet.otsMainClassId != null ||self.reportdet.otsMainClassId != 0)){
				self.reportdet.otsMainClassId = 0;
				self.reportdet.otsMainClassId = "";
			}
			if (self.reportdet.otsClassId != undefined && (self.reportdet.otsClassId != null ||self.reportdet.otsClassId != 0)){
				self.reportdet.otsClassId = 0;
				self.reportdet.otsClassId = "";
			}
			if (self.reportdet.paymentStatusId != undefined && (self.reportdet.paymentStatusId != null ||self.reportdet.paymentStatusId != 0)){
				self.reportdet.paymentStatusId = 0;
				self.reportdet.paymentStatusId = "";
			}
			if (self.reportdet.covernoteStatusId != undefined && (self.reportdet.covernoteStatusId != "" ||self.reportdet.covernoteStatusId != 0)){
				self.reportdet.covernoteStatusId = 0;
			}
			if (self.reportdet.pmtModeId != undefined && (self.reportdet.pmtModeId != "" ||self.reportdet.pmtModeId != 0)){
				self.reportdet.pmtModeId = 0;
			}
			
			self.reportdet.accountCode = "";			
			if (self.id == "PAYMENT_VOUCHER_SUMMARY_REPORT"){
				self.pmentVherSummReportDetGrid.data = [];
			} 			
			localStorageService.remove("reportdet");
			self.dateOnLoad();	
			if(GLOBAL_DATA.staffId != 0){
				self.reportdet.staffInd="Y";
			}
			
			return true;				
		}
		 
	};
	
/* Current Login Users Report Details Start*/
	//Init Function
	self.setDefaultCurrentLoginUsersReportDet = function() {
		if(GLOBAL_DATA.staffId != 0){
			self.reportdet.staffInd="Y";
		}
		self.gridAlertInd = false;
		$("#DD_USER_TYPE_ID").focus();
		CommonService.getCurrentDate().then(function(response) {
			var currDate=response.date;			
			self.reportdet.toDate = currDate;			
			self.reportdet.fromDate = currDate;
		});
		FilterSearchService.loadUserTypeItemList(self);
		GridServices.defineGrid(self,null, 'currentLoginUsersReportDetGrid',null,columnDefs.currentLoginUsersReport,null, pagination, null);
	};			
	//Search button click(Load Grid)	
	self.fnSearchCurrentLoginUsersDet = function(){
		self.currentLoginUsersReportDetGrid.data = [];
		if(self.currentLoginUsersReportDetGrid.data!=undefined)
	    	GridServices.bindGrid(self,'reportdet','currentLoginUsersReportDetGrid',null,pagination,null);		
		if (self.reportdet.userTypeIdForm == null || self.reportdet.userTypeIdForm == '' || self.reportdet.userTypeIdForm == undefined)
			swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_USER_TYPE,"reportdet.userTypeIdForm");		
		else			
			{
			self.reportdet.isPagination = "Y";
			ReportService.getCurrentLoginUsersGridDetails(self);
			}			
	};	
	//Print button click(PDF)
	self.fnExportPdfCurrentLoginUser = function(){
		jConfirm(FILTER_MSGS.FILTER_VALIDATION.CONFIRM_PRINT,"Warning",function(res){
			if(res){
				if(self.currentLoginUsersReportDetGrid.data.length > 0){
					self.reportdet.userTypeDesc = $("#DD_USER_TYPE_ID option:selected").html();	
					self.printCurrentLoginUser(self.reportdet);					
			}else
				swal(FILTER_MSGS.FILTER_VALIDATION.NO_DATA_TOPRINT);
		} });
	};	
	// Print Generation
	self.printCurrentLoginUser = function(doObject) {
		var data = JSON.stringify(doObject);
		var form = $('<form action="'+CONTEXT_PATH+'reports/pdfcurrentloginusersreport" method="post" target="_blank" >');
		var input =  $('<input type="hidden" name="json"/>').val(data);
		input.appendTo(form);
		form.appendTo('body');
		form.submit();
	};	
	//Grid -Current Login Users Report
	columnDefs.currentLoginUsersReport = [{
		field : 'slNo',				displayName : 'S.No.',			cellClass: 'text-center',	enableColumnMenu : false,width:50	},{
		field : 'userName',			displayName : 'Login Name',		cellClass: 'text-left',		enableColumnMenu : false,width:150	},{
		field : 'agencyName',		displayName : 'Intermediary Name',	cellClass: 'text-left',		enableColumnMenu : false,width:250	},{
		field : 'loginTime',		displayName : 'Login Time',		cellClass: 'text-left',		enableColumnMenu : false,width:250	},{
		field : 'branchName',		displayName : 'Branch Name',	cellClass: 'text-left',		enableColumnMenu : false,width:250	},{
		field : 'intermediaryCode',	displayName : 'Intermediary Code',	cellClass: 'text-left',		enableColumnMenu : false,width:250	},{
		field : 'hostSystem',		displayName : 'Host Name',		cellClass: 'text-left',		enableColumnMenu : false,width:250	},{
		field : 'totalRecords',		visible : false	}
	];		
/*Current Login Users Report Details End*/

/* Submission Report - All Channel Details Start*/
	//Init Function
	self.setSubmissionAllReportDet = function() {
		if(GLOBAL_DATA.staffId != 0){
			self.reportdet.staffInd="Y";
		}
		$("#DD_BRANCH").focus();
		self.gridAlertInd =false;
		var pagination = {pageSizes :[10,20,50,100],page:10};
		FilterSearchService.loadPeriodTypeList(self);
		self.fnLoadRptSourceTypes();
		if(self.staffId == 0){
			self.reportdet.sourceTypeId = 1;
			ReportService.loadBranchList(self);
		}
		
	/*	$("#BRANCH_ID").focus();
		self.dateOnLoad();
		self.gridAlertInd = false;
		self.gridAlertIndOne = false;*/
		//ReportService.loadDlyTransBranch(self);
		FilterSearchService.searchTransactionTypeOptionsList(self);
		//ReportService.loadSourceType(self);
		ReportService.getStatusList(self);	
		/*self.dateOnLoad();
		self.fnLoadRptSourceTypes();*/
		
		var events = {"ondblclick" : "fnGetSelectedSubmissionDetail"};
		GridServices.defineGrid(self,null, 'submissionReportDetGrid',null,columnDefs.submissionReportDet,null, pagination, events);
		GridServices.defineGrid(self,null, 'subAllChannelReportDetGrid',null,columnDefs.subAllChannelReportDet,null, pagination, null);
	};
	//Double Click Event
	self.fnGetSelectedSubmissionDetail = function(response){
		self.reportdet.submissionHeaderId=response.submissionHeaderId;		
		ReportService.getSubmissionSecondGridDetails(self);
	};	
	//Search button click event
	self.fnSearchSubmissionAllReportDet = function(){
		var status=true;
		if(self.reportdet.sourceTypeId == undefined || self.reportdet.sourceTypeId == null || self.reportdet.sourceTypeId == 0 || self.reportdet.sourceTypeId == ''){
			swal("Please Select Source Type","reportdet.sourceTypeId");
			status=false;	
		}
		else if (self.reportdet.branchId == 0 || self.reportdet.branchId == ''|| self.reportdet.branchId == undefined || self.reportdet.branchId == null)
			{	swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_BRANCH,"reportdet.branchId");
				status=false;	}
		/*else if (self.reportdet.accountCode == 0 || self.reportdet.accountCode == ''|| self.reportdet.accountCode == undefined || self.reportdet.accountCode == null)
			{	swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_ACCCODE,"reportdet.accountCode");
				status=false;	}
		else if (self.reportdet.fromDate == null || self.reportdet.fromDate == ''|| self.reportdet.fromDate == undefined)
			{	swal(FILTER_MSGS.FILTER_VALIDATION.VALID_FROMDT,"reportdet.fromDate");
				status=false;	}
		else if (self.reportdet.toDate == null || self.reportdet.toDate == ''|| self.reportdet.toDate == undefined)
			{	swal(FILTER_MSGS.FILTER_VALIDATION.VALID_TODT,"reportdet.toDate");
				status=false;	}*/
		else {
			if(self.reportdet.fromDate == null || self.reportdet.fromDate == undefined || self.reportdet.fromDate.trim().length == 0 || 
					self.reportdet.toDate == null || self.reportdet.toDate == undefined || self.reportdet.toDate.trim().length == 0  ){
				self.reportdet.fromDate = "";
				self.reportdet.toDate = "";
			}
			if(status==true)ReportService.getSubmissionFirstGridDetails(self);
			else{
				self.submissionReportDetGrid.data=[];
				GridServices.bindGrid(self,'reportdet','subAllChannelReportDetGrid',null,null,null);
			}
		}
	};
	self.fnResetSubmission = function (){
		self.dateOnLoad();
		self.submissionReportDetGrid.data=[];
		GridServices.bindGrid(self,null, 'subAllChannelReportDetGrid',null,null,null);
		self.reportdet.accountCode = null;	
		self.reportdet.statusId='';
		self.subAccountCodeList = [];
		self.gridAlertInd =false;
		self.gridAlertIndOne =false;		
	};	
	
	// First Grid
	columnDefs.submissionReportDet = [ 
	   {field : 'slNo',displayName : 'S.No.',enableColumnMenu : false,width:60,cellClass: 'text-center'},
       {field : 'intermediaryCode',displayName : 'Intermediary Code',enableColumnMenu : false,width:150,cellClass: 'text-left'},
       {field : 'intermediaryName',displayName : 'Intermediary Name',enableColumnMenu : false,width:250,cellClass: 'text-left'},
       {field : 'originalInvoiceNo',displayName : 'Submission No.',enableColumnMenu : false,width:150,cellClass: 'text-left'},
       {field : 'otsClassDesc',displayName : 'Class',enableColumnMenu : false,width:300,cellClass: 'text-left'},
       {field : 'createModifiedDate',displayName : 'Submission Date',enableColumnMenu : false,width:150,cellClass: 'text-center'},
       {field : 'totalAmount',displayName : 'Total Amount',enableColumnMenu : false,cellFilter: 'number: 2',width:150,cellClass: 'text-right'},
       {field : 'paymentMode',displayName : 'e - Payment',enableColumnMenu : false,width:100,cellClass: 'text-left'},
       {field : 'state',displayName : 'Submission Group',enableColumnMenu : false,width:150,cellClass: 'text-left'},
       {field : 'totalRecords',visible : false}];
	//Second Grid
	columnDefs.subAllChannelReportDet = [ 
       {field : 'slNo',displayName : 'S.No.',enableColumnMenu : false,width:60,cellClass: 'text-center'},
       {field : 'insuredName',displayName : 'Insured Name',enableColumnMenu : false,width:200,cellClass: 'text-left'},
       {field : 'coverNoteNo',displayName : 'Cover Note No.',enableColumnMenu : false,width:200,cellClass: 'text-left'},
       {field : 'vehicleNo',displayName : 'Vehicle No.',enableColumnMenu : false,width:200,cellClass: 'text-left'},
       {field : 'grossPremium',displayName : 'Gross Premium',cellFilter: 'number: 2',enableColumnMenu : false,width:170,cellClass: 'text-right'},
       {field : 'stampDuty',displayName : 'Stamp Duty',cellFilter: 'number: 2',enableColumnMenu : false,width:170,cellClass: 'text-right'},
       {field : 'commission',displayName : 'Commission',cellFilter: 'number: 2',enableColumnMenu : false,width:170,cellClass: 'text-right'},
       {field : 'gstonCommission',displayName : 'GST on Commission',cellFilter: 'number: 2',enableColumnMenu : false,width:170,cellClass: 'text-right'},
       {field : 'totalPremium',displayName : 'Net Premium',cellFilter: 'number: 2',enableColumnMenu : false,width:170,cellClass: 'text-right'}];	
/* Submission Report - All Channel Details End*/
	
/* Gross Premium Summary Report Details Start*/	
	//Init Function
	self.setGrossPremSummaryReportDet = function() {
		if(GLOBAL_DATA.staffId != 0){
			self.reportdet.staffInd="Y";
		}		
		$("#DD_BRANCH").focus();
		self.gridAlertInd =false;
		var pagination = {pageSizes :[10,20,50,100],page:10};
		FilterSearchService.loadPeriodTypeList(self);
		self.fnLoadRptSourceTypes();
		if(self.staffId == 0){
			self.reportdet.sourceTypeId = 1;
			ReportService.loadBranchList(self);
		}
		ReportService.loadYearList(self);
		self.reportdet.gpmonthlyGrid=true;
		self.reportdet.gpyearlyGrid= false;		
		GridServices.defineGrid(self,null, 'grossPremiumReportDetGrid',null,columnDefs.grossPremiumReportDet,null, null, null);	
		GridServices.defineGrid(self,null, 'grossPremiumReportDetYearlyGrid',null,columnDefs.grossPremiumReportDetYear,null,pagination, null);
		GridServices.defineGrid(self,null, 'grossPremiumReportDetMonYearlyGrid',null,columnDefs.grossPremRptMonYearDet,null, pagination, null);
	};
	//ng-blur year validation
	self.fnValidateFromYear = function(){	
		var currentYear = new Date().getFullYear();		
		if(self.reportdet.periodYear > currentYear){
			self.reportdet.periodYear="";
			swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_PERIOD_LESSEQUAL_CUR,"reportdet.periodYear");
			}
		};
		
	self.fnValidateFromYearGrsPrem = function(){	
		var currentYear = new Date().getFullYear();	
		if(self.reportdet.periodYear > 0)
		{
			if(self.reportdet.periodYear > currentYear){
				self.reportdet.periodYear="";
				swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_PERIOD_LESSEQUAL_CUR,"reportdet.periodYear");
				}
		}
		else
		{
			GridServices.bindGrid(self,null,'grossPremiumMonthlyReportDetGrid',null,null,null);	
		}
	};
	self.fnclearPagination = function(){	
		GridServices.bindGrid(self,null,'grossPremiumMonthlyReportDetGrid',null,null,null);	
	};
		
	self.fnValidateYearlyFromYear = function(){	
		var currentYear = new Date().getFullYear();		
		if(self.reportdet.periodFromYear > currentYear){
			self.reportdet.periodFromYear="";
			swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_PERIOD_LESSEQUAL_CUR,"reportdet.periodFromYear");
			}
		else if(self.reportdet.periodToYear!=null && self.reportdet.periodToYear.trim().length != 0 && self.reportdet.periodToYear!='' && self.reportdet.periodToYear !=undefined ){    
			alert(self.reportdet.periodToYear);
			if(self.reportdet.periodFromYear > self.reportdet.periodToYear){
				self.reportdet.periodFromYear="";
				swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_PERIOD_LESSEQUAL_FROM,"reportdet.periodFromYear");
			}
		}
		};
	self.fnValidateYearlyToYear = function(){	
		if(self.reportdet.periodToYear < self.reportdet.periodFromYear){
			self.reportdet.periodToYear="";
			swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_PERIOD_LESSEQUAL_FROM,"reportdet.periodToYear");
			}
		};
	
	//Search button click event
	self.fnsearchGrossPremiumSummary = function(){
		self.reportdet.branchName = $("#DD_BRANCH option:selected").html();	
		self.reportdet.searchType = $("#DD_SEARCH_TYPE option:selected").html();		
		self.grossPremiumReportDetGrid.data=[];
		self.grossPremiumReportDetYearlyGrid.data=[];
		if(self.reportdet.sourceTypeId == undefined || self.reportdet.sourceTypeId == null || self.reportdet.sourceTypeId == 0 || self.reportdet.sourceTypeId == ''){
			swal("Please Select Source Type","reportdet.sourceTypeId");
		}
		else if (self.reportdet.branchId == null || self.reportdet.branchId == '' || self.reportdet.branchId == undefined)
			{			
			swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_BRANCH,"reportdet.branchId");
			}			
		else if (self.reportdet.accountCode == null || self.reportdet.accountCode == '' || self.reportdet.accountCode == undefined){
			swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_ACCCODE,"reportdet.accountCode");
		}			
		else if (self.reportdet.searchTypeId == null || self.reportdet.searchTypeId =='' || self.reportdet.searchTypeId ==undefined){
			swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_TYPE,"reportdet.searchTypeId");
		}			
		else if(self.reportdet.searchTypeId==1){		
			if (self.reportdet.periodYear == null || self.reportdet.periodYear =='' || self.reportdet.periodYear ==undefined){
				swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_PERIOD,"reportdet.periodYear");	
			}				
			else 
				ReportService.getGrossPremSummaryGridDetails(self);			
		}
		else if(self.reportdet.searchTypeId ==2){
			self.grossPremiumReportDetMonYearlyGrid.data=[];
			self.reportdet.gpMonthlyGrid = true;
			self.reportdet.gpyearlyGrid = false;
			if (self.reportdet.periodYear == null || self.reportdet.periodYear =='' || self.reportdet.periodYear ==undefined){
				swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_PERIOD,"reportdet.periodYear");	
			}				
			else 
				ReportService.getGrossPremSummaryGridDetails(self);
		}
		else if(self.reportdet.searchTypeId ==3){			
			 if (self.reportdet.periodFromYear == null || self.reportdet.periodFromYear =='' || self.reportdet.periodFromYear ==undefined)
				 {
				 swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_PERIOD,"reportdet.periodFromYear");	
				 
				 }				
			else if (self.reportdet.periodToYear == null || self.reportdet.periodToYear =='' || self.reportdet.periodToYear ==undefined){
				swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_PERIOD,"reportdet.periodToYear");
				}				
			else ReportService.getGrossPremSummaryGridDetails(self);
		}
				
		
	};
	// Search Type On change function
	self.fnsearchTypOnChange = function(){	
		if(self.reportdet.searchTypeId==1){			
			self.reportdet.periodYearOption = true;
			self.reportdet.periodMonthOption = false;
			self.reportdet.gpmonthlyyearlyGrid = false;
			self.reportdet.gpmonthlyGrid=true;
			self.reportdet.gpyearlyGrid= false;			
			self.grossPremiumReportDetYearlyGrid.data=[];
			self.grossPremiumReportDetMonYearlyGrid.data=[];
		}
		else if(self.reportdet.searchTypeId ==2){
			self.reportdet.periodYear="";
			self.reportdet.periodYearOption = true;
			self.reportdet.periodMonthOption = false;
			self.reportdet.gpmonthlyyearlyGrid = true;
			self.reportdet.gpmonthlyGrid=false;
			self.reportdet.gpyearlyGrid= false;
			self.grossPremiumReportDetGrid.data=[];
			self.grossPremiumReportDetYearlyGrid.data=[];
		}
		else if(self.reportdet.searchTypeId ==3){
			self.reportdet.periodYear="";
			self.reportdet.periodFromYear="";
			self.reportdet.periodToYear="";
			self.reportdet.periodMonthOption = true;
			self.reportdet.periodYearOption = false;
			self.reportdet.gpmonthlyyearlyGrid = false;
			self.reportdet.gpmonthlyGrid= false;
			self.reportdet.gpyearlyGrid = true;
			self.grossPremiumReportDetGrid.data=[];
			self.grossPremiumReportDetMonYearlyGrid.data=[];
		}	
		else 
			{
			self.reportdet.periodFromYear="";
			self.reportdet.periodToYear="";
			}
	};
	//First Grid
	columnDefs.grossPremiumReportDet = [  {field : 'sino',displayName : 'S.NO.',cellClass: 'text-left',enableColumnMenu : false,width:70},
	                                      {field : 'month',displayName : 'MONTH',cellClass: 'text-left',enableColumnMenu : false,width:100},
	                           	       {field : 'strGPMotor',displayName : 'MOTOR',cellClass: 'text-right',enableColumnMenu : false},
	                        	       {field : 'strGPPA',displayName : 'PERSONAL ACCIDENT',cellClass: 'text-right',enableColumnMenu : false,width:170},
	                        	       {field : 'strGPWorkmen',displayName : 'WORKMEN',cellClass: 'text-right',enableColumnMenu : false},
	                        	       {field : 'strGPFire',displayName : 'FIRE',cellClass: 'text-right',enableColumnMenu : false},
	                        	       {field : 'strGPMarine',displayName : 'MARINE',cellClass: 'text-right',enableColumnMenu : false},
	                        	       {field : 'strGPBond',displayName : 'BOND',cellClass: 'text-right',enableColumnMenu : false}
	];
	//Second Grid
	columnDefs.grossPremiumReportDetYear = [ {field : 'sino',displayName : 'S.NO.',cellClass: 'text-left',enableColumnMenu : false,width:70},
	                                         { field : 'month',	displayName : 'Year',	cellClass: 'text-left',	enableColumnMenu : false	},
	                                         { field : 'strGPMotor',	displayName : 'Motor', cellClass: 'text-right',	enableColumnMenu : false	},
	                                         { field : 'strGPPA',	displayName : 'Personal Accident',	cellClass: 'text-right',	enableColumnMenu : false	},
	                                         { field : 'strGPWorkmen', displayName : 'Workmen',	cellClass: 'text-right',	enableColumnMenu : false	},
	                                         {field : 'strGPFire',displayName : 'Fire',cellClass: 'text-right',enableColumnMenu : false},
	                                         {field : 'strGPMarine',displayName : 'Marine',cellClass: 'text-right',enableColumnMenu : false},
	  	                        	       {field : 'strGPBond',displayName : 'Bond',cellClass: 'text-right',enableColumnMenu : false}

	                                         ];
	//Third Grid
	columnDefs.grossPremRptMonYearDet = [ {
		field : 'year',				displayName : 'Year',				cellClass: 'text-left',		enableColumnMenu : false},{
		field : 'month',			displayName : 'Month / Year to Date',	cellClass: 'text-left',		enableColumnMenu : false},{
		field : 'mainClassDesc',	displayName : 'Main Class',				cellClass: 'text-left',		enableColumnMenu : false},{
		field : 'strGPMotor',		displayName : 'Gross Premium',		cellClass: 'text-right',	enableColumnMenu : false}
	];


/* Gross Premium Summary Report Details End*/
	
/* Refer Risk Statistics Report Details Start*/
	//Init Function
	self.setApprovalStatisticsReportDet = function() {	
		self.reportdet.gridAlertInd = false;
		if(GLOBAL_DATA.staffId != 0){
			self.reportdet.staffInd="Y";
		}
		ReportService.loadMainClassListRefer(self);
		FilterSearchService.approvedRejectedOptionsList(self);
		CommonService.getCurrentDate().then(function(response) {
			var currDate=response.date;			
			self.reportdet.toDate = currDate;			
			self.reportdet.fromDate = monthFirst(currDate);
		});
		//Grid
		columnDefs.approvalStatisticsDet = [{
			field : 'slNo',
			displayName : 'S.No.',
			enableColumnMenu : false,width:60,
			cellClass: 'text-center' 
		},{
			field : 'branchName',
			displayName : 'Branch',
			enableColumnMenu : false,width:120,
			cellClass: 'text-left' 
		},{
			field : 'accountCode',
			displayName : 'Intermediary Code',
			enableColumnMenu : false,width:250,
			cellClass: 'text-left' 
		},{
			field : 'agentName',
			displayName : 'Intermediary Name',
			enableColumnMenu : false,width:250,
			cellClass: 'text-left' 
		},{
			field : 'approvalClassCode',
			displayName : 'Vehicle Type',
			enableColumnMenu : false,width:150,
			cellClass: 'text-left'
		},{
			field : 'coverDesc',
			displayName : 'Coverage Type',
			enableColumnMenu : false,width:150,
			cellClass: 'text-left' 
		},{
			field : 'coverNoteNo',
			displayName : 'Cover Note No.',
			enableColumnMenu : false,width:150,
			cellClass: 'text-left' 
		},{
			field : 'referNo',
			displayName : 'Ref. No.',
			enableColumnMenu : false,width:70,
			cellClass: 'text-left' 
		},{
			field : 'issueDate',
			displayName : 'Cover Note Issued Date',
			enableColumnMenu : false,width:190,
			cellClass: 'text-center' 
		},{
			field : 'sumInsured',
			displayName : 'Sum Insured',
			enableColumnMenu : false,width:120, 
			cellFilter: 'number: 2',
			cellClass: 'text-right' 
		},{
			field : 'vehicleNo',
			displayName : 'Vehicle No.',
			enableColumnMenu : false,width:140,
			cellClass: 'text-left' 
		},{
			field : 'makeName',
			displayName : 'Make Name',
			enableColumnMenu : false,width:100,
			cellClass: 'text-left' 
		},{
			field : 'modelName',
			displayName : 'Model Name',
			enableColumnMenu : false,width:130,
			cellClass: 'text-left' 
		},{
			field : 'approveRejectDate',
			displayName : 'Date Of Approval',
			enableColumnMenu : false,width:150,
			cellClass: 'text-center' 
		},{
			field : 'approvedBy',
			displayName : 'Approved By',
			enableColumnMenu : false,width:120,
			cellClass: 'text-left' 
		},{
			field : 'reasonForApproval',
			displayName : 'Reason For Approval',
			enableColumnMenu : false,width:250,
			cellClass: 'text-left' 
		},{
			field : 'totalRecords',
			visible : false
		}];	
		GridServices.defineGrid(self,null, 'approvalStatisticsReportGrid',null,columnDefs.approvalStatisticsDet,null, pagination, null);
	};	
	//Load Main Class
	self.fnSetSelectedMainClass = function(formObject){	
		if(formObject.otsMainClassId != 0 && formObject.otsMainClassId !='' && formObject.otsMainClassId !=undefined ){			
			//ReportService.loadClassByMainClassRefer(formObject);
			$http.post(CONTEXT_PATH+'reports/loadClassByMainClass',''+Number(formObject.otsMainClassId)).then(function(response) {
				self.subclassCodeOption = response.data;
			});
		}
	};	
	//Search button click event - Refer Risk Statistics Report
	self.fnSearchApprovalStatistics = function(){
		self.approvalStatisticsReportGrid.data=[];
		if(self.reportdet.otsMainClassId > 0)
		{self.reportdet.otsMainClassDesc = $("#DD_MAINCLASS option:selected").html();}
		if(self.reportdet.otsClassId > 0)
		{self.reportdet.otsClassDesc = $("#DD_SUBCLASS option:selected").html();}
		if (self.reportdet.otsMainClassId == null || self.reportdet.otsMainClassId == '' || self.reportdet.otsMainClassId == undefined || self.reportdet.otsMainClassId == 0)
			swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_MAINCLASS,"reportdet.otsMainClassId");
		else if (self.reportdet.fromDate == null || self.reportdet.fromDate == '' || self.reportdet.fromDate == undefined || self.reportdet.fromDate == 0)
			swal(FILTER_MSGS.FILTER_VALIDATION.VALID_FROMDT,"reportdet.fromDate");
		else if (self.reportdet.toDate == null || self.reportdet.toDate == '' || self.reportdet.toDate == undefined || self.reportdet.toDate == 0)
			swal(FILTER_MSGS.FILTER_VALIDATION.VALID_TODT,"reportdet.toDate");
		else
			ReportService.getreportsapprovalstatisticsGridDetails(self);
	};		
	
//Date Validation (FromDate) - Refer Risk/E-motor Cover Note
	 self.fnOnChangeFromDateRefer = function(){
			if(self.reportdet.fromDate!=''){
				if(self.reportdet.fromDate!=undefined){
					if(self.reportdet.fromDate instanceof Date)
						fromDate=dateToString(self.reportdet.fromDate);
					else
						{						 
							if(self.checkDatePattern(self.reportdet.fromDate) && isValidDate(self.reportdet.fromDate))
							{
								fromDate=self.reportdet.fromDate;
							}
							else{
								self.reportdet.fromDate="";
								return false;
							}
						}
					CommonService.getCurrentDate().then(function(response){
						if(stringToDate(fromDate)>stringToDate(response.date)){
							swal(FILTER_MSGS.FILTER_VALIDATION.EQUAL_LESS_SYSDATE);
							self.reportdet.fromDate='';
							return false;
						}
					});	
				}else{
					self.reportdet.fromDate='';
				 	self.reportdet.toDate='';
				 	return false;
				}
			}
			return true;
		};
		
		self.checkDatePattern = function(date)
		{
			 var datePat = /^(\d{1,2})(-)(\d{1,2})\2(\d{4})$/;
			 var matchArray = date.match(datePat);
			
			 if (date!=undefined && date!=null && date !="" && matchArray == null) {
				swal("Date is not in a valid format.");
				return false;
			 }
			 return true;
		};
		
	//Date Manipulation - Refer Risk/E-motor Cover Note
		self.fnGetToDateRefer = function(formObject) {
				var currDate=formObject.fromDate;
				if(!monthLast(currDate))
				{
					formObject.fromDate="";
					return false;
				}
				else
				{
					CommonService.getCurrentDate().then(function(response) {
						var today=response.date;
						if(stringToDate(monthLast(currDate))>=stringToDate(today))
						{
							self.reportdet.toDate = today;
						}
						else
						{
							self.reportdet.toDate = monthLast(currDate);
						}			
					});			
				}
				return true;
		};
		
		//Date Validation (ToDate) - Refer Risk/E-motor Cover Note
		self.fnOnChangeToDateRefer = function(){
			var toDate = fnDateManipulation(self.reportdet.fromDate,1,"+", "M");
			if(!(self.checkDatePattern(self.reportdet.toDate) && isValidDate(self.reportdet.toDate)))
			{
				self.reportdet.toDate="";
				return false;
			}
			if(self.reportdet.toDate==undefined){
				self.reportdet.toDate='';
			}
			else if(self.reportdet.fromDate!=''&& self.reportdet.fromDate!=undefined){
				if(self.reportdet.fromDate instanceof Date)
					fromDate=dateToString(self.reportdet.fromDate);
				else
					fromDate=self.reportdet.fromDate;				
				if(stringToDate(fromDate)>stringToDate(self.reportdet.toDate)){
					swal(FILTER_MSGS.FILTER_VALIDATION.EQUAL_GREATER_FROMDT);
					self.reportdet.toDate='';
				} 
			}
			CommonService.getCurrentDate().then(function(response){
				if(stringToDate(self.reportdet.toDate)>stringToDate(response.date)){
					swal("To Date should be less than or equal to current date");
					self.reportdet.toDate='';
					return false;
				}
			});
			if(stringToDate(self.reportdet.toDate)>stringToDate(monthLast(self.reportdet.fromDate))){
			
				swal("To Date month should be equal to From Date month.");
				self.reportdet.toDate="";
				return false;
			}
		 };
		 					/* Refer Risk Statistics Report Details End */
	
/* Agent Production Report Details Start */
	//Init Function
	self.setAgentProductionReportDet = function() {		
		if(GLOBAL_DATA.staffId != 0){
			self.reportdet.staffInd="Y";
		}
		$("#DD_BRANCH").focus();
		CommonService.getCurrentDate().then(function(response) {
			var currDate=response.date;			
			self.reportdet.toDate = currDate;			
			self.reportdet.fromDate = monthFirst(currDate);
		});
		self.gridAlertInd = false;
	
		ReportService.loadMainClassListRefer1(self);
		self.fnLoadRptSourceTypes();
		
		if(self.staffId == 0){
			self.reportdet.sourceTypeId = 1;
			ReportService.loadDlyTransBranch(self);
		}
		$("#DD_BRANCH").focus();
		if(GLOBAL_DATA.staffId != 0){
			self.reportdet.staffInd="Y";
		}
		var pagination = {pageSizes :[10,20,50,100],page:10};
		var navThirdGrid="false";	
		self.navGrid="";
		self.reportdet.gridTitle="Agent Production Detail";
		self.firstGridView=true;
		self.secondGridView=true;
		self.thirdGridView=false;
		self.fourthGridView=false;
		self.firstGridAlertInd=false;
		self.nextBtn="false";
		self.backBtn="false";
		ReportService.loadDlyTransBranch(self);
		ReportService.loadMainClassListRefer1(self);
		self.dateOnLoad();
		$scope.reportdet.defaultDate = $filter("date")(Date.now(), 'dd-MM-yyyy');		
		var events = {"ondblclick" : "fnGetSelectedAgentProductionDetail"};
		
		GridServices.defineGrid(self,null, 'agentProdReportFirstGrid',null,columnDefs.agentProdFirstDet,null, pagination, events); //Agent Production First Grid  
		GridServices.defineGrid(self,null, 'agentProdReportSecGrid',null,columnDefs.agentProdSecondDet,null, pagination, null); //Agent Production SubGrid 
		GridServices.defineGrid(self,null, 'agentProdReportFirstGridDetForCoverNoteDetails',null,columnDefs.agentProdFirstDetForCoverNoteDetails,null, pagination, events); //Agent Production Third Grid 
		GridServices.defineGrid(self,null, 'agentProdSecodndSubDetForVehicle',null,columnDefs.agentProdSecodndDetForVehicle,null, pagination, null);//Agent Production Vehicle Type Grid Only For Motor Class
	};	
	//Search button click event
	self.fnSearchAgentProductionReportDet = function(formObject){
		var status=true;
		if(self.reportdet.sourceTypeId == undefined || self.reportdet.sourceTypeId == null || self.reportdet.sourceTypeId == 0 || self.reportdet.sourceTypeId == '')
		{	swal("Please Select Source Type","reportdet.sourceTypeId");
			status=false;	}
		else if(self.reportdet.branchId == 0 || self.reportdet.branchId == '' || self.reportdet.branchId == undefined || self.reportdet.branchId == null)
			{	swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_BRANCH,"reportdet.branchId");
				status=false;	}
		else if (self.reportdet.accountCode == 0 || self.reportdet.accountCode == ''|| self.reportdet.accountCode == undefined || self.reportdet.accountCode == null)
			{	swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_ACCCODE,"reportdet.accountCode");
				status=false;	}
		else if (self.reportdet.fromDate == null || self.reportdet.fromDate == ''|| self.reportdet.fromDate == undefined)
			{	swal(FILTER_MSGS.FILTER_VALIDATION.VALID_FROMDT,"reportdet.fromDate");
				status=false;	}
		else if (self.reportdet.toDate == null || self.reportdet.toDate == ''|| self.reportdet.toDate == undefined)
			{	swal(FILTER_MSGS.FILTER_VALIDATION.VALID_TODT,"reportdet.toDate");
				status=false;	}
		if(status==true){
			self.nextBtn="false";
			self.backBtn="false";
			self.reportdet.reportId=1001;	
			localStorageService.set("mondet",self.reportdet);	
			self.navGrid="first";
			navThirdGrid="false";
			self.firstGridView=true;
			self.secondGridView=true;
			self.thirdGridView=false;
			self.fourthGridView=false;		
			self.reportdet.isPagination = "Y";
			ReportService.getAgentProductionGridDetails(self);
		}
	};
	self.fnClearAccodeAgentProduction = function(){
		self.dateOnLoad();
		self.reportdet.accountCode="";
		self.subAccountCodeList="";
		self.reportdet.agentName="";
		self.reportdet.otsMainClassId="";
		self.reportdet.otsClassId="";
		GridServices.bindGrid(self,null,'agentProdReportFirstGrid',null,"Y",null);	
		GridServices.bindGrid(self,null,'agentProdReportSecGrid',null,"Y",null);	
	};
    //row double click event - agent production method
	self.fnGetSelectedAgentProductionDetail = function (rowEntity){
		if(self.navGrid=="first"){			
		    localStorageService.set("firstGrid",self.agentProdReportFirstGrid.data);
		    localStorageService.set("firstGridSub",self.agentProdReportSecGrid.data);
			self.reportdet.reportId=1002;			
			self.backBtn="true";
			self.nextBtn="false";	
			self.navGrid="second";
			navThirdGrid="false";
			self.firstGridView=true;
			self.secondGridView=false;
			self.thirdGridView=false;
			self.fourthGridView=false;
			self.reportdet.gridTitle="Sub Class Detail";
			self.reportdet.otsMainClassId = rowEntity.mainClassId;
			self.reportdet.otsClassId = rowEntity.onlineEndorId;			
			self.reportdet.otsClassDesc=rowEntity.userType;
			self.reportdet.isPagination = "Y";
			ReportService.getAgentProductionGridDetails(self);
		}else if(self.navGrid=="second"){
			localStorageService.set("secondGrid",self.agentProdReportFirstGrid.data);			
			self.reportdet.reportId=1003;			
			self.backBtn="true";
			self.nextBtn="false";
			navThirdGrid="true";
			self.navGrid="third";
			self.firstGridView=false;
			self.secondGridView=false;
			self.thirdGridView=true;
			if(rowEntity.mainClassId==4)
				self.fourthGridView=true;
			else self.fourthGridView=false;
			self.reportdet.gridTitle="Cover Note Details";
			self.reportdet.otsMainClassId = rowEntity.mainClassId;
			self.reportdet.otsClassId = rowEntity.onlineEndorId;			
			self.reportdet.otsClassDesc=rowEntity.userType;
			self.reportdet.statusId=rowEntity.coverNoteId;
			self.reportdet.isPagination = "Y";
			ReportService.getAgentProductionGridDetails(self);
		}		
		
	};	 	
	//Next button
	self.fnAgentNext=function(){		
		if(self.navGrid=="first"){
			self.reportdet.reportGridDet=localStorageService.get("secondGrid");	
			self.backBtn="true";			
			self.nextBtn=((navThirdGrid=="true")?"true":"false");
			self.firstGridView=true;
			self.secondGridView=false;
			self.thirdGridView=false;
			self.fourthGridView=false;
			self.navGrid="second";	
			self.reportdet.gridTitle="Sub Class Detail";
			self.reportdet.isPagination = "Y";
			GridServices.bindGrid(self,'reportdet','agentProdReportFirstGrid', self.reportdet.reportGridDet,"Y",null);
		}else if(self.navGrid=="second"){
			if(self.reportdet.otsMainClassId==4){
				self.fourthGridView=true;				
				GridServices.bindGrid(self,'reportdet','agentProdSecodndSubDetForVehicle',localStorageService.get("fourthGrid"),"Y",null);				
			}else self.fourthGridView=false;				
			self.backBtn="true";
			self.nextBtn="false";
			self.firstGridView=false;
			self.secondGridView=false;
			self.thirdGridView=true;
			self.reportdet.gridTitle="Cover Note Details";				
			self.navGrid="third";
			self.reportdet.isPagination = "Y";
			GridServices.bindGrid(self,'reportdet','agentProdReportFirstGridDetForCoverNoteDetails',localStorageService.get("thirdGrid"),"Y",null);
		}
		
	};
	//Back button
	self.fnAgentBack=function(){
		if(self.navGrid=="second"){		
			localStorageService.set("secondGrid",self.agentProdReportFirstGrid.data);
			self.backBtn="false";
			self.nextBtn="true";
			self.firstGridView=true;
			self.secondGridView=true;
			self.thirdGridView=false;
			self.fourthGridView=false;
			self.navGrid="first";
			self.reportdet.gridTitle="Agent Production Detail";
			self.reportdet.isPagination = "Y";
			self.reportdet.reportGridDet=localStorageService.get("firstGrid");
			GridServices.bindGrid(self,'reportdet', 'agentProdReportFirstGrid', self.reportdet.reportGridDet,"Y",null);
			self.reportdet.reportGridDet=localStorageService.get("firstGridSub");
			GridServices.bindGrid(self,'reportdet', 'agentProdReportSecGrid', self.reportdet.reportGridDet,"Y",null);
		}else if(self.navGrid=="third"){				
			if(self.reportdet.otsMainClassId==4)
				localStorageService.set("fourthGrid",self.agentProdSecodndSubDetForVehicle.data);					
			localStorageService.set("thirdGrid",self.agentProdReportFirstGridDetForCoverNoteDetails.data);
			self.reportdet.reportGridDet=localStorageService.get("secondGrid");			
			self.backBtn="true";
			self.nextBtn=((navThirdGrid=="true")?"true":"false");
			self.firstGridView=true;
			self.secondGridView=false;
			self.thirdGridView=false;
			self.fourthGridView=false;
			self.navGrid="second";
			self.reportdet.gridTitle="Sub Class Detail";
			self.reportdet.isPagination = "Y";
			GridServices.bindGrid(self,'reportdet', 'agentProdReportFirstGridDetForCoverNoteDetails', self.reportdet.reportGridDet,"Y",null);
		}		
	};
	//Agent Production Report Print button click event
	self.fnExportPdfAgentProduction = function(){					
		var length=0;
		if(self.navGrid=="first"){
			self.reportdet.reportId=1001;
			length=self.agentProdReportFirstGrid.data.length; 
			self.reportdet=localStorageService.get("mondet");		
		}else if(self.navGrid=="second"){
			self.reportdet.reportId=1002;
			length=self.agentProdReportFirstGrid.data.length;
			self.reportdet.monthlyProductionReportGrid=localStorageService.get("secondGrid");	
		}else{
			self.reportdet.reportId=1003;
			length=self.agentProdReportFirstGridDetForCoverNoteDetails.data.length;
			self.reportdet.monthlyProductionReportGrid=localStorageService.get("thirdGrid");	
		}
		if (length > 0) {
			self.reportdet.logInName = $("#DD_SUB_AGENT_ID").val().length != 0 ? $("#DD_SUB_AGENT_ID option:selected").text() : null;
			self.fnExportPdf(self.reportdet,'pdfagentproductionreport');			
		} else {
			alert(FILTER_MSGS.FILTER_VALIDATION.NO_DATA_TOPRINT);
		}
	}; 
	/*Grid Start*/
	columnDefs.agentProdFirstDet = [
        {field : 'sino',displayName : 'S.No',enableColumnMenu : false,width:60,cellClass: 'text-center' },
	    {field : 'userType',displayName : 'Class Type',enableColumnMenu : false,width:250,cellClass: 'text-left' },
	    {field : 'slNo',displayName : 'No.of eCN',enableColumnMenu : false,width:100,cellClass: 'text-center'},
	    {field : 'grossPremium',displayName : 'Gross Premium',cellFilter: 'number: 2',enableColumnMenu : false,width:150,cellClass: 'text-right'},
	    {field : 'gstPremium',displayName : 'GST Premium',cellFilter: 'number: 2',enableColumnMenu : false,width:150,cellClass: 'text-right'},
	    {field : 'totalAmount',displayName : 'Net Premium',cellFilter: 'number: 2',enableColumnMenu : false,width:150,cellClass: 'text-right'},
	    {field : 'commission',displayName : 'Commission',cellFilter: 'number: 2',enableColumnMenu : false,width:150,cellClass: 'text-left',cellClass: 'text-right'},
	    {field : 'gstonCommission',displayName : 'GST on Commission',cellFilter: 'number: 2',enableColumnMenu : false,width:150,cellClass: 'text-right'},
	    {field : 'gstTransferAmt',displayName : 'Transfer Fee',cellFilter: 'number: 2',enableColumnMenu : false,width:150,cellClass: 'text-right'},
	    {field : 'totalPremium',displayName : 'Total Premium',cellFilter: 'number: 2',enableColumnMenu : false,width:150,cellClass: 'text-right'},
	    {field : 'gstPercent',displayName : '% of Contribution by Class',enableColumnMenu : false,width:200,cellClass: 'text-right'},
	    {field : 'mainClassId',displayName : 'Main Class Id',enableColumnMenu : false,width:150,visible:false,cellClass: 'text-left'},
	    {field : 'onlineEndorId',displayName : 'Class Id',enableColumnMenu : false,width:150,visible:false,cellClass: 'text-left'},
	    {field : 'coverNoteId',displayName : 'Sub Class Id',enableColumnMenu : false,width:150,visible:false,cellClass: 'text-left'},
	    {field : 'reportId',displayName : 'Report Id',enableColumnMenu : false,width:150,visible:false,cellClass: 'text-left'}];
	/* Cover Note Details */
	columnDefs.agentProdFirstDetForCoverNoteDetails = [ 
	    {field : 'slNo',displayName : 'S.No.',enableColumnMenu : false,width:60,cellClass: 'text-center'},
	    {field : 'coverNoteNo',displayName : 'Cover Note No.',enableColumnMenu : false,width:150,cellClass: 'text-left'},
	    {field : 'vehicleNo',displayName : 'Vehicle Type',enableColumnMenu : false,width:150,cellClass: 'text-left'},
	    {field : 'grossPremium',displayName : 'Gross Premium',cellFilter: 'number: 2',enableColumnMenu : false,width:150,cellClass: 'text-right'},
	    {field : 'gstPremium',displayName : 'GST Premium',cellFilter: 'number: 2',enableColumnMenu : false,width:150,cellClass: 'text-right'},
	    {field : 'totalAmount',displayName : 'Net Premium',cellFilter: 'number: 2',enableColumnMenu : false,width:150,cellClass: 'text-right'},
	    {field : 'commission',displayName : 'Commission',cellFilter: 'number: 2',enableColumnMenu : false,width:150,cellClass: 'text-right'},
	    {field : 'gstonCommission',displayName : 'GST on Commission',cellFilter: 'number: 2',enableColumnMenu : false,width:150,cellClass: 'text-right'},
	    {field : 'gstTransferAmt',displayName : 'Transfer Fee',cellFilter: 'number: 2',enableColumnMenu : false,width:150,cellClass: 'text-right'},
	    {field : 'totalPremium',displayName : 'Total Premium',cellFilter: 'number: 2',enableColumnMenu : false,width:150,cellClass: 'text-right'},
	    {field : 'gstPercent',displayName : '% of Contribution by Class',enableColumnMenu : false,width:180,cellClass: 'text-right'},
	    {field : 'mainClassId',displayName : 'Main Class Id',enableColumnMenu : false,width:150,visible:false,cellClass: 'text-left'},
	    {field : 'onlineEndorId',displayName : 'Class Id',enableColumnMenu : false,width:150,visible:false,cellClass: 'text-left'},
	    {field : 'coverNoteId',displayName : 'Sub Class Id',enableColumnMenu : false,width:150,visible:false,cellClass: 'text-left'},
	    {field : 'reportId',displayName : 'Report Id',enableColumnMenu : false,width:150,visible:false,cellClass: 'text-left'}];
	
	columnDefs.agentProdSecodndDetForVehicle = [ 
	    {field : 'vehicleTypeDesc',displayName : 'Vehicle Type Desc.',enableColumnMenu : false,width:200,cellClass: 'text-left'},
	    {field : 'vehBodyName',displayName : 'Vehicle Type',enableColumnMenu : false,width:150,cellClass: 'text-left'},
	    {field : 'vehicleCapacity',displayName : 'Total',enableColumnMenu : false,width:100,cellClass: 'text-center'}];
	
	columnDefs.agentProdSecondDet = [ 
	    {field : 'sino',displayName : 'S.No',enableColumnMenu : false,width:60,cellClass: 'text-center' },
	    {field : 'coverNoteType',displayName : 'Total Type',enableColumnMenu : false,width:150,cellClass: 'text-left'},
	    {field : 'slNo',displayName : 'No.of eCN',enableColumnMenu : false,width:100,cellClass: 'text-center'},
	    {field : 'grossPremium',displayName : 'Gross Premium',cellFilter: 'number: 2',enableColumnMenu : false,width:150,cellClass: 'text-right'},
	    {field : 'gstPremium',displayName : 'GST Premium',cellFilter: 'number: 2',enableColumnMenu : false,width:150,cellClass: 'text-right'},
	    {field : 'totalAmount',displayName : 'Net Premium',cellFilter: 'number: 2',enableColumnMenu : false,width:150,cellClass: 'text-right'},
	    {field : 'commission',displayName : 'Commission',cellFilter: 'number: 2',enableColumnMenu : false,width:150,cellClass: 'text-right'},
	    {field : 'gstonCommission',displayName : 'GST on Commission',cellFilter: 'number: 2',enableColumnMenu : false,width:150,cellClass: 'text-right'},
	    {field : 'gstTransferAmt',displayName : 'Transfer Fee',cellFilter: 'number: 2',enableColumnMenu : false,width:150,cellClass: 'text-right'},
	    {field : 'totalPremium',displayName : 'Total Premium',cellFilter: 'number: 2',enableColumnMenu : false,width:150,cellClass: 'text-right'},
	    {field : 'gstPercent',displayName : '% of Contribution by Class',enableColumnMenu : false,width:200,cellClass: 'text-right'}];
/* Agent Production Report Details End */

/* Monthly Production Report Details Start */
	//Init Function
	self.setMonthlyProductionReportDet = function() {
		self.fnLoadRptSourceTypes().then(function(response){
			if(GLOBAL_DATA.staffId != 0){
				self.reportdet.staffInd="Y";
			}
			$("#DD_BRANCH").focus();
			CommonService.getCurrentDate().then(function(response) {
				var currDate=response.date;			
				self.reportdet.toDate = currDate;			
				self.reportdet.fromDate = monthFirst(currDate);
			});
			self.gridAlertInd = false;
			ReportService.loadDlyTransBranch(self);
			ReportService.loadMainClassListRefer1(self);
		});
		$("#DD_BRANCH_ID").focus();
		self.navGrid="";
		var navThirdGrid="false";		
		self.nextBtn="false";
		self.backBtn="false";
		self.reportdet.gridAlertInd=false; 
		self.fisrtGridView=true;
		self.reportdet.gridTitle="Monthly Production Report Details";
		/*if (GLOBAL_DATA.staffId != 0)			
			self.reportdet.staffInd = "Y";
		ReportService.loadDlyTransBranch(self);*/
		ReportService.loadYearList(self);
		ReportService.loadMonthList(self);
		var events = {"ondblclick" : "fnGetSelectedMonthlyProductionDetail"};
		//FilterSearchService.searchTransactionTypeOptionsList(self);
		GridServices.defineGrid(self, null,'monthlyProductionReportGrid', null,columnDefs.monthlyProdDet, null, null, events);
		GridServices.defineGrid(self,null, 'datewiseReportGrid', null,columnDefs.datewiseReport, null, null, null);
	};	
	self.fnMonProDetSearch = function() {
			var status=true;
			self.nextBtn="false";
			self.backBtn="false";
		if (self.branchId == 0 || self.reportdet.branchId == ''|| self.reportdet.branchId == 'undefined'|| self.reportdet.branchId == null){
			swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_BRANCH,"reportdet.branchId");status=false;}
		else if (self.reportdet.accountCode == 0|| self.reportdet.accountCode == ''|| self.reportdet.accountCode == 'undefined'|| self.reportdet.accountCode == null){
			swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_ACCCODE,"reportdet.accountCode");status=false;}
		else if (self.reportdet.fromMonth == null|| self.reportdet.fromMonth == ''|| self.reportdet.fromMonth == 'undefined'){
			swal(FILTER_MSGS.FILTER_VALIDATION.VALID_FROMDT,"reportdet.fromMonth");status=false;}
		else if (self.reportdet.fromYear == null|| self.reportdet.fromYear == ''|| self.reportdet.fromYear == 'undefined'){
			swal(FILTER_MSGS.FILTER_VALIDATION.VALID_FROMDT,"reportdet.fromYear");status=false;}
		else if (self.reportdet.toMonth == null || self.reportdet.toMonth == ''|| self.reportdet.toMonth == 'undefined'){
			swal(FILTER_MSGS.FILTER_VALIDATION.VALID_TODT,"reportdet.toMonth");status=false;}
		else if (self.reportdet.toYear == null || self.reportdet.toYear == ''|| self.reportdet.toYear == 'undefined')
		{ 	swal(FILTER_MSGS.FILTER_VALIDATION.VALID_TODT,"reportdet.toYear");status=false;	}
     	else {
     		if (self.reportdet.fromYear > self.reportdet.toYear) {
     			swal(FILTER_MSGS.FILTER_VALIDATION.EQUAL_GREATER_FROMDT,"self.reportdet.toYear");status = false;
			} else if (self.reportdet.fromYear == self.reportdet.toYear) {
				if (self.reportdet.fromMonth > self.reportdet.toMonth) {
					swal(FILTER_MSGS.FILTER_VALIDATION.EQUAL_GREATER_FROMDT,"reportdet.toMonth");status = false;
				}
			}
		}
		if(status==true){
			var mLast;
			self.reportdet.fromDate=monthFirst('01'+'-'+(self.reportdet.fromMonth< 10 ? "0" : "") + self.reportdet.fromMonth+'-'+self.reportdet.fromYear);			
			self.reportdet.toDate=monthLast('01'+'-'+(self.reportdet.toMonth< 10 ? "0" : "") + self.reportdet.toMonth+'-'+self.reportdet.toYear);
			self.reportdet.periodFromDate=$("#DD_FMONTH option:selected").text()+'-'+$("#DD_FYEAR option:selected").text();
			self.reportdet.periodToDate=$("#DD_TMONTH option:selected").text()+'-'+$("#DD_TYEAR option:selected").text();
			self.reportdet.reportId=1005;
			//self.reportdet.branchName=$("#DD_BRANCH_ID").val().length != 0 ? $("#DD_BRANCH_ID option:selected").text() : null;
			localStorageService.set("mondet",self.reportdet);
			ReportService.getMonthlyProductionGridDetails(self);		
			self.navGrid="first";
			navThirdGrid="false";
		}
	};
	//row double click event
	self.fnGetSelectedMonthlyProductionDetail=function(rowEntity){
		var StrToNum={Jan:1,Feb:2,Mar:3,Apr:4,May:5,Jun:6,Jul:7,Aug:8,Sep:9,Oct:10,Nov:11,Dec:12};
		if(self.navGrid=="first"){
		    localStorageService.set("firstGrid",self.monthlyProductionReportGrid.data);
		    self.reportdet.ReportFormGridDO = rowEntity;
		    var month_year=rowEntity.lastLoginDate;
			var month=month_year.slice(0,3);
			var year=month_year.slice(4,8);	
			self.from=monthFirst('01'+'-'+(StrToNum[month]< 10 ? "0" : "") + StrToNum[month]+'-'+year);
		    self.reportdet.fromDate=self.from;			
			self.reportdet.toDate=monthLast('01'+'-'+(StrToNum[month]< 10 ? "0" : "") + StrToNum[month]+'-'+year);
		    self.reportdet.reportId=1006;			
			self.backBtn="true";
			self.nextBtn="false";				
			self.navGrid="second";
			self.reportdet.gridTitle="Monthly Report Details";
		}else if(self.navGrid=="second"){
			localStorageService.set("secondGrid",self.monthlyProductionReportGrid.data);
			self.reportdet.ReportFormGridDO = rowEntity;
			self.reportdet.issueDate=rowEntity.lastLoginDate;			
			self.reportdet.reportId=1007;			
			self.backBtn="true";
			self.nextBtn="false";
			navThirdGrid="true";
			self.navGrid="third";
			self.fisrtGridView=false;
			self.secondGridView=true;
			self.reportdet.gridTitle="Datewise Report Details";
		}
		ReportService.getMonthlyProductionGridDetails(self);
	};
	//Next button
	self.fnNext=function(){
		
		if(self.navGrid=="first"){
			self.reportdet.monthlyProductionGridDet=localStorageService.get("secondGrid");	
			self.backBtn="true";			
			self.nextBtn=((navThirdGrid=="true")?"true":"false");
			self.fisrtGridView=true;
			self.secondGridView=false;
			self.navGrid="second";
			self.reportdet.gridTitle="Monthly Report Details";						
		    GridServices.bindGrid(self,null, 'monthlyProductionReportGrid', self.reportdet.monthlyProductionGridDet,null,null);
		}else if(self.navGrid=="second"){
			self.reportdet.monthlyProductionGridDet=localStorageService.get("thirdGrid");	
			self.backBtn="true";
			self.nextBtn="false";
			self.fisrtGridView=false;
			self.secondGridView=true;
			self.navGrid="third";
			self.reportdet.gridTitle="Datewise Report Details";	
			GridServices.bindGrid(self,null,'datewiseReportGrid', self.reportdet.monthlyProductionGridDet,null,null);
		}
	};
	//Back button
	self.fnBack=function(){
		if(self.navGrid=="second"){
			self.reportdet.monthlyProductionGridDet=localStorageService.get("firstGrid");	
			localStorageService.set("secondGrid",self.monthlyProductionReportGrid.data);
			self.backBtn="false";
			self.nextBtn="true";
			self.fisrtGridView=true;
			self.secondGridView=false;
			self.navGrid="first";
			self.reportdet.gridTitle="Monthly Production Report Details";
		}else if(self.navGrid=="third"){				
			localStorageService.set("thirdGrid",self.datewiseReportGrid.data);
			self.reportdet.monthlyProductionGridDet=localStorageService.get("secondGrid");			
			self.backBtn="true";
			self.nextBtn=((navThirdGrid=="true")?"true":"false");
			self.fisrtGridView=true;
			self.secondGridView=false;
			self.navGrid="second";
			self.reportdet.gridTitle="Monthly Report Details";
		}
		GridServices.bindGrid(self,null, 'monthlyProductionReportGrid', self.reportdet.monthlyProductionGridDet,null,null);
	};
	//reset monthly production report form
	self.fnResetMonProDet = function() {
		if(confirm(FILTER_MSGS.FILTER_VALIDATION.CONFIRM_RESET)){
		if (GLOBAL_DATA.staffId != 0) {
			self.reportdet.branchId = "";
			self.reportdet.accountCode = null;
		}
		self.reportdet.subAgentId = null;
		self.reportdet.searchTypeId= null;
		self.reportdet.fromMonth = null;
		self.reportdet.fromYear = null;
		self.reportdet.toMonth = null;
		self.reportdet.toYear = null;
		self.backBtn="false";
		self.nextBtn="false";
		localStorageService.remove("firstGrid");
		localStorageService.remove("secondGrid");
		localStorageService.remove("thirdGrid");
		self.monthlyProductionReportGrid.data = [];
		self.datewiseReportGrid.data=[];
		self.reportdet.gridAlertInd=false; 
		}
	};	
	self.fnRefreshAccCode = function (){
		self.monthlyProductionReportGrid.data = [];
		self.datewiseReportGrid.data=[];		
		self.reportdet.accountCode="";
		self.subAccountCodeList="";
		self.reportdet.subAgentId = null;
		self.reportdet.searchTypeId= null;
		self.reportdet.fromMonth = null;
		self.reportdet.fromYear = null;
		self.reportdet.toMonth = null;
		self.reportdet.toYear = null;
		self.backBtn="false";
		self.nextBtn="false";
		localStorageService.remove("firstGrid");
		localStorageService.remove("secondGrid");
		localStorageService.remove("thirdGrid");
		self.monthlyProductionReportGrid.data = [];
		self.datewiseReportGrid.data=[];
	};
	//Search button click event
	self.fnSearchMonthlyProductionReportDet = function(){
		ReportService.getMonthlyProductionGridDetails(self);
	};	
	/*Grid Start*/
	columnDefs.datewiseReport=[
	      {field : 'slNo',displayName : 'S.No.',enableColumnMenu : false,width:60, cellClass: 'text-center'},
	      {field : 'coverNoteNo',displayName : 'Cover Note No.',enableColumnMenu : false,width:150, cellClass: 'text-left'},
	      {field : 'coverNoteType',displayName : 'Cover Note Type',enableColumnMenu : false,width:150, cellClass: 'text-left'},
	      {field : 'totalPremium',displayName : 'Total Premium',enableColumnMenu : false,width:170,cellFilter: 'currency:""', cellClass: 'text-right'},
	      {field : 'gstPremium',displayName : 'Total GST Premium',enableColumnMenu : false,width:170,cellFilter: 'currency:""', cellClass: 'text-right'},
	      {field : 'totalComm',displayName : 'Total Commission',enableColumnMenu : false,width:170,cellFilter: 'currency:""', cellClass: 'text-right'},
	      {field : 'gstonCommission',displayName : 'Total GST Commission',enableColumnMenu : false,width:170,cellFilter: 'currency:""', cellClass: 'text-right'}];
	
	columnDefs.monthlyProdDet=[
	      {field : 'lastLoginDate',displayName : 'Month-Year',enableColumnMenu : false,width:100, cellClass: 'text-center'},
	      {field : 'totalCases',displayName : 'Total Cases',enableColumnMenu : false,width:120, cellClass: 'text-center'},
	      {field : 'totalPremium',displayName : 'Total Premium',enableColumnMenu : false,width:170,cellFilter: 'currency:""', cellClass: 'text-right'},
	      {field : 'totalComm',displayName : 'Total Commission',enableColumnMenu : false,width:170,cellFilter: 'currency:""', cellClass: 'text-right'},
	      {field : 'nbCount',displayName : 'NB Count',enableColumnMenu : false,width:120, cellClass: 'text-center'},
	      {field : 'nbPremium',displayName : 'NB Premium',enableColumnMenu : false,width:170,cellFilter: 'currency:""', cellClass: 'text-right'},
	      {field : 'nbGSTPremium',displayName : 'NB GST Premium',enableColumnMenu : false,width:170,cellFilter: 'currency:""', cellClass: 'text-right'},
	      {field : 'nbComm',displayName : 'NB Commission',enableColumnMenu : false,width:170,cellFilter: 'currency:""', cellClass: 'text-right'},
	      {field : 'nbGSTComm',displayName : 'NB GST Commission',enableColumnMenu : false,width:170,cellFilter: 'currency:""', cellClass: 'text-right'},
	      {field : 'rnCount',displayName : 'Renewal Count',enableColumnMenu : false,width:120, cellClass: 'text-center'},
	      {field : 'rnPremium',displayName : 'Renewal Premium',enableColumnMenu : false,width:170,cellFilter: 'currency:""', cellClass: 'text-right'},
	      {field : 'rnGSTPremium',displayName : 'Renewal GST Premium',enableColumnMenu : false,width:170,cellFilter: 'currency:""', cellClass: 'text-right'},
	      {field : 'rnComm',displayName : 'Renewal Commission',enableColumnMenu : false,width:170,cellFilter: 'currency:""', cellClass: 'text-right'},
	      {field : 'rnGSTComm',displayName : 'Renewal GST Commission',enableColumnMenu : false,width:170,cellFilter: 'currency:""', cellClass: 'text-right'},
	      {field : 'eEndtNJPJCnt',displayName : 'e - Endt. (NonJPJ) Count',enableColumnMenu : false,width:120, cellClass: 'text-center'},
	      {field : 'eEndtNJPJPrem',displayName : 'e - Endt. (NonJPJ) Premium',enableColumnMenu : false,width:170,cellFilter: 'currency:""', cellClass: 'text-right'},
	      {field : 'eEndtNJPJGSTPrem',displayName : 'e - Endt. (NonJPJ) GST Premium',enableColumnMenu : false,width:170,cellFilter: 'currency:""', cellClass: 'text-right'},
	      {field : 'eEndtNJPJComm',displayName : 'e - Endt. (NonJPJ) Commission',enableColumnMenu : false,width:170,cellFilter: 'currency:""', cellClass: 'text-right'},
	      {field : 'eEndtNJPJGSTComm',displayName : 'e - Endt. (NonJPJ) GST Commission',enableColumnMenu : false,width:170,cellFilter: 'currency:""', cellClass: 'text-right'},
	      {field : 'eEndtJPJCnt',displayName : 'e - Endt. (JPJ) Count',enableColumnMenu : false,width:120, cellClass: 'text-center'},
	      {field : 'eEndtJPJPrem',displayName : 'e - Endt. (JPJ) Premium',enableColumnMenu : false,width:170,cellFilter: 'currency:""', cellClass: 'text-right'},
	      {field : 'eEndtJPJGSTPrem',displayName : 'e - Endt. (JPJ) GST Premium',enableColumnMenu : false,width:170,cellFilter: 'currency:""', cellClass: 'text-right'},
	      {field : 'eEndtJPJComm',displayName : 'e - Endt. (JPJ) Commission',enableColumnMenu : false,width:170,cellFilter: 'currency:""', cellClass: 'text-right'},
	      {field : 'eEndtJPJGSTComm',displayName : 'e - Endt. (JPJ) GST Commission',enableColumnMenu : false,width:170,cellFilter: 'currency:""', cellClass: 'text-right'},
	      {field : 'nmFTextCnt',displayName : 'NM FText Count',enableColumnMenu : false,width:120, cellClass: 'text-center'},
	      {field : 'nmFTextPrem',displayName : 'NM FText Premium',enableColumnMenu : false,width:170,cellFilter: 'currency:""', cellClass: 'text-right'},
	      {field : 'nmFTextGSTPrem',displayName : 'NM FText GST Premium',enableColumnMenu : false,width:170,cellFilter: 'currency:""', cellClass: 'text-right'},
	      {field : 'nmFTextComm',displayName : 'NM FText Commission',enableColumnMenu : false,width:170,cellFilter: 'currency:""', cellClass: 'text-right'},
	      {field : 'nmFTextGSTComm',displayName : 'NM FText GST Commission',enableColumnMenu : false,width:170,cellFilter: 'currency:""', cellClass: 'text-right'}];
	
		//monthly production report Export Pdf button click event
		self.fnExportPdfMonthlyProductionReport = function() {
			var length=0;
			if(self.fisrtGridView==false && self.secondGridView==true){
				self.reportdet.monthlyProductionGridDet=self.datewiseReportGrid.data;	
			}else{
				self.reportdet.monthlyProductionGridDet=self.monthlyProductionReportGrid.data;	
			}
			if(self.navGrid=="first"){
				self.reportdet.reportId=1005;
				length=self.monthlyProductionReportGrid.data.length; 
				self.reportdet=localStorageService.get("mondet");		
			}else if(self.navGrid=="second"){
				self.reportdet.reportId=1006;
				length=self.monthlyProductionReportGrid.data.length;
				self.reportdet.monthlyProductionReportGrid=localStorageService.get("secondGrid");	
			}else{
				self.reportdet.reportId=1007;
				length=self.datewiseReportGrid.data.length;
				self.reportdet.monthlyProductionReportGrid=localStorageService.get("thirdGrid");	
			}
			if (length > 0) {
			if (confirm(FILTER_MSGS.FILTER_VALIDATION.CONFIRM_PRINT)) {
				$http.post(CONTEXT_PATH+'reports/monthlyproductionreport', self.reportdet).then(function(response) {
					if (response.data != null) {
						self.printMonthlyProductionReport(response.data);
					}
				});
			}
		} else {
			alert(FILTER_MSGS.FILTER_VALIDATION.NO_DATA_TOPRINT);
		}
	   };		
		// Print Generation
		self.printMonthlyProductionReport = function(doObject) {
			var data = JSON.stringify(doObject);
		    var form = $('<form action="'+CONTEXT_PATH+'reports/pdfmonthlyproductionreport" method="post" target="_blank" >');
			var input =  $('<input type="hidden" name="json"/>').val(data);
			input.appendTo(form);
			form.appendTo('body');
			form.submit();
		};	
/* Monthly Production Report Details Ends */
	
/* Cancelled Pending Report Details Start */
	//Init Function
	self.setCancelledPendingReportDet = function() {		
		$("#DD_BRANCH").focus();
		if(GLOBAL_DATA.staffId != 0){
			self.reportdet.staffInd="Y";
		}
		CommonService.getCurrentDate().then(function(response) {
			var currDate=response.date;			
			self.reportdet.toDate = currDate;			
			self.reportdet.fromDate = monthFirst(currDate);
		});
		self.gridAlertInd = false;
		var events = {"ondblclick" : "fnGetSelectedCancelDetail"};
		self.fnLoadRptSourceTypes();
		//ReportService.loadDlyTransBranch(self);
		GridServices.defineGrid(self,null, 'cancelledPendFirstGrid',null,columnDefs.cancelledPendFirst,null, null, events);
		GridServices.defineGrid(self,null, 'cancelledPendSecondGrid',null,columnDefs.cancelledPendSecond,null, pagination, null);
	};
	//Double Click Event
	self.fnGetSelectedCancelDetail = function(rowEntity){
		self.reportdet.otsMainClassDesc=rowEntity.otsMainClassDesc;
		ReportService.getSelectedCancelPendingGridDetail(self);
	};
	//Search button click event
	self.fnSearchCancelledPendingReportDet = function(){		
		self.cancelledPendFirstGrid.data = [];
		self.cancelledPendSecondGrid.data = [];		
		if(self.cancelledPendSecondGrid.data!=undefined)
	    	GridServices.bindGrid(self,'reportdet','cancelledPendSecondGrid',null,pagination,null);		
		self.reportdet.branchName= self.reportdet.branchName = $("#DD_BRANCH option:selected").html();
		if(self.reportdet.sourceTypeId == undefined || self.reportdet.sourceTypeId == null || self.reportdet.sourceTypeId == 0 || self.reportdet.sourceTypeId == ''){
			swal("Please Select Source Type","reportdet.sourceTypeId");
		}
		else if(self.reportdet.branchId== '' || self.reportdet.branchId == undefined || self.reportdet.branchId == null){
			swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_BRANCH,"reportdet.branchId");
		}			
		else if (self.reportdet.accountCode == '' || self.reportdet.accountCode == undefined || self.reportdet.accountCode == null){			
			swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_ACCCODE,"reportdet.accountCode");
		}
		else if (self.reportdet.fromDate == '' || self.reportdet.fromDate == undefined || self.reportdet.fromDate == null){
			swal(FILTER_MSGS.FILTER_VALIDATION.VALID_FROMDT,"reportdet.fromDate");
			}
		else if (self.reportdet.toDate == '' || self.reportdet.toDate == undefined || self.reportdet.toDate == null){
			swal(FILTER_MSGS.FILTER_VALIDATION.VALID_TODT,"reportdet.toDate");
		}
		else{			
			ReportService.getCancelledPendingGridDetails(self);
			}			
	};
	//Cancel Pending Report ng-blur Fromdate	
	self.fnOnChangeCancelPendingFromDate = function() {
		if (self.reportdet.fromDate != undefined && self.reportdet.fromDate.length > 0) {	
			if(isValidDate(self.reportdet.fromDate)){				
				CommonService.getCurrentDate().then(function(response) {
					if(stringToDate(self.reportdet.fromDate) > stringToDate(response.date)) {
						self.reportdet.fromDate = '';
						self.reportdet.toDate = '';
							swal(FILTER_MSGS.FILTER_VALIDATION.EQUAL_LESS_SYSDATE,"reportdet.fromDate");
						}
					else {
						var maxDate = fnDateManipulation(self.reportdet.fromDate,90,"+", "D");			
						if(stringToDate(maxDate) > stringToDate(response.date))
							self.reportdet.toDate = response.date;
						else
							self.reportdet.toDate = maxDate;
					}
				});					}
			else{				
				self.reportdet.fromDate = '';
				$("#DDT_CANCEL_PENDING_PERIOD_FROM_DATE").focus();	
			}
		}
	};
	
	self.fnOnChangeCancelledToDate = function() {
			if (self.reportdet.toDate != undefined && self.reportdet.toDate != null && self.reportdet.toDate.length > 0) {	
			if(isValidDate(self.reportdet.toDate)){
				CommonService.getCurrentDate().then(function(response) {
					var currDate=response.date;			
					var maxDate = fnDateManipulation(self.reportdet.fromDate, 90,"+", "D");				
					 if(stringToDate(currDate) < stringToDate(self.reportdet.toDate)){				
								self.reportdet.toDate = '';
								swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_SYS_TO_DATE,"reportdet.toDate");
							}
					else if (self.reportdet.fromDate != null && self.reportdet.fromDate.length > 0 &&(isValidDate(self.reportdet.toDate))) {
						if (stringToDate(self.reportdet.fromDate) > stringToDate(self.reportdet.toDate)) {
							self.reportdet.toDate = '';
							swal(FILTER_MSGS.FILTER_VALIDATION.EQUAL_GREATER_FROMDT,"reportdet.toDate");
						}
						else if(stringToDate(maxDate) < stringToDate(self.reportdet.toDate)){
							self.reportdet.toDate = '';
							swal(FILTER_MSGS.FILTER_VALIDATION.DATE_NINTY_DIFF,"reportdet.toDate");
						}		
					}	
			});
			}else{
				self.reportdet.toDate = '';
				$("#DDT_TO_DATE").focus();	
			}
		}
};
	/*Grid Start*/
	columnDefs.cancelledPendFirst = [{
		field : 'slNo',					displayName : 'S.No.',			cellClass: 'text-center',	enableColumnMenu : false,width:50	},{		
		field : 'otsMainClassDesc',		displayName : 'Class',			cellClass: 'text-left',		enableColumnMenu : false	},{
		field : 'totalCases',			displayName : 'Total Pending',	cellClass: 'text-left',		enableColumnMenu : false	}
	];
	// Second Grid
	columnDefs.cancelledPendSecond = [{
		field : 'noOfCoverNote',	displayName : 'S.No.',					cellClass: 'text-center',	enableColumnMenu : false,width:50	},{
		field : 'coverNoteNo',		displayName : 'Cover Note No.',			cellClass: 'text-left',		enableColumnMenu : false,width:130	},{
		field : 'insuredName',		displayName : 'Insured Name',			cellClass: 'text-left',		enableColumnMenu : false,width:250	},{
		field : 'vehicleNo',		displayName : 'Vehicle No.',			cellClass: 'text-left',		enableColumnMenu : false,width:100	},{
		field : 'issueDate',		displayName : 'Issued Date',			cellClass: 'text-left',		enableColumnMenu : false,width:100	},{
		field : 'endtDate',			displayName : 'Cancelled Date',			cellClass: 'text-left',		enableColumnMenu : false,width:120	},{
		field : 'policyNo',			displayName : 'Policy No.',				cellClass: 'text-left',		enableColumnMenu : false,width:150	},{
		field : 'totalPremium',		displayName : 'Total Premium (RM)',		cellClass: 'text-right',	enableColumnMenu : false,width:150	},{
		field : 'statusGrid',		displayName : 'Status',					cellClass: 'text-left',		enableColumnMenu : false,width:130	},{
		field : 'replaceCNNo',		displayName : 'Replace Cover Note No.',	cellClass: 'text-left',		enableColumnMenu : false,width:180	}
	];	
	//Cancel Pending Report Print button click event
	self.fnExportPdfReportCancelledPrnding = function(){	
		jConfirm(FILTER_MSGS.FILTER_VALIDATION.CONFIRM_PRINT,"Warning",function(res){
			if(res){
				self.reportdet.branchName= self.reportdet.branchName = $("#DD_BRANCH option:selected").html();
				self.reportdet.subAccount= self.reportdet.subAccount = ($("#SUB_AGENT option:selected").text()!= null && self.reportdet.subAgentId > 0)  ? $("#SUB_AGENT option:selected").text() : null ;
				
				if(self.cancelledPendSecondGrid.data.length > 0){
					self.printReportCancelledPrnding(self.reportdet);					
				}else
					swal(FILTER_MSGS.FILTER_VALIDATION.NO_DATA_TOPRINT);
		} });
	};  
	// Print Generation
	self.printReportCancelledPrnding = function(doObject) {
		var data = JSON.stringify(doObject);
		var form = $('<form action="'+CONTEXT_PATH+'reports/pdfreportscancelledpending" method="post" target="_blank" >');
		var input =  $('<input type="hidden" name="json"/>').val(data);
		input.appendTo(form);
		form.appendTo('body');
		form.submit();
	};	
/* Cancelled Pending Report Details End */
	
/* Print Pending Report Details Start --Savedpending */
	//Init Function
	self.setPrintPendingReportDet = function() {
		$("#DD_BRANCH").focus();	
		if (GLOBAL_DATA.staffId != 0) {
			self.reportdet.staffInd = "Y";
		}
		self.gridAlertInd=false;
		CommonService.getCurrentDate().then(function(response) {
			self.reportdet.toDate = response.date;
			self.reportdet.fromDate = monthFirst(self.reportdet.toDate);
		});
		self.fnLoadRptSourceTypes();
		//ReportService.loadBranchList(self);		
		GridServices.defineGrid(self,null, 'printPendSecondGrid', null, columnDefs.printPendSecond, null, pagination, null);	
	};
	
	self.fnOnChangeSaveFromDate = function() {	
		if (self.reportdet.fromDate != undefined && self.reportdet.fromDate.length > 0) {	
			if(isValidDate(self.reportdet.fromDate)){				
				CommonService.getCurrentDate().then(function(response) {
					if(stringToDate(self.reportdet.fromDate) > stringToDate(response.date)) {
						self.reportdet.fromDate = '';
						self.reportdet.toDate = '';
							swal(FILTER_MSGS.FILTER_VALIDATION.EQUAL_LESS_SYSDATE,".reportdet.fromDate");
						}
					else {
						var maxDate = fnDateManipulation(self.reportdet.fromDate,1,"+", "M");	
						if(stringToDate(maxDate) > stringToDate(response.date))
							self.reportdet.toDate = currDate;
						else if ((stringToDate(maxDate) < stringToDate(response.date)))
							self.reportdet.toDate = maxDate;			
					}
				});		
			}
			else{				
				self.reportdet.fromDate = '';
				$("#DDT_PRINT_PENDING_FROM_DATE").focus();	
			}
		}
	};
	self.fnOnChangeSaveToDate = function() {
		if (self.reportdet.toDate != undefined && self.reportdet.toDate.length > 0) {
			if(isValidDate(self.reportdet.toDate)){
			CommonService.getCurrentDate().then(function(response) {
			var currDate=response.date;			
			var maxDate = fnDateManipulation(self.reportdet.fromDate, 1,"+", "M");				
			 if(stringToDate(currDate) < stringToDate(self.reportdet.toDate)){				
					self.reportdet.toDate = '';
					swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_SYS_TO_DATE,"reportdet.toDate");
				}
			else if (self.reportdet.fromDate != null && self.reportdet.fromDate.length > 0 &&(isValidDate(self.reportdet.toDate))) {
				if (stringToDate(self.reportdet.fromDate) > stringToDate(self.reportdet.toDate)) {
					self.reportdet.toDate = '';
					swal(FILTER_MSGS.FILTER_VALIDATION.EQUAL_GREATER_FROMDT,"reportdet.toDate");
				}
				else if(stringToDate(maxDate) < stringToDate(self.reportdet.toDate)){
					self.reportdet.toDate = '';
					swal(FILTER_MSGS.FILTER_VALIDATION.DATE_ONE_DIFF,"reportdet.toDate ");
				}		
			}	
			
	});}else{
		self.reportdet.toDate = '';				
		$("#DDT_PRINT_PENDING_TO_DATE").focus();	
	}}
			};
	
	//Search button click event
	self.fnSearchPrintPendingReportDet = function(){		
			GridServices.bindGrid(self,'reportdet','printPendSecondGrid',null,pagination,null);
			if(self.reportdet.coverNoteNo==''||self.reportdet.coverNoteNo==undefined)
				self.reportdet.coverNoteNo=null;
		if(self.reportdet.sourceTypeId == undefined || self.reportdet.sourceTypeId == null || self.reportdet.sourceTypeId == 0 || self.reportdet.sourceTypeId == ''){
			swal("Please Select Source Type","reportdet.sourceTypeId");
		}
		else if(self.reportdet.branchId == null || self.reportdet.branchId == undefined || self.reportdet.branchId == ''){		
			swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_BRANCH,"reportdet.branchId");
		}			
		else if (self.reportdet.coverNoteNo == null && ((self.reportdet.fromDate == null || self.reportdet.fromDate == ''||self.reportdet.fromDate == undefined )
														&& (self.reportdet.toDate == null || self.reportdet.toDate == '' || self.reportdet.toDate == undefined)))
			{				
			swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_CN_CREATE);	}		
		else if((self.reportdet.fromDate != null && self.reportdet.fromDate != ''&&self.reportdet.fromDate != undefined)&&(self.reportdet.toDate == null || self.reportdet.toDate == '' || self.reportdet.toDate == undefined))
			{			
			swal(FILTER_MSGS.FILTER_VALIDATION.CREATION_TO_DATE,"reportdet.toDate");			
			}		
		else if((self.reportdet.toDate != null && self.reportdet.toDate != '' && self.reportdet.toDate != undefined)&&(self.reportdet.fromDate == null || self.reportdet.fromDate == ''||self.reportdet.fromDate == undefined))
			{			
			swal(FILTER_MSGS.FILTER_VALIDATION.CREATION_FROM_DATE,"reportdet.fromDate");
			}
		else{
			self.reportdet.isPagination = "Y";
			ReportService.getPrintPendingGridDetails(self);
		}
	};

	//Print Pending PDF
	self.fnExportPdfPrintpendingReport = function() {
		 jConfirm(FILTER_MSGS.FILTER_VALIDATION.CONFIRM_PRINT,"Warning",function(res){
				if(res){
			self.reportdet.branchName = $("#DD_BRANCH option:selected").html();			
			if (self.printPendSecondGrid.data.length > 0) {
					self.printPendingPrintReport(self.reportdet);
			} else
				swal(FILTER_MSGS.FILTER_VALIDATION.NO_DATA_TOPRINT);
		} });
	};

	self.printPendingPrintReport = function(doObject) {
		var data = JSON.stringify(doObject);
		var form = $('<form action="'+CONTEXT_PATH+'reports/pdfprintpendingreport" method="post" target="_blank" >');
		var input = $('<input type="hidden" name="json"/>').val(data);
		input.appendTo(form);
		form.appendTo('body');
		form.submit();
	};
	
	self.fnOnChangeSavedPendingCNNo = function() {
		var cnRefNo = self.reportdet.coverNoteNo;
		var regAplphaSpl = new RegExp("^(?=.*?[a-zA-Z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{1,}$");
		var regAlphaNum = new RegExp("^[a-zA-Z0-9_]*$");
		if (self.reportdet.coverNoteNo != undefined && self.reportdet.coverNoteNo != '')
			if (regAlphaNum.test(cnRefNo) || regAplphaSpl.test(cnRefNo))
				return true;
			else {
				swal(FILTER_MSGS.FILTER_VALIDATION.VALID_CN_NO);
				self.reportdet.coverNoteNo = '';
			}
	};
	/*Grid Start*/	
	//Second Grid/* Grid Start *///Saved Pending Enquiry
	columnDefs.printPendSecond = [  {
			field : 'sino',				displayName : 'S.No.',							enableColumnMenu : false,			cellClass: 'text-center',		width : 50		},{
			field : 'branch',			displayName : 'Branch',							enableColumnMenu : false,			cellClass: 'text-left',			width : 120		},{
			field : 'branchuser',		displayName : 'Branch User',					enableColumnMenu : false,			cellClass: 'text-left',			width : 100		},{
			field : 'agentCode',		displayName : 'Intermediary Code',						enableColumnMenu : false,			cellClass: 'text-left',			width : 200		},{
			field : 'agencyName',		displayName : 'Intermediary Name',					enableColumnMenu : false,			cellClass: 'text-left',			width : 200		},{
			field : 'vehicleNo',		displayName : 'Vehicle No.',					enableColumnMenu : false,			cellClass: 'text-left',			width : 100		},{
			field : 'cnno',				displayName : 'Cover Note No. / Ref. No.',		enableColumnMenu : false,			cellClass: 'text-left',			width : 170		},{
			field : 'cnStatus',			displayName : 'Cover Note Status',				enableColumnMenu : false,			cellClass: 'text-left',			width : 150		},{
			field : 'jpjStatus',		displayName : 'JPJ Status',						enableColumnMenu : false,			cellClass: 'text-left',			width : 150		},{
			field : 'reason',			displayName : 'Refer Risk Remarks',				enableColumnMenu : false,			cellClass: 'text-left',			width : 180		},{	
			field : 'totalRecords',		visible : false		}
		];
/* Print Pending Report Details End */

/*Motor e-Endt.(Non JPJ) WO Premium Listing Report Details Start*/	
	//Init Function
	self.setMotorEndtNonJPJWOPremiumDet = function() {
		if(GLOBAL_DATA.staffId != 0){
			self.reportdet.staffInd="Y";
		}
		var events = {
				"ondblclick" : "fnLoadSelectedEndtNJPJDet"
			};
		self.fnLoadRptSourceTypes();
		if(self.staffId == 0){
			self.reportdet.sourceTypeId = 1;
			ReportService.loadDlyTransBranch(self);
		}
		CommonService.getCurrentDate().then(function(response) {
			var currDate=response.date;
			var date = stringToDate(currDate);
			date.setDate(date.getDate() - 30);
			
			self.reportdet.toDate = currDate;			
			self.reportdet.fromDate = dateToString(date);
		});
		self.reportdet.gridAlertInd = false;
		GridServices.defineGrid(self,null, 'motorEndtNonJPJFirstGrid',null,columnDefs.motorEndtNonJPJFirst,null, null, events);
		GridServices.defineGrid(self,null, 'motorEndtNonJPJSecondGrid',null,columnDefs.motorEndtNonJPJSecond,null, pagination, null);
	};	
	//Search button click(Load First Grid)
	self.fnSearchMotorEndtNonJPJWOPremiumDet = function(){
		self.reportdet.branchName=$("#BRANCH").val().length != 0 ? $("#BRANCH option:selected").text() : null;
		self.reportdet.subAccount=($("#DD_SUB_AGENT_ID option:selected").text()!= null && self.reportdet.subAgentId > 0)  ? $("#DD_SUB_AGENT_ID option:selected").text() : null ;
		self.motorEndtNonJPJSecondGrid.data = [];
		if(self.reportdet.sourceTypeId == undefined || self.reportdet.sourceTypeId == null || self.reportdet.sourceTypeId == 0 || self.reportdet.sourceTypeId == ''){
			swal("Please Select Source Type","reportdet.sourceTypeId");
		}
		else if (self.reportdet.branchId == null || self.reportdet.branchId == '' || self.reportdet.branchId == 'undefined')
		{	alert(FILTER_MSGS.FILTER_VALIDATION.SELECT_BRANCH);
			$("#BRANCH").focus();
		}/*else if (self.reportdet.accountCode == null || self.reportdet.accountCode == '' || self.reportdet.accountCode == 'undefined')
			{	
			alert(FILTER_MSGS.FILTER_VALIDATION.SELECT_ACCCODE);
			$("#ACCOUNT_CODE").focus();
			}*/else if (self.reportdet.fromDate == null || self.reportdet.fromDate == '' || self.reportdet.fromDate == 'undefined')
			{
				alert(FILTER_MSGS.FILTER_VALIDATION.VALID_FROMDT);
				$("#FROM_DATE").focus();
			}else if (self.reportdet.toDate == null || self.reportdet.toDate == '' || self.reportdet.toDate == 'undefined')
			{
				alert(FILTER_MSGS.FILTER_VALIDATION.VALID_TODT);
				$("#TO_DATE").focus();
			}else
			{	//108 ReportService.getMotorEndtNonJPJWOPremiumGridDetails(self);
				status = true;
				CommonService.getCurrentDate().then(function(response) {
					var time = response.time;
					var menuId = 108;
					time = time.toLocaleString('en-US', { hour: 'numeric',minute:'numeric', hour24: true });
	
					var maxDate = fnDateManipulation(self.reportdet.fromDate, 6,"+", "M");
					var chkIfOneMonth = fnDateManipulation(self.reportdet.fromDate, 30,"+", "D");
						
					if(stringToDate(chkIfOneMonth) < stringToDate(self.reportdet.toDate) && stringToDate(maxDate) >= stringToDate(self.reportdet.toDate))
					{		
						$http.post(CONTEXT_PATH+'reports/loadReportGenTimeDet',''+menuId).then(function(response) {
							if(response.data != null && response.data.length > 0){
								self.reportTimeList = response.data;
								
								var time1From = response.data[0].time1FromHH+":"+((parseInt(response.data[0].time1FromMM) < 10)?"0"+response.data[0].time1FromMM:response.data[0].time1FromMM)+":00 "+response.data[0].time1FromAM;
								var time1To = response.data[0].time1ToHH+":"+((parseInt(response.data[0].time1ToMM) < 10)?"0"+response.data[0].time1ToMM:response.data[0].time1ToMM)+":00 "+response.data[0].time1ToAM;
	
								var d = new Date();
							  	var d1Start = new Date(d.toLocaleDateString()+" "+time1From);	
							  	var d1End = new Date(d.toLocaleDateString()+" "+time1To);
							  	var d2Start = null; 
						  		var d2End = null;
	
								var dateCurr = new Date(d.toLocaleDateString()+" "+time);
								var time2From = null;
								var time2To = null;
								if(response.data[0].time2FromHH != null && response.data[0].time2FromHH > 0){
									time2From = response.data[0].time2FromHH+":"+((parseInt(response.data[0].time2FromMM) < 10)?"0"+response.data[0].time2FromMM:response.data[0].time2FromMM)+":00 "+response.data[0].time2FromAM;
									time2To = response.data[0].time2ToHH+":"+((parseInt(response.data[0].time2ToMM) < 10)?"0"+response.data[0].time2ToMM:response.data[0].time2ToMM)+":00 "+response.data[0].time2ToAM;
									d2Start = new Date(d.toLocaleDateString()+" "+time2From);	
								  	d2End = new Date(d.toLocaleDateString()+" "+time2To);
								}
								var effectivedate = new Date();
								var effdate = new Date();
								if(response.data[0].rptTimeEffectDate != null ){
									effdate = stringToDate(response.data[0].rptTimeEffectDate);
									effectivedate.setDate(effdate.getDate());
									effectivedate.setMonth(effdate.getMonth());
									effectivedate.setFullYear(effdate.getFullYear());
									if(response.data[0].rptTimeEffectHH != 12 && response.data[0].rptTimeEffectAM == "PM")
									{
									effectivedate.setHours(response.data[0].rptTimeEffectHH+12);
									}
									else
									{effectivedate.setHours(response.data[0].rptTimeEffectHH);}
									
									effectivedate.setMinutes(response.data[0].rptTimeEffectMM);
									effectivedate.setSeconds(0);
								}
								if(response.data[0].rptTimeEffectDate != null && dateCurr < effectivedate)
								{
									status = false;
									jAlert('Report access for more than one month has been restricted for now, Please contact Administrator.',null,function(){
										$('#DDT_TO_DATE').focus();
									});
									return;
								}
								else if((((response.data[0].staffId != null && response.data[0].staffId > 0) && (GLOBAL_DATA.staffId !=undefined && GLOBAL_DATA.staffId != null) && response.data[0].staffId != GLOBAL_DATA.staffId) || (response.data[0].staffId == undefined || response.data[0].staffId == null) || GLOBAL_DATA.staffId == null) )
								{
									if ((dateCurr>d1Start && dateCurr < d1End))
									{	
										status = true;
									}
									else if (time2From != null && time2From > 0 && (dateCurr>d2Start && dateCurr < d2End))
									{	
										status = true;
									}
									else
									{
										if(response.data[0].time1FromAM == "PM" && response.data[0].time1ToAM == "AM"){status = true;}
										else if(time2From != null && (response.data[0].time2FromAM == "PM" && response.data[0].time2ToAM == "AM")){status = true;}
										else{
										status = false;
										jAlert('Report access for more than one month has been restricted for now, Please contact Administrator.',null,function(){
											$('#DDT_TO_DATE').focus();
										});
										return;
										}
									}								
								}							
								if(status)
								{
									ReportService.getMotorEndtNonJPJWOPremiumGridDetails(self);
								}
							}
						});						
										
					}
					else
						ReportService.getMotorEndtNonJPJWOPremiumGridDetails(self);
				});
				
			}
		self.reportdet.gridAlertInd = false;
	};	
	//Double Click on First Grid (To Load second grid)
	self.fnLoadSelectedEndtNJPJDet = function (rowEntity){
		ReportService.getSubMotorEndtNJPJWOPremiumGridList(self);
	};	
	//Reset Function
	self.resetMendtNJPJWOPDet = function(){
		if(confirm(FILTER_MSGS.FILTER_VALIDATION.CONFIRM_RESET)){
		if(self.reportdet.staffInd!=null && self.reportdet.staffInd == 'Y')
			{
				self.reportdet.branchId="";					
				self.reportdet.accountCode=null;					
		}
		CommonService.getCurrentDate().then(function(response) {
			var currDate=response.date;
			var date = stringToDate(currDate);
			date.setDate(date.getDate() - 30);
			
			self.reportdet.toDate = currDate;			
			self.reportdet.fromDate = dateToString(date);
		});
		self.reportdet.gridAlertInd = false;
		self.motorEndtNonJPJFirstGrid.data = [];
		self.motorEndtNonJPJSecondGrid.data = [];
		if(self.motorEndtNonJPJFirst.data!=undefined)
	    	GridServices.bindGrid(self,'reportdet','motorEndtNonJPJFirst',null,pagination,null);
		if(self.motorEndtNonJPJSecond.data!=undefined)
	    	GridServices.bindGrid(self,'reportdet','motorEndtNonJPJSecond',null,pagination,null);
		}
	};	
	
	self.fnBranchReset = function(obj){
	self.reportdet.accountCode=null;					
	CommonService.getCurrentDate().then(function(response) {
		var currDate=response.date;
		var date = stringToDate(currDate);
		date.setDate(date.getDate() - 30);
		
		self.reportdet.toDate = currDate;			
		self.reportdet.fromDate = dateToString(date);
	});
	self.motorEndtNonJPJFirstGrid.data = [];
	self.motorEndtNonJPJSecondGrid.data = [];
	self.reportdet.gridAlertInd = false;
	if(obj.motorEndtNonJPJFirst!=undefined)                 
		GridServices.bindGrid(self,'reportdet','motorEndtNonJPJFirst',null,null,null);
	if(obj.motorEndtNonJPJSecond!=undefined)
		GridServices.bindGrid(self,'reportdet','motorEndtNonJPJSecond',null,null,null);
	};
	
	// To Get Month End Of The Date
	
	self.fnGetToDateForEndOfMonth = function(formObject){
		var fromDate = stringToDate($scope.reportdet.fromDate);
		var date = new Date(fromDate.getFullYear(),fromDate.getMonth()+1,0);
		$scope.reportdet.toDate = dateToString(date);		
	};
	self.fnPrintMendtNJPJ = function(){
		self.reportdet.reportId = 1002;
		self.reportdet.otsMainClassId = self.motorEndtNonJPJFirstGrid.data[0].mainClassId;
		 jConfirm(FILTER_MSGS.FILTER_VALIDATION.CONFIRM_PRINT,"Warning",function(res){
				if(res){
					if(self.motorEndtNonJPJSecondGrid.data.length > 0){
						self.reportdet.isPagination = "N";
						self.printfnPrintMendtNJPJ(self.reportdet);					
						
					}
				}
		 });
	};
	
	
	// Print Generation
	self.printfnPrintMendtNJPJ = function(doObject) {
		self.reportdet.isPagination = "Y";
		//doObject.subAccount =($("#DD_SUB_AGENT_ID option:selected").text()!= null && doObject.subAgentId > 0)  ? $("#DD_SUB_AGENT_ID option:selected").text() : null ;
		var data = JSON.stringify(doObject);	
		var form = $('<form action="'+CONTEXT_PATH+'reports/pdfMendtNJPJ" method="post" target="_blank" >');
		var input =  $('<input type="hidden" name="json"/>').val(data);
		input.appendTo(form);
		form.appendTo('body');
		form.submit();
	};	
	
	//FirstGrid - Motor e-Endt.(Non JPJ) WO Premium Listing
	columnDefs.motorEndtNonJPJFirst = [ {
		field : 'mainClassId',
		displayName : 'ClassId',
		enableColumnMenu : false,visible : false,
		cellClass: 'text-left',
		width:50
	},{
		field : 'description',
		displayName : 'Class',
		cellClass: 'text-left',
		enableColumnMenu : false,width:'300'
	},{
		field : 'totalCases',
		displayName : 'Total',
		cellClass: 'text-left',
		enableColumnMenu : false,width:'200'
	}
	];
	//Second Grid - Motor e-Endt.(Non JPJ) WO Premium Listing
	columnDefs.motorEndtNonJPJSecond = [ {
		field : 'slNo',
		displayName : 'S.No.',
		cellClass: 'text-center',
		enableColumnMenu : false,width:150
	},{
		field : 'appNo',
		displayName : 'Application No.',
		cellClass: 'text-left',
		enableColumnMenu : false,width:150
	},{
		field : 'policyNo',
		displayName : 'Policy No.',
		cellClass: 'text-left',
		enableColumnMenu : false,width:250
	},{
		field : 'issueDate',
		displayName : 'Issued Date',
		enableColumnMenu : false,width:250
	},{
		field : 'endtDate',
		displayName : 'Effective Date',
		cellClass: 'text-left',
		enableColumnMenu : false,width:250
	},{
		field : 'expiryDate',
		displayName : 'Expiry Date',
		cellClass: 'text-left',
		enableColumnMenu : false,width:250
	},{
		field : 'endtDate',
		displayName : 'Endt. Effective From',
		cellClass: 'text-left',
		enableColumnMenu : false,width:250
	},{
		field : 'vehicleNo',
		displayName : 'Vehicle No.',
		cellClass: 'text-left',
		enableColumnMenu : false,width:250
	},{
		field : 'insuredName',
		displayName : 'Insured Name',
		cellClass: 'text-left',
		enableColumnMenu : false,width:250
	},{
		field : 'otsClassDesc',
		displayName : 'Type of Endt.',
		cellClass: 'text-left',
		enableColumnMenu : false,width:250
	},{
		field : 'statusGrid',
		displayName : 'Status',
		cellClass: 'text-left',
		enableColumnMenu : false,width:250
	},{
		field : 'totalRecords',
		visible : false
	}
	];	
/* Motor e-Endt.(Non JPJ) WO Premium Listing Report Details End*/
	
/* Staff Listing Report Start */
	//Init Function
	self.setStaffListingReportDet = function() {
		self.reportdet.subncdcount = 0;
		self.reportdet.gridAlertInd = false; 
		CommonService.getCurrentDate().then(function(response) {
			self.reportdet.toDate = monthLast(response.date);	
			self.reportdet.fromDate =  monthFirst(response.date);
				});
		
		GridServices.defineGrid(self,null, 'printStaffListingGrid',null,columnDefs.printStaffListing,null, pagination, null);
	};
	//Search button click event
	self.fnSearchStaffListingReportDet = function(){
	 if (self.reportdet.fromDate == null || self.reportdet.fromDate == '' || self.reportdet.fromDate == 'undefined'){
			alert(FILTER_MSGS.FILTER_VALIDATION.VALID_FROMDT);
	 		$("#DDT_CREATION_FROM_DATE").focus();
	}else if (self.reportdet.toDate == null || self.reportdet.toDate == '' || self.reportdet.toDate == 'undefined'){
		alert(FILTER_MSGS.FILTER_VALIDATION.VALID_TODT);
	 	$("#DDT_CREATION_FROM_DATE").focus();
	}else
		ReportService.getStaffListingGridDetails(self);
	 	self.reportdet.gridAlertInd = true;
	};
	
	self.fnResetStaffListingReport = function (){
		if(confirm(FILTER_MSGS.FILTER_VALIDATION.CONFIRM_RESET)){
			CommonService.getCurrentDate().then(function(response) {
				self.reportdet.toDate = monthLast(response.date);	
				self.reportdet.fromDate =  monthFirst(response.date);
					});
		self.reportdet.subncdcount = 0;
		self.reportdet.gridAlertInd = false;
		self.printStaffListingGrid.data.length = [];
		if(self.printStaffListingGrid.data!=undefined)
	    	GridServices.bindGrid(self,'reportdet','printStaffListingGrid',null,pagination,null);
		}
	};
	//export excel - Staff listing 
	self.fnExportExcelRptStaffList = function(){	
		 if (confirm(FILTER_MSGS.FILTER_VALIDATION.CONFIRM_EXCEL)) {
			 if(self.printStaffListingGrid.data.length > 0){
				 document.getElementById('EXCEL_DLD').click();    
				 alert(FILTER_MSGS.FILTER_VALIDATION.DATA_EXPORTED);
			 }
			 else
				 alert(FILTER_MSGS.FILTER_VALIDATION.NO_DATA_TOEXPORT);
		 	};	
	};	
	/*Grid Start*/
	columnDefs.printStaffListing = [ {
		field : 'slNo',
		displayName : 'S.No.',
		cellClass: 'text-center',
		enableColumnMenu : false,width:150
	},{
		field : 'code',
		displayName : 'Staff Code',
		cellClass: 'text-left',
		enableColumnMenu : false,width:150
	},{
		field : 'name',
		displayName : 'Staff Name',
		cellClass: 'text-left',
		enableColumnMenu : false,width:250
	},{
		field : 'grade',
		displayName : 'Job Grade',
		cellClass: 'text-left',
		enableColumnMenu : false,width:250
	},{
		field : 'departmentName',
		displayName : 'Department Name',
		cellClass: 'text-left',
		enableColumnMenu : false,width:250
	},{
		field : 'position',
		displayName : 'Position',
		cellClass: 'text-left',
		enableColumnMenu : false,width:250
	},{
		field : 'branchName',
		displayName : 'Branch Name',
		cellClass: 'text-left',
		enableColumnMenu : false,width:250
	},{
		field : 'hiredOn',
		displayName : 'Hired On',
		cellClass: 'text-left',
		enableColumnMenu : false,width:250
	},{
		field : 'allowedOn',
		displayName : 'Allowed On',
		cellClass: 'text-left',
		enableColumnMenu : false,width:250
	},{
		field : 'issueDate',
		displayName : 'Tenders Date',
		cellClass: 'text-left',
		enableColumnMenu : false,width:250
	},{
		field : 'newOldICNo',
		displayName : 'New IC / Old IC No.',
		cellClass: 'text-left',
		enableColumnMenu : false,width:250
	},{
		field : 'dateofBirth',
		displayName : 'Date of Birth',
		cellClass: 'text-left',
		enableColumnMenu : false,width:250
	},{
		field : 'gender',
		displayName : 'Gender',
		cellClass: 'text-left',
		enableColumnMenu : false,width:250
	},{
		field : 'statusGrid',
		displayName : 'Marital Status',
		cellClass: 'text-left',
		enableColumnMenu : false,width:250
	},{
		field : 'nationality',
		displayName : 'Nationality',
		enableColumnMenu : false,width:250
	},{
		field : 'emailId',
		displayName : 'Email-Id',
		cellClass: 'text-left',
		enableColumnMenu : false,width:250
	},{
		field : 'address',
		displayName : 'Address',
		cellClass: 'text-left',
		enableColumnMenu : false,width:250
	},{
		field : 'postCode',
		displayName : 'Post Code',
		cellClass: 'text-left',
		enableColumnMenu : false,width:250
	},{
		field : 'description',
		displayName : 'Post Description',
		cellClass: 'text-left',
		enableColumnMenu : false,width:250
	},{
		field : 'state',
		displayName : 'State',
		cellClass: 'text-left',
		enableColumnMenu : false,width:250
	},{
		field : 'userType',
		displayName : 'Contact Type',
		cellClass: 'text-left',
		enableColumnMenu : false,width:250
	},{
		field : 'sms',
		displayName : 'Allow SMS',
		cellClass: 'text-left',
		enableColumnMenu : false,width:250
	},{
		field : 'insurance',
		displayName : 'Allow Free Insurance',
		cellClass: 'text-left',
		enableColumnMenu : false,width:250
	},{
		field : 'remarks',
		displayName : 'Remarks',
		cellClass: 'text-left',
		enableColumnMenu : false,width:250
	},{
		field : 'phoneNo',
		displayName : 'Phone No.',
		cellClass: 'text-left',
		enableColumnMenu : false,width:250
	},{
		field : 'officePhoneNo',
		displayName : 'Office Phone No.',
		cellClass: 'text-left',
		enableColumnMenu : false,width:250
	},{
		field : 'mobileNo',
		displayName : 'Mobile No.',
		cellClass: 'text-left',
		enableColumnMenu : false,width:250
	},{
		field : 'changes',
		displayName : 'Changes Description',
		cellClass: 'text-left',
		enableColumnMenu : false,width:250
	},{
		field : 'userIdGrid',
		displayName : 'Login Name / User ID',
		cellClass: 'text-left',
		enableColumnMenu : false,width:250
	},{
		field : 'lastLoginDate',
		displayName : 'Last Amendment Date / Time',
		cellClass: 'text-left',
		enableColumnMenu : false,width:250
	},{
		field : 'totalRecords',
		visible : false
	}
	];
/* Staff Listing Report End */
	
/* eNCD Confirmation - Enquiry Report Start */
	//Init Function
	self.setEncdConfirmOrEnqReportDet = function() {
		self.fnLoadRptSourceTypes().then(function(response){
			if(GLOBAL_DATA.staffId != 0){
				self.reportdet.staffInd="Y";
			}
			$("#DD_BRANCH").focus();			
			self.gridAlertInd = false;
			if(self.staffId == 0){
				self.reportdet.sourceTypeId = 1;
				ReportService.loadDlyTransBranch(self);
			}

			
			ReportService.loadMainClassListRefer1(self);
		});
		self.reportdet.id = 'ENCD_CONFIRM_OR_ENQUIRY_REPORT';
		//ReportService.loadBranchList(self);
		self.gridAlertInd = false;
		GridServices.defineGrid(self,null, 'eNcdConfirmEnqReportGrid',null,columnDefs.eNcdConfirmEnq,null, pagination, null);
	};
	
	self.fncleargrid = function(formObject){
		self.gridAlertInd = false;
		self.eNcdConfirmEnqReportGrid.data = [];
		
	};
	
	//Search button click event
	self.fnSearchEncdConfirmOrEnqReportDet = function(){
		self.eNcdConfirmEnqReportGrid.data = [];
		if(self.eNcdConfirmEnqReportGrid.data!=undefined){
	    	GridServices.bindGrid(self,'reportdet','eNcdConfirmEnqReportGrid',null,pagination,null);
		}
		/*if (self.reportdet.branchId == null || self.reportdet.branchId == '' || self.reportdet.branchId == 'undefined'){
				alert(FILTER_MSGS.FILTER_VALIDATION.SELECT_BRANCH);
				$("#BRANCH_ID").focus();
		}else if (self.reportdet.accountCode == null || self.reportdet.accountCode == '' || self.reportdet.accountCode == 'undefined'){
				alert(FILTER_MSGS.FILTER_VALIDATION.SELECT_ACCCODE);
				$("#ACCOUNT_CODE").focus();
		}else*/ 
		
	
			if(self.reportdet.sourceTypeId == undefined || self.reportdet.sourceTypeId == null || self.reportdet.sourceTypeId == 0 || self.reportdet.sourceTypeId == ''){
				swal("Please Select Source Type","reportdet.sourceTypeId");
		}
		else if (self.reportdet.fromDate == null || self.reportdet.fromDate == '' || self.reportdet.fromDate == 'undefined'){
				swal(FILTER_MSGS.FILTER_VALIDATION.VALID_FROMDT);
				$("#FROM_DATE").focus();
		}else if (self.reportdet.toDate == null || self.reportdet.toDate == '' || self.reportdet.toDate == 'undefined'){
				swal(FILTER_MSGS.FILTER_VALIDATION.VALID_TODT);
				$("#TO_DATE").focus();
		}else
		ReportService.getEncdConfirmOrEnqGridDetails(self);
		self.gridAlertInd = true;
	};	
	
	self.checkAll = function(){
		if(document.getElementById("CHK_ALL").checked){
			document.getElementById("CHK_ISM_APPCODE").checked = false;
			document.getElementById("CHK_CANCEL_APPCODE").checked = false;
			document.getElementById("CHK_ISM_ENQNO").checked = false;
			
		}
		else{
		}
	};
	// print PDF
	self.fnPrinteNCDConfirm = function(){
		if (confirm(FILTER_MSGS.FILTER_VALIDATION.CONFIRM_PRINT)) {
			if(self.eNcdConfirmEnqReportGrid.data.length > 0){
						self.printeNCDConfirm(self.reportdet);					
			}else
				alert(FILTER_MSGS.FILTER_VALIDATION.NO_DATA_TOPRINT);
		}
	};
	
	
	// Print Generation
	self.printeNCDConfirm = function(doObject) {
		var data = JSON.stringify(doObject);
	    var form = $('<form action="'+CONTEXT_PATH+'reports/pdfeNCDConfirm" method="post" target="_blank" >');
		var input =  $('<input type="hidden" name="json"/>').val(data);
		input.appendTo(form);
		form.appendTo('body');
		form.submit();
	};	
	// Export excel
	self.fnExceleNCDConfirm = function(doObject){
		if (confirm(FILTER_MSGS.FILTER_VALIDATION.CONFIRM_EXCEL)) {
			var data = JSON.stringify(doObject);
			var form = $('<form action="'+CONTEXT_PATH+'reports/exceleNCDConfirm/EncdExcelForm" method="post" target="_blank">');
			var input =  $('<input type="hidden" name="json"/>').val(data);
			input.appendTo(form);
			form.appendTo('body');
			form.submit();
		}
	
		
		
		/* if (confirm(FILTER_MSGS.FILTER_VALIDATION.CONFIRM_EXCEL)) {
			 if(self.eNcdConfirmEnqReportGrid.data.length > 0){
				 document.getElementById('EXCEL_DLD').click();    
				 alert(FILTER_MSGS.FILTER_VALIDATION.DATA_EXPORTED);
			 }
			 else
				 alert(FILTER_MSGS.FILTER_VALIDATION.NO_DATA_TOEXPORT);
		 	};	*/
	};	
	/*Grid Start*/
	columnDefs.eNcdConfirmEnq = [ {
		field : 'slNo',
		displayName : 'S.No.',
		cellClass: 'text-center',
		enableColumnMenu : false,width:150
	},{
		field : 'currentDate',
		displayName : 'Transaction Date / Time',
		cellClass: 'text-left',
		enableColumnMenu : false,width:200
	},{
		field : 'inceptionDate',
		displayName : 'Inception Date',
		cellClass: 'text-left',
		enableColumnMenu : false,width:200
	},{
		field : 'expiryDate',
		displayName : 'Expiry Date',
		cellClass: 'text-left',
		enableColumnMenu : false,width:200
	},{
		field : 'branchCode',
		displayName : 'Branch Code',
		cellClass: 'text-left',
		enableColumnMenu : false,width:250
	},{
		field : 'code',
		displayName : 'Intermediary Code',
		cellClass: 'text-left',
		enableColumnMenu : false,width:250
	},{
		field : 'agentName',
		displayName : 'Intermediary Name',
		cellClass: 'text-left',
		enableColumnMenu : false,width:250
	},{
		field : 'coverNoteNo',
		displayName : 'Cover Note / Reference No.',
		cellClass: 'text-left',
		enableColumnMenu : false,width:250
	},{
		field : 'vehicleNo',
		displayName : 'CN Vehicle No.',
		cellClass: 'text-left',
		enableColumnMenu : false,width:250
	},{
		field : 'ncdVehicleNo',
		displayName : 'NCD Vehicle No.',
		cellClass: 'text-left',
		enableColumnMenu : false,width:250
	},{
		field : 'cnStatus',
		displayName : 'Cover Note Status',
		cellClass: 'text-left',
		enableColumnMenu : false,width:250
	},{
		field : 'coverNoteType',
		displayName : 'Cover Note Type',
		cellClass: 'text-left',
		enableColumnMenu : false,width:250
	},{
		field : 'gstPercent',
		displayName : 'Current NCD',
		cellClass: 'text-left',
		enableColumnMenu : false,width:250
	},{
		field : 'gstOnlineTaxPercent',
		displayName : 'Next NCD',
		cellClass: 'text-left',
		enableColumnMenu : false,width:250
	},{
		field : 'allowedPercent',
		displayName : 'Allowed NCD',
		cellClass: 'text-left',
		enableColumnMenu : false,width:250
	},{
		field : 'erpTaxCode',
		displayName : 'ISM CFN / CAN Appr Code',
		cellClass: 'text-left',
		enableColumnMenu : false,width:250
	},{
		field : 'originalInvoiceNo',
		displayName : 'ISM Enquiry Reference No.',
		cellClass: 'text-left',
		enableColumnMenu : false,width:250
	},{
		field : 'statusGrid',
		displayName : 'ISM Status (Code / Description)',
		cellClass: 'text-left',
		enableColumnMenu : false,width:250
	},{
		field : 'totalRecords',
		visible : false
	}
	];	
/* eNCD Confirmation / Enquiry Report End */
	
/* Inactive User Report Start */	
	//Init Function
	self.setDefaultInActiveUserDet = function() {
		self.fnLoadRptSourceTypes().then(function(response){
		if(GLOBAL_DATA.staffId != 0){
			self.reportdet.staffInd="Y";
		}
			$("#DD_BRANCH").focus();
			CommonService.getCurrentDate().then(function(response) {
				var currDate=response.date;			
				self.reportdet.toDate = currDate;			
				self.reportdet.fromDate = monthFirst(currDate);
			});
			self.gridAlertInd = false;
			ReportService.loadBranchList(self);
			ReportService.loadMainClassListRefer1(self);
		});		
		/*if(GLOBAL_DATA.staffId != 0){
			self.reportdet.staffInd="Y";
		}*/
		self.reportdet.gridOnloadInd=true;
		FilterSearchService.loadUserTypeItemList(self);
	//	ReportService.loadBranchList(self);
		GridServices.defineGrid(self,null, 'inActiveUserDetGrid',null,columnDefs.inActiveUserDet,null, pagination, null);
	};
	//Search button Click 
	self.fnSearchInActiveUserDet = function(){
		self.inActiveUserDetGrid.data = [];
		if(self.reportdet.branchId>0) {self.reportdet.branchName = $("#SEL_BRANCH option:selected").html();}
		if(self.reportdet.userTypeIdForm>0) {self.reportdet.userTypeDesc = $("#SEL_USER_TYPE option:selected").html();};
		if(self.reportdet.userTypeIdForm == '' || self.reportdet.userTypeIdForm == undefined)
			swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_USER_TYPE,"reportdet.userTypeIdForm");
		else if(self.reportdet.sourceTypeId == undefined || self.reportdet.sourceTypeId == null || self.reportdet.sourceTypeId == 0 || self.reportdet.sourceTypeId == ''){
			swal("Please Select Source Type","reportdet.sourceTypeId");
		}
		else if (self.reportdet.branchId == '' || self.reportdet.branchId == undefined)
			swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_BRANCH,"reportdet.branchId");
		else		
			ReportService.getInActiveUserGridDetails(self);	
		/*if((self.reportdet.userTypeIdForm != 0 || self.reportdet.userTypeIdForm != undefined) 
				&& (self.reportdet.branchId != 0 || self.reportdet.branchId != undefined)
				&& (self.inActiveUserDetGrid.data=='' || self.inActiveUserDetGrid.data == null))
			{
				alert("No Records found.");
			}*/
	};	
	/*Grid Start*/
	columnDefs.inActiveUserDet = [ {
		field : 'slNo',
		displayName : 'S.No.',
		enableColumnMenu : false,width:60
	},{
		field : 'userIdGrid',
		displayName : 'User ID',
		enableColumnMenu : false,width:150,
		cellClass:'text-left'
	},{
		field : 'statusGrid',
		displayName : 'Status',
		enableColumnMenu : false,width:100,
		cellClass:'text-left'
	},{
		field : 'userName',
		displayName : 'Intermediary Name',
		enableColumnMenu : false,width:250,
		cellClass:'text-left'
	},{
		field : 'intermediaryCode',
		displayName : 'Intermediary Code',
		enableColumnMenu : false,width:150,
		cellClass:'text-left'
	},{
		field : 'lastLoginDate',
		displayName : 'Last Login Date',
		enableColumnMenu : false,width:200,
		cellClass:'text-left'
	},{
		field : 'totalRecords',
		visible : false
	}
	];	
/* Inactive User Report End */
	
/* Intermediary Profile Report Details Start*/
	//Init Function
	self.setIntermediaryProfileReportDet = function() {
		self.fnLoadRptSourceTypes().then(function(response){
			if(GLOBAL_DATA.staffId != 0){
				self.reportdet.staffInd="Y";
			}
			$("#DD_BRANCH").focus();
			CommonService.getCurrentDate().then(function(response) {
				var currDate=response.date;			
				self.reportdet.toDate = currDate;			
				self.reportdet.fromDate = monthFirst(currDate);
			});
			self.gridAlertInd = false;
			ReportService.loadBranchList(self);
			ReportService.loadMainClassListRefer1(self);
		});		
		/*if(GLOBAL_DATA.staffId != 0){
			self.reportdet.staffInd="Y";
		}*/
		self.dateOnLoadCurrent();
		self.reportdet.gridOnloadInd = true;
		self.reportdet.id = "INTERM_PROF_REPORTS_ID";
		ReportService.loadBranchList(self);
		ReportService.loadStatus(self);
		ReportService.loadMainClassList(self);
		GridServices.defineGrid(self,null, 'intermediaryProfileReportGrid',null,columnDefs.intermediaryProfileDet,null, pagination, null);
	};	
	//Search button click event
	self.fnSearchIntermediaryProfileDet = function(ind){
		var status=true;
		if(ind=='S'){
		self.reportdet.branchName ="";
		self.reportdet.renewalStatusDesc ="";
		}

		if(self.reportdet.sourceTypeId == undefined || self.reportdet.sourceTypeId == null || self.reportdet.sourceTypeId == 0 || self.reportdet.sourceTypeId == ''){
			swal("Please Select Source Type","reportdet.sourceTypeId");
			status=false;	
		}
		else if (self.reportdet.branchId == 0 || self.reportdet.branchId == '' || self.reportdet.branchId == undefined){
			swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_BRANCH,"reportdet.branchId");
			status=false;
		}
		else if(self.reportdet.fromDate == null || self.reportdet.fromDate == undefined || self.reportdet.fromDate.trim().length == 0){
				swal("Please select From Date","reportdet.fromDate");			
				status = false;
			} else if(self.reportdet.toDate == null || self.reportdet.toDate == undefined || self.reportdet.toDate.trim().length == 0){
				swal("Please select To Date","reportdet.toDate");			
				status = false;
			} else {
				if(ind=='S'){
					self.intermediaryProfileReportGrid.data = [];
					if(self.reportdet.statusId>0) {
						self.reportdet.renewalStatusDesc = $("#SEL_STATUS option:selected").html();
					}
					ReportService.getIntermediaryProfileGridDetails(self);
				}
			}
	
		
		/*else if(self.reportdet.accountCode=='' || self.reportdet.accountCode==undefined)
			{swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_UID_INTERCODE,"reportdet.accountCode");
			 status=!status;}*/
		/*else if(ind=='S'){
			self.intermediaryProfileReportGrid.data = [];
			
			if(self.reportdet.branchId>0)
			{
				self.reportdet.branchName = $("#SEL_BRANCH option:selected").html();
			}
			if(self.reportdet.statusId>0)
			{
				self.reportdet.renewalStatusDesc = $("#SEL_STATUS option:selected").html();
			}
			ReportService.getIntermediaryProfileGridDetails(self);
		}*/
		if(ind=='P')
			{
			return status;
			}
	};	

	/*Grid Start*/
	columnDefs.intermediaryProfileDet = [ {
		field : 'slNo',
		displayName : 'S.No.',
		enableColumnMenu : false,width:60
	},{
		field : 'insuredName',
		displayName : 'Intermediary Name',
		enableColumnMenu : false,width:200,
		cellClass: 'text-left '
	},{
		field : 'serialNo',
		displayName : 'Intermediary Code',
		enableColumnMenu : false,width:250,
		cellClass: 'text-left '
	},{
		field : 'createdOn',
		displayName : 'Created On',
		enableColumnMenu : false,width:100,
		cellClass: 'text-left '
	},{
		field : 'branchName',
		displayName : 'Branch Name',
		enableColumnMenu : false,width:130,
		cellClass: 'text-left '
	},{
		field : 'userType',
		displayName : 'Source Type',
		enableColumnMenu : false,width:100,
		cellClass: 'text-left '
	},{
		field : 'customerName',
		displayName : 'Outlet',
		visible : false,
		enableColumnMenu : false,width:250,
		cellClass: 'text-left '
	},{
		field : 'supervisor',
		displayName : 'Service Account',
		visible : false,
		enableColumnMenu : false,width:250,
		cellClass: 'text-left '
	},{
		field : 'userName',
		displayName : 'User Name',
		enableColumnMenu : false,width:250,
		cellClass: 'text-left '
	},{
		field : 'userIdGrid',
		displayName : 'User ID',
		enableColumnMenu : false,width:250,
		cellClass: 'text-left '
	},{
		field : 'intermediaryCode',
		displayName : 'Additional Serial Code',
		visible : false,
		enableColumnMenu : false,width:250,
		cellClass: 'text-left '
	},{
		field : 'roleName',
		displayName : 'Short Name',
		visible : false,
		enableColumnMenu : false,width:250,
		cellClass: 'text-left '
	},{
		field : 'statusGrid',
		displayName : 'User Status',
		enableColumnMenu : false,width:230,
		cellClass: 'text-left '
	},{
		field : 'totalRecords',
		visible : false	}
	];		
/*Intermediary Profile Report Details End*/

/*Policy Renewed Starts Here*/	
	//Init Function
	self.setPolicyRenewedListingReportDet = function() {		
		if(GLOBAL_DATA.staffId != 0){
			self.reportdet.staffInd="Y";
		}
		//ReportService.loadDlyTransBranch(self);
		self.reportdet.gridOnloadInd=true;
		self.reportdet.id='RPT_POL_RENEWED_LIST';
		CommonService.getCurrentDate().then(function(response) {		
			self.reportdet.toDate = monthLast(response.date);			
			self.reportdet.fromDate = monthFirst(response.date);
		});
		self.fnLoadRptSourceTypes();
		if(self.staffId == 0){
			self.reportdet.sourceTypeId = 1;
			ReportService.loadBranchList(self);
		}
		ReportService.loadRenewalStatus(self);
		var events = {"ondblclick" : "fnGetSelectedRenewalDetail"};
		GridServices.defineGrid(self,null, 'policyRenewedListingFirstGrid',null,columnDefs.policyRenewedListingFirst,null, null, events);
		GridServices.defineGrid(self,null, 'policyRenewedListingSecGrid',null,columnDefs.policyRenewedListingSec,null, pagination, null);
	};	
	//To load second grid details on double click event
	self.fnGetSelectedRenewalDetail = function(rowEntity){
		if(self.policyRenewedListingSecGrid.data != 0 && self.policyRenewedListingSecGrid.data !='')
		{self.policyRenewedListingSecGrid.data = [];}
		//Setting Grid variable into Form variable		
		self.reportdet.otsMainClassId=rowEntity.mainClassId;
		ReportService.getPolicyRenewedListingSecGridDetails(self);
	};
		
	/*Grid Start*/
	columnDefs.policyRenewedListingFirst = [ {
		field : 'otsClassDesc',
		displayName : 'Class',
		enableColumnMenu : false,width:150
	},{
		field : 'policiesDue',
		displayName : 'No.of Policies due for Renewal',
		enableColumnMenu : false,width:250
	},{
		field : 'policies',
		displayName : 'No.of Policies Renewed',
		enableColumnMenu : false,width:250
	},{
		field : 'balance',
		displayName : 'Balance Not Renewed',
		enableColumnMenu : false,width:250
	},{
		field : 'rate',
		displayName : 'Renewal Rate',
		enableColumnMenu : false,width:250
	}
	];
	//Second Grid
	columnDefs.policyRenewedListingSec = [ {
		field : 'slNo',
		displayName : 'S.No.',
		enableColumnMenu : false,width:75
	},{
		field : 'insuredName',
		displayName : 'Insured Name',
		enableColumnMenu : false,width:250
	},{
		field : 'policyNo',
		displayName : 'Policy No.',
		enableColumnMenu : false,width:150
	},{
		field : 'vehicleNo',
		displayName : 'Vehicle No.',
		enableColumnMenu : false,width:100
	},{
		field : 'otsClassDesc',
		displayName : 'Class',
		enableColumnMenu : false,width:100
	},/*{
		field : 'contactNo',
		displayName : 'Address / Contact No.',
		enableColumnMenu : false,width:250
	},*/{
		field : 'inceptionDate',
		displayName : 'Effective Date',
		enableColumnMenu : false,width:150
	},{
		field : 'expiryDate',
		displayName : 'Expiry Date',
		enableColumnMenu : false,width:150
	},{
		field : 'totalPremium',
		displayName : 'Sum Insured',
		enableColumnMenu : false,width:130,
		cellFilter: 'number: 2'
	},{
		field : 'totalAmount',
		displayName : 'Total Payable',
		enableColumnMenu : false,width:130,
		cellFilter: 'number: 2'
	},{
		field : 'allowedPercent',
		displayName : 'NCD %',
		enableColumnMenu : false,width:70
	},{
		field : 'coverNoteNo',
		displayName : 'Renewed Cover Note No.',
		enableColumnMenu : false,width:200
	},{
		field : 'totalRecords',
		visible: false
	}
	];	
	//on search button click
	self.fnpolicyRenewedListSearch = function(ind)
	{
		var status=true;
		if(self.reportdet.sourceTypeId == undefined || self.reportdet.sourceTypeId == null || self.reportdet.sourceTypeId == 0 || self.reportdet.sourceTypeId == ''){
			swal("Please Select Source Type","reportdet.sourceTypeId");
			status=false;	
		}
		else if(self.reportdet.branchId==undefined || self.reportdet.branchId == 0)
		{
		swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_BRANCH,"reportdet.branchId");
		status=!status;
		}
	else if(self.reportdet.accountCode == undefined || self.reportdet.accountCode == '')
		{
		swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_ACCCODE,"reportdet.accountCode");
		status=!status;
		}
	else if(self.reportdet.fromDate == undefined || self.reportdet.fromDate=='')
		{
		swal(FILTER_MSGS.FILTER_VALIDATION.VALID_FROMDT,"reportdet.fromDate");
		status=!status;
		}
	else if(self.reportdet.toDate == undefined || self.reportdet.toDate == '')
		{
		swal(FILTER_MSGS.FILTER_VALIDATION.VALID_TODT,"reportdet.toDate");
		status=!status;
		}
	else if(ind=='S')
		{
		self.reportdet.branchName = $("#SEL_BRANCH option:selected").html();
		self.reportdet.renewalStatusDesc = $("#SEL_STATUS option:selected").html();
		self.policyRenewedListingFirstGrid.data = [];
		self.policyRenewedListingSecGrid.data = [];
		ReportService.getPolicyRenewedListDetails(self);
		}
		if(ind=='P'){
			return status;
		}
	};	
	
	//Date validation for Policy Renewed Listing
	self.fnPRLChkFromDate = function(){
		if(self.reportdet.fromDate!=''){
			if(self.reportdet.fromDate!=undefined){
				if(self.reportdet.fromDate instanceof Date)
					fromDate=dateToString(self.reportdet.fromDate);
				else
					fromDate=self.reportdet.fromDate;
			}else{
				//alert(FILTER_MSGS.FILTER_VALIDATION.INVAL_DT);
			 	self.reportdet.fromDate='';
			 	self.reportdet.toDate='';
			 	return false;
			}
		}
		return true;
	};
	
	self.fnPRLChkToDate = function(){
		if(!isValidDate(self.reportdet.toDate))
		{
			self.reportdet.toDate="";
			return false;
		}
		if(self.reportdet.toDate==undefined){			
	 	self.reportdet.toDate='';
		}
		else if(self.reportdet.fromDate!=''&& self.reportdet.fromDate!=undefined){
			if(self.reportdet.fromDate instanceof Date)
				fromDate=dateToString(self.reportdet.fromDate);
			else
				fromDate=self.reportdet.fromDate;				
			if(stringToDate(fromDate)>stringToDate(self.reportdet.toDate)){
				alert(FILTER_MSGS.FILTER_VALIDATION.EQUAL_GREATER_FROMDT);
				self.reportdet.toDate='';
			} 
		} 			
	 };
/*Policy Renewed Ends here*/
	 
 /* Renewal Notice Listing - Master Policy Report Details Start*/	 
	 self.setMPRenewalNoticeListingReportDet = function() {
			if(GLOBAL_DATA.staffId != 0){
				self.reportdet.staffInd="Y";
			}
			self.disableDownloadBtn = true;
			self.reportdet.id = "MP_RENEWAL_NOTICE_LISTING_REPORT";
			self.dateOnLoad();
			var gridSettings = {
				enableRowHeaderSelection : false,
				enableSelectAll : false,
				multiSelect : false,
				enableColumnResizing : true,
				enableRowSelection : true,
				enablePinning : true
			};
			
			self.fnLoadRptSourceTypes();
			 var pagination = {pageSizes :[10,20,50,100],page:10};
			GridServices.defineGrid(self,null, 'mpRenNoticeListingGrid',gridSettings,columnDefs.mpRenewalNoticeListing,null, pagination, null);
		};

		self.fnLoadMpBranchesBySourceType = function(formObject){
			formObject.branchId = 0;
			formObject.agentId = 0;
			formObject.accountCode = null;
			self.mpRenNoticeListingGrid.data = [];
			return CommonService.getBranchListBySourceTypeId({sourceTypeId:formObject.sourceTypeId}).then(function(response){
				self.rptBranchOptions = response.data;
				return response;
			});
		};
		
		self.fnSearchMpRenewalNoticeDet = function(formObject){
			if(self.reportdet.sourceTypeId == undefined || self.reportdet.sourceTypeId == null || self.reportdet.sourceTypeId == 0 || self.reportdet.sourceTypeId == ''){
				swal("Please Select Source Type","reportdet.sourceTypeId");
			}else if (formObject.fromDate == '' || formObject.fromDate == undefined || formObject.fromDate == null){
				swal(FILTER_MSGS.FILTER_VALIDATION.VALID_FROMDT);
			}else if (formObject.toDate == '' || formObject.toDate == undefined || formObject.toDate == null){
				swal(FILTER_MSGS.FILTER_VALIDATION.VALID_TODT);
			}else {
				self.mpRenNoticeListingGrid.data = [];
				//self.mpRenNoticeListingSecGrid.data = [];
				formObject.isPagination = 'Y';
				self.disableDownloadBtn = true;
				$http.post(CONTEXT_PATH+'reports/searchMastPolRenNotice',formObject).then(function(response) {
					if(response != undefined && response.data!= undefined){
						GridServices.bindGrid(self,'reportdet','mpRenNoticeListingGrid',response.data,'Y','reports/searchMastPolRenNotice');
					}
				});
			}
		};
		self.fnResetMpRenNotice = function(){
			jConfirm(FILTER_MSGS.FILTER_VALIDATION.CONFIRM_RESET,"Warning",function(res){
				if(res)  
					$state.reload(); 
			});
		};

		self.fnClearMpRenNoticeFrom = function(){
			self.reportdet.subAgentId = "";
			self.reportdet.fromDate = "";
			self.reportdet.toDate = "";
			self.mpRenNoticeListingGrid.data = [];
			localStorageService.remove("reportdet");
			self.dateOnLoad();				
			return true;
		};
		
		columnDefs.mpRenewalNoticeListing = [{name:'policyId',visible:false},
		                                    {field : 'slNo',displayName : 'S.No.',enableColumnMenu : false,width:50,cellClass: 'text-center' },
		                      				{field : 'accountCode',displayName : 'Intermediary Code',enableColumnMenu : false,width:150,cellClass: 'text-left'},
		                      				{field : 'agencyName',displayName : 'Intermediary Name',enableColumnMenu : false,width:180,cellClass: 'text-left'},
		                      				{field : 'branchName',displayName : 'Branch Name',enableColumnMenu : false,width:150,cellClass: 'text-left'},
		                      				{field : 'insuredName',displayName : 'Insured Name',enableColumnMenu : false,width:270,cellClass: 'text-left'},
		                      				{field : 'businessRegNo',displayName : 'Business Reg. No.',enableColumnMenu : false,width:200,cellClass: 'text-left'},
		                      				{field : 'masterPolicyNo',displayName : 'Master Policy No.',enableColumnMenu : false,width:200,cellClass: 'text-left'},
		                      				{field : 'inceptionDate',displayName : 'Effective Date',enableColumnMenu : false,width:100,cellClass: 'text-left'},
		                      				{field : 'expiryDate',displayName : 'Expiry Date',enableColumnMenu : false,width:100,cellClass: 'text-left'},
		                      				{field : 'address',displayName : 'Address',enableColumnMenu : false,width:250,cellClass: 'text-left'},
		                      				{field : 'mobileNo',displayName : 'Mobile No.',enableColumnMenu : false,width:200,cellClass: 'text-left'},
		                      				{field : 'emailId',displayName : 'Email',enableColumnMenu : false,width:250,cellClass: 'text-left'},
		                      				{field : 'renewalStatus',displayName : 'Renewal Status',enableColumnMenu : false,width:120,cellClass: 'text-left'},
		                      				{
		                      					field : 'pintNoticeBtn',displayName : '',enableColumnMenu : false,width : 100,pinnedRight:true,
		                      					cellTemplate : '<div class="grid-cell-control"><center><button class="btn btn-icon-left btn-sm" style="padding : 3px 12px" ng-click="grid.appScope.fnMPRenewalNotice(this.row.entity)">Print Notice</button></center></div>'
		                      				},
		                      				{
		                      					field : 'downloadExcelBtn',displayName : '',enableColumnMenu : false,width : 200,pinnedRight:true,
		                      					cellTemplate : '<div class="grid-cell-control"><center><button class="btn btn-icon-left btn-sm" style="padding : 3px 12px" ng-click="grid.appScope.downloadMpRenNoticeExcel(this.row.entity)">Download Vehicle Details</button></center></div>'
		                      				}
		                      		];	
		
		self.downloadMpRenNoticeExcel = function(formObject){
			self.selectedPolNo = formObject.masterPolicyNo;
			jConfirm("Do you wish to download vehicle excel?","Warning",function(res){
				if(res){     
					$timeout(function(){
						document.getElementById("REN_EXCEL_DOWNLOAD").click();
					});
				}
			});
		};
		self.fnMPRenewalNotice = function(formObject){
			self.getPrintPdf(formObject,'pdfrenewalMastPolnoticelist');
		};
 /* Renewal Notice Listing - Master Policy Report Details End*/	 
	 
	 
/* Renewal Notice Listing Report Details Start*/
	//Init
	self.setRenewalNoticeListingReportDet = function() {
		
		if(GLOBAL_DATA.staffId != 0){
			self.reportdet.staffInd="Y";
		}
		self.reportdet.id = "RENEWAL_NOTICE_LISTING_REPORT";
		self.dateOnLoad();
		var gridSettings = {
			enableRowHeaderSelection : true,
			enableSelectAll : true,
			multiSelect : true,
			enableColumnResizing : true,
			enableCellEdit : false,
			enableCellSelection: false,
			cellEditableCondition : false,
			enableCellEditOnFocus : false,
			enableRowSelection : true,
			enableColumnReordering : false
		};
		
		self.fnLoadRptSourceTypes();
		if(self.staffId == 0){
			self.reportdet.sourceTypeId = 1;
			ReportService.loadDlyTransBranch(self);
		}
		ReportService.loadcvgType(self);
		ReportService.loadvehicleType(self);
		var events = {"ondblclick" : "fnGetSelectedRnwlNotice"};
		var secondEvents = {"ondblclick" : "fnGetSecSelectedRnwlNotice"};
		GridServices.defineGrid(self,null, 'renewalNoticeListingFirstGrid',null,columnDefs.renewalNoticeListingFirst,null, null, events);
		GridServices.defineGrid(self,null, 'renewalNoticeListingSecGrid',gridSettings,columnDefs.renewalNoticeListingSec,null, pagination, secondEvents);
	};
	
	self.fnGetrnwlfromDate = function(formObject) {
		var currDate=formObject.fromDate;		
		formObject.toDate = monthLast(currDate);
	};
	
	self.fnGetrnwltoDate = function(){
		var toDate = fnDateManipulation(self.reportdet.fromDate,3,"+", "M");
		if(!isValidDate(self.reportdet.toDate)) {
			self.reportdet.toDate="";
			return false;
		}
		if(self.reportdet.toDate==undefined){			
			self.reportdet.toDate='';
		} else if(self.reportdet.fromDate!=''&& self.reportdet.fromDate!=undefined){
			if(self.reportdet.fromDate instanceof Date) {
				fromDate=dateToString(self.reportdet.fromDate);
			} else {
				fromDate=self.reportdet.fromDate;
			}
			if(stringToDate(fromDate)>stringToDate(self.reportdet.toDate)){
				/*alert(FILTER_MSGS.FILTER_VALIDATION.EQUAL_GREATER_FROMDT);*/
				swal("To Date should be greater than or equal to From Date","reportdet.toDate");
				self.reportdet.toDate='';
			} 
			//else if(stringToDate(toDate) < stringToDate(self.reportdet.toDate) || getDiffInDays(self.reportdet.fromDate,self.reportdet.toDate) > 90){
				/*alert(FILTER_MSGS.FILTER_VALIDATION.VALIDATE_RNWL_FROMDATE);*/
				//swal("To Date should not be greater than 90 days from given From Date","reportdet.toDate");
				//self.reportdet.toDate='';
			//} 
		} 			
	 };
	 
	self.fnGetSelectedRnwlNotice = function(rowEntity){
		self.reportdet.otsMainClassId = rowEntity.mainClassId;
		ReportService.fngetSelectedRnwlNoticeList(self);
		frmModel.hdnPolmotorId = "";
	};
	
	self.fnGetSecSelectedRnwlNotice = function(row){
		
		self.mySelectedRows=self.renewalNoticeListingSecGridApi.selection.getSelectedRows();		
	};
	
	self.fnCheckRenewalNotice = function(frmModel){	
		var gridData=self.renewalNoticeListingSecGridApi.selection.getSelectedRows();
		var polId="";
		for(var i=0;i<gridData.length;i++) {
	    	if (polId.length == 0 ) {
	    		polId = gridData[i].policyId;
	    	} else {
	    		polId = polId +","+gridData[i].policyId;
	    	}
		}		
		frmModel.hdnPolmotorId = polId;
		
		if (frmModel.hdnPolmotorId == undefined || frmModel.hdnPolmotorId == null || frmModel.hdnPolmotorId.length == 0) {
			swal('Please Select a record To Print');
			return false;			
		} else {			
			self.getPrintPdf(self.reportdet,'pdfrenewalnoticelist');
			return true;
		}
	};
	
	self.fnSearchValRnwlNoticeDet = function(formObject){
		var status = true;
		/*if(formObject.branchId == '' || formObject.branchId == undefined){
			alert('Please Select Branch');
			status = false;
		}else if(formObject.accountCode == '' || formObject.accountCode == undefined){
			alert('Please Select Account Code');
			status = false;
		}
		else */
		if(self.reportdet.sourceTypeId == undefined || self.reportdet.sourceTypeId == null || self.reportdet.sourceTypeId == 0 || self.reportdet.sourceTypeId == ''){
			swal("Please Select Source Type","reportdet.sourceTypeId");
			status = false;
		}
		else if (formObject.fromDate == '' || formObject.fromDate == undefined || formObject.fromDate == null){
			alert(FILTER_MSGS.FILTER_VALIDATION.VALID_FROMDT);
			status = false;
		}
		else if (formObject.toDate == '' || formObject.toDate == undefined || formObject.toDate == null){
			alert(FILTER_MSGS.FILTER_VALIDATION.VALID_TODT);
			status = false;
		} else {
			self.renewalNoticeListingSecGrid.data = [];
		}
		return status;
	/*	else if (self.reportdet.userTypeIdForm == '' || self.reportdet.userTypeIdForm == undefined || self.reportdet.userTypeIdForm == null)
			alert('Please Select User Type');	
		else if(self.reportdet.branchId== '' || self.reportdet.branchId == undefined || self.reportdet.branchId == null)
			alert('Please Select Branch');			 
		else{
		self.inValidSignAttemptUserDetGrid.data=[];
		ReportService.getInValidSignAttemptUserGridDetails(self);
		}*/
	};
	
	self.fnClearRnwlNtcFrom = function(){
		self.reportdet.subAgentId = "";
		self.reportdet.fromDate = "";
		self.reportdet.toDate = "";
		self.reportdet.cvgtypeId = "";
		self.reportdet.vehicletypeId = "";
		self.renewalNoticeListingFirstGrid.data = [];
		self.renewalNoticeListingSecGrid.data = [];
		localStorageService.remove("reportdet");
		self.dateOnLoad();				
		return true;
	};
	//Reset Function
	self.fnResetRnwlNtcFrom = function(){
		if(confirm(FILTER_MSGS.FILTER_VALIDATION.CONFIRM_RESET)){
			if(GLOBAL_DATA.staffId != 0){
				self.reportdet = {};
				self.reportdet.staffInd="Y";
				self.renewalNoticeListingFirstGrid.data = [];
				self.renewalNoticeListingSecGrid.data = [];
			}else{
				self.reportdet.subAgentId = "";
				self.reportdet.fromDate = "";
				self.reportdet.toDate = "";
				self.reportdet.cvgtypeId = "";
				self.reportdet.vehicletypeId = "";
				self.renewalNoticeListingFirstGrid.data = [];
				self.renewalNoticeListingSecGrid.data = [];
			}
			localStorageService.remove("reportdet"); 
			$state.reload(); 
			self.dateOnLoad();				
			return true;
		}
	};
	
	self.LoadRnwlNoticegrid = function(){
		self.renewalNoticeListingFirstGrid.data=[];
		ReportService.getRnwlNoticeGridDetails(self);
	};
	
	//Search button click event
	self.fnSearchRenewalNoticeListingDet = function(){
		ReportService.getRenewalNoticeListingGridDetails(self);
	};
	
	
	
	/*Grid Start*/
	columnDefs.renewalNoticeListingFirst = [ {
		field : 'mainClassId',
		displayName : 'Main Class ID',
		visible : false,
		enableColumnMenu : false,
		cellClass: 'text-center'
	},{
		field : 'otsClassDesc',
		displayName : 'Class',
		enableColumnMenu : false,width: 250,
		cellClass: 'text-left'
	},{
		field : 'totalCases',
		displayName : 'Total Renewal',
		enableColumnMenu : false,width: 250,
		cellClass: 'text-center'
	}
	];
	//Second Grid
	columnDefs.renewalNoticeListingSec = [ {
		field : 'slNo',
		displayName : 'S.No.',
		enableColumnMenu : false,width:50,
		cellClass: 'text-center'
	},{
		field : 'code',
		displayName : 'Intermediary Code',
		enableColumnMenu : false,width:150,cellClass: 'text-left'
	},{
		field : 'agentName',
		displayName : 'Intermediary Name',
		enableColumnMenu : false,width:150,cellClass: 'text-left'
	},{
		field : 'branchName',
		displayName : 'Branch Name',
		enableColumnMenu : false,width:100,cellClass: 'text-left'
	},{
		field : 'insuredName',
		displayName : 'Insured Name',
		cellTemplate: '<div style="text-align:left;cursor:pointer">{{row.entity.insuredName}}</div>',
		enableColumnMenu : false,width:250,cellClass: 'text-left'
	},{
		field : 'address',
		cellTemplate: '<div class="ui-grid-cell-contents">{{row.entity.address1}},{{row.entity.address2}}, {{row.entity.address3}}, {{row.entity.address4}}, {{row.entity.address5}}</div>',
		displayName : 'Address',
		enableColumnMenu : false,width:250,cellClass: 'text-left'
	},{
		field : 'Contact No. / Email',
		cellTemplate: '<div class="ui-grid-cell-contents">{{row.entity.insuredMobileNo}} / {{row.entity.emailId}}</div>',
		displayName : 'Contact No. / Email',		
		enableColumnMenu : false,width:250,cellClass: 'text-right'
	},{
		field : 'policyNo',
		displayName : 'Policy No.',
		enableColumnMenu : false,width:150,cellClass: 'text-left'
	},{
		field : 'coverNoteNo',
		displayName : 'Cover Note No.',
		enableColumnMenu : false,width:150,cellClass: 'text-center'
	},{
		field : 'vehicleNo',
		displayName : 'Vehicle No.',
		enableColumnMenu : false,width:100,cellClass: 'text-center'
	},{
		field : 'vehicleTypeDesc',
		displayName : 'Vehicle Type',
		enableColumnMenu : false,width:130,cellClass: 'text-left'
	},{
		field : 'effectDate',
		displayName : 'Effective Date',
		enableColumnMenu : false,width:100,cellClass: 'text-center'
	},{
		field : 'expiryDate',
		displayName : 'Expiry Date',
		enableColumnMenu : false,width:100,cellClass: 'text-center'
	},{
		field : 'sumInsured',
		displayName : 'Sum Insured',cellFilter: 'number: 2',cellClass:'text-right',
		enableColumnMenu : false,width:100,cellClass: 'text-right'
	},{
		field : 'totalPremium',
		displayName : 'Renewal Premium',cellFilter: 'number: 2',cellClass:'text-right',
		enableColumnMenu : false,width:130,cellClass: 'text-right'
	},{
		field : 'ncdPercent',
		displayName : 'NCD %',
		enableColumnMenu : false,width:70,cellClass: 'text-center'
	},{
		field : 'renewalStatus',
		displayName : 'Renewal Status',
		enableColumnMenu : false,width:120,cellClass: 'text-left'
	},{
		name:'policyId',visible:false
	}
	];	
	self.getPrintPdf = function(formData,method){
		if (confirm("Do you wish to print?") == true) {	
			formData.subAccount =($("#DD_SUB_AGENT_ID option:selected").text()!= null && formData.subAgentId > 0)  ? $("#DD_SUB_AGENT_ID option:selected").text() : null ;
			var strData = JSON.stringify(formData);			
			var form = $('<form action="'+CONTEXT_PATH+'reports/'+method+'" method="post" target="_blank" >');
			var input =  $('<input type="hidden" name="json"/>').val(strData);
			input.appendTo(form);
			form.appendTo('body');
			form.submit();
		 }
	};

	/* Renewal Notice Listing Report Details End*/
	
	
	 /* Quotation Conversion Report Starts */
	//Init
	self.setQuotationConversionReportDet = function() {		
		if(GLOBAL_DATA.staffId != 0){
			self.reportdet.staffInd="Y";
		}
		$("#DD_BRANCH").focus();
		CommonService.getCurrentDate().then(function(response) {
			var currDate=response.date;			
			self.reportdet.toDate = currDate;			
			self.reportdet.fromDate = monthFirst(currDate);
		});
		self.gridAlertInd = false;
	
		ReportService.loadMainClassListRefer1(self);
		self.fnLoadRptSourceTypes();
		
		if(self.staffId == 0){
			self.reportdet.sourceTypeId = 1;
			ReportService.loadDlyTransBranch(self);
		}
		$("#DD_BRANCH_ID").focus();
		if(GLOBAL_DATA.staffId != 0){
			self.reportdet.staffInd="Y";
		}
			
		self.reportdet.id = "QUOTATION_CONVERSION_REPORT";
		self.dateOnLoad();
		var gridSettings = {
			enableRowHeaderSelection : true,
			enableSelectAll : true,
			multiSelect : true,
			enableColumnResizing : true,
			enableCellEdit : false,
			enableCellSelection: false,
			cellEditableCondition : false,
			enableCellEditOnFocus : false,
			enableRowSelection : true,
			enableColumnReordering : false
		};
		
		ReportService.loadDlyTransBranch(self);		
		ReportService.loadvehicleType(self);
		GridServices.defineGrid(self,null, 'quotationConversionGrid',gridSettings,columnDefs.quotationConversionListing,null, null, null);
	};	
	
	self.fnGetQuotTo30Date = function() {
		if (self.reportdet != null && self.reportdet != undefined ) {
			self.reportdet.toDate = fnDateManipulation(self.reportdet.fromDate,29,"+","D");	
		} 
		return true;
	};
	
	self.fnGetquofromDate = function(){
		if(!isValidDate(self.reportdet.fromDate)) {
			self.reportdet.fromDate ="";
			return false;
		}		
		if(self.reportdet.fromDate!=''){
		if(self.reportdet.fromDate!=undefined){
			if(self.reportdet.fromDate instanceof Date)
				fromDate=dateToString(self.reportdet.fromDate);
			else
				fromDate=self.reportdet.fromDate;
			CommonService.getCurrentDate().then(function(response){
				if(stringToDate(fromDate)>stringToDate(response.date)){
					swal(FILTER_MSGS.FILTER_VALIDATION.EQUAL_LESS_SYSDATE);
					self.reportdet.fromDate='';
					self.reportdet.toDate='';
					return false;
				}
			});	
		}else{
			//alert(FILTER_MSGS.FILTER_VALIDATION.INVAL_DT);
		 	self.reportdet.fromDate='';
		 	self.reportdet.toDate='';
		 	return false;
		}
	}
	return true;			
	 };
	 
		self.fnGetQuottoDate = function(){				
			if (self.reportdet.toDate != null && self.reportdet.toDate != undefined ) {							
				var toDate = fnDateManipulation(self.reportdet.fromDate,3,"+", "M");
				if(!isValidDate(self.reportdet.toDate)) {
					self.reportdet.toDate="";
					return false;
				}
				if(self.reportdet.toDate==undefined){			
					self.reportdet.toDate='';
				} else if(self.reportdet.fromDate!=''&& self.reportdet.fromDate!=undefined){
					if(self.reportdet.fromDate instanceof Date) {
						fromDate=dateToString(self.reportdet.fromDate);
					} else {
						fromDate=self.reportdet.fromDate;
					}
					if(stringToDate(fromDate)>stringToDate(self.reportdet.toDate)){
						/*alert(FILTER_MSGS.FILTER_VALIDATION.EQUAL_GREATER_FROMDT);*/
						alert("To Date should be greater than or equal to From Date");
						self.reportdet.toDate='';
					} else if(stringToDate(toDate) < stringToDate(self.reportdet.toDate) || getDiffInDays(self.reportdet.fromDate,self.reportdet.toDate) >= 31){
						/*alert(FILTER_MSGS.FILTER_VALIDATION.VALIDATE_RNWL_FROMDATE);*/
						alert("To Date should not be greater than 30 days from given From Date");
						self.reportdet.toDate='';
					} 
				}
			}			
		 };
	
	self.fnSearchValQuotationDet = function(formObject){
		var status = true;
		if(formObject.sourceTypeId == undefined || formObject.sourceTypeId == null || formObject.sourceTypeId == 0 || formObject.sourceTypeId == ''){
			swal("Please Select Source Type","reportdet.sourceTypeId");
			status=false;	
		}
		else if (formObject.fromDate == '' || formObject.fromDate == undefined || formObject.fromDate == null){
			swal(FILTER_MSGS.FILTER_VALIDATION.VALID_FROMDT,"reportdet.fromDate");
			status = false;
		}
		else if (formObject.toDate == '' || formObject.toDate == undefined || formObject.toDate == null){
			swal(FILTER_MSGS.FILTER_VALIDATION.VALID_TODT,"reportdet.toDate");
			status = false;
		} else {			
			ReportService.searchQuotationReport(self);				
		}
		return status;	
	};
	
	self.fnClearQuotationReport = function(){
		self.reportdet.accountCode="";
		self.reportdet.agentId = "";
		self.reportdet.fromDate = "";
		self.reportdet.toDate = "";		
		self.reportdet.vehicletypeId = "";		
		self.quotationConversionGrid.data = [];
		localStorageService.remove("reportdet");
		self.dateOnLoad();				
		return true;
	};
	
	//Reset Function
	self.fnResetQuotationDet = function(){
		if(confirm(FILTER_MSGS.FILTER_VALIDATION.CONFIRM_RESET)){
			if(GLOBAL_DATA.staffId != 0){
				self.reportdet = {};
				self.reportdet.staffInd="Y";
				self.quotationConversionGrid.data = [];
				
			}else{
				self.reportdet.branchId = "";
				self.reportdet.agentId = "";
				self.reportdet.vehicletypeId = "";
				self.reportdet.fromDate = "";
				self.reportdet.toDate = "";				
				self.quotationConversionGrid.data = [];				
			}
			localStorageService.remove("reportdet"); 
			$state.reload(); 
			self.dateOnLoad();				
			return true;
		}
	};	

	/*Grid Start*/	
	columnDefs.quotationConversionListing = [ {
		field : 'serialNo',
		displayName : 'S.No.',
		enableColumnMenu : false,width:50,
		cellClass: 'text-center'
	},{
		field : 'branchName',
		displayName : 'Branch Name',
		enableColumnMenu : false,width:100,cellClass: 'text-left'
	},{
		field : 'accountCode',
		displayName : 'Intermediary Code',
		enableColumnMenu : false,width:150,cellClass: 'text-left'
	},{
		field : 'agencyName',
		displayName : 'Intermediary Name',
		enableColumnMenu : false,width:150,cellClass: 'text-left'
	},{
		field : 'totalQuotationCount',
		displayName : 'Total Quotations Issued',		
		enableColumnMenu : false,width:150,cellClass: 'text-right'
	},{
		field : 'quotationConvertedCn',
		displayName : 'No. of Quotations Converted to Covernote',		
		enableColumnMenu : false,width:300,cellClass: 'text-right'
	},{
		field : 'quotationExpired',
		displayName : 'No. of Quotations Expired',
		enableColumnMenu : false,width:200,cellClass: 'text-right'
	},{
		field : 'quotatioinPercentage',
		displayName : 'Percentage Of Quotations Converted',
		enableColumnMenu : false,width:250,cellClass: 'text-right'
	}
	];	
	
	//Export Excel
	self.fnExportExcelQuotationConversion = function(doObject){	
		jConfirm(FILTER_MSGS.FILTER_VALIDATION.CONFIRM_EXCEL,"Warning",function(res){
			if(res){    
			 var data = JSON.stringify(doObject);
				var form = $('<form action="'+CONTEXT_PATH+'reports/excelQuotationConversion" method="post">');
				var input =  $('<input type="hidden" name="json"/>').val(data);
				input.appendTo(form);
				form.appendTo('body');
				form.submit();
		 	}
		});
	};
	
	
	/* Quotation Conversion Report Ends*/	
	
	/* E-Motor Cover Note Summary Report Details Start*/
	//Init Function
	self.seteMotorCoverNoteSummaryDet = function() {
		self.reportdet.gridAlertInd = false;
		if (GLOBAL_DATA.staffId != 0) {
			self.reportdet.staffInd = "Y";
		}
		self.reportdet.gridOnloadInd = true;
		self.fnLoadRptSourceTypes();
		if(self.staffId == 0){
			self.reportdet.sourceTypeId = 1;
			ReportService.loadBranchList(self);
		}
		ReportService.loadMainClassListRefer1(self);		
		CommonService.getCurrentDate().then(function(response) {
			var currDate = response.date;
			self.reportdet.toDate = currDate;
			self.reportdet.fromDate = monthFirst(currDate);
		});
		
		/*Grid Start*/
		columnDefs.emotorCNSummaryDet = [ {
			field : 'slNo',
			displayName : 'S.No.',
			enableColumnMenu : false,
			width : 70,
			cellClass : 'text-center'
		},
		{
			field : 'otsMainClassDesc',
			displayName : 'Main Class',
			enableColumnMenu : false,
			width : 100,
			cellClass : 'text-left'
		}, {
			field : 'otsClassDesc',
			displayName : 'Class',
			enableColumnMenu : false,
			width : 100,
			cellClass : 'text-left'
		}, {
			field : 'branchName',
			displayName : 'Branch Name',
			enableColumnMenu : false,
			width : 120,
			cellClass : 'text-left'
		}, {
			field : 'accountCode',
			displayName : 'Intermediary Code',
			enableColumnMenu : false,
			width : 150,
			cellClass : 'text-left'
		}, {
			field : 'agentName',
			displayName : 'Intermediary Name',
			enableColumnMenu : false,
			width : 250,
			cellClass : 'text-left'
		}, {
			field : 'coverNoteNo',
			displayName : 'Cover Note No.',
			enableColumnMenu : false,
			width : 150,
			cellClass : 'text-left'
		}, {
			field : 'originalInvoiceNo',
			displayName : 'Original CN No.',
			enableColumnMenu : false,
			width : 150,
			cellClass : 'text-left'
		}, {
			field : 'policyNo',
			displayName : 'Policy No.',
			enableColumnMenu : false,
			width : 150,
			cellClass : 'text-left'
		}, {
			field : 'vehicleNo',
			displayName : 'Vehicle No.',
			enableColumnMenu : false,
			width : 100,
			cellClass : 'text-left'
		}, {
			field : 'insuredName',
			displayName : 'Insured Name',
			enableColumnMenu : false,
			width : 120,
			cellClass : 'text-left'
		}, {
			field : 'newOldICNo',
			displayName : 'New / Old IC No.',
			enableColumnMenu : false,
			width : 130,
			cellClass : 'text-left'
		}, {
			field : 'transCategoryAttr',
			displayName : 'CN Category',
			enableColumnMenu : false,
			width : 100,
			cellClass : 'text-left'
		}, {
			field : 'createModifiedDate',
			displayName : 'CN Creation Date',
			enableColumnMenu : false,
			width : 150,
			cellClass : 'text-center'
		}, {
			field : 'issueDate',
			displayName : 'CN Issued Date',
			enableColumnMenu : false,
			width : 150,
			cellClass : 'text-center'
		}, {
			field : 'totalAmount',
			displayName : 'Sum Insured',
			enableColumnMenu : false,
			width : 130,
			cellFilter : 'number: 2',
			cellClass : 'text-right'
		}, {
			field : 'totalPremium',
			displayName : 'Basic Premium',
			enableColumnMenu : false,
			width : 130,
			cellFilter : 'number: 2',
			cellClass : 'text-right'
		}, {
			field : 'grossPremium',
			displayName : 'Gross Premium',
			enableColumnMenu : false,
			width : 130,
			cellFilter : 'number: 2',
			cellClass : 'text-right'
		}, {
			field : 'totalComm',
			displayName : 'Net Premium',
			enableColumnMenu : false,
			width : 130,
			cellFilter : 'number: 2',
			cellClass : 'text-right'
		}, {
			field : 'taxRate',
			displayName : 'Total Payable',
			enableColumnMenu : false,
			width : 130,
			cellFilter : 'number: 2',
			cellClass : 'text-right'
		}, {
			field : 'totalRecords',
			visible : false
		} ];	
		GridServices.defineGrid(self,null, 'emotorCNSummaryReportGrid',null,columnDefs.emotorCNSummaryDet,null, pagination, null);
	};	
	
	//Search button click event
	self.fnSearchCnSummaryReport = function(){	
		self.emotorCNSummaryReportGrid.data=[];
		if(self.reportdet.branchId > 0)
		{self.reportdet.branchName = $("#DD_BRANCHID option:selected").html();}
		if(self.reportdet.subAgentId > 0)
		{self.reportdet.subAccount = $("#DD_SUBACCOUNTCODE option:selected").html();}
		if(self.reportdet.sourceTypeId == undefined || self.reportdet.sourceTypeId == null || self.reportdet.sourceTypeId == 0 || self.reportdet.sourceTypeId == ''){
			swal("Please Select Source Type","reportdet.sourceTypeId");
		}
		else if (self.reportdet.branchId == null || self.reportdet.branchId == '' || self.reportdet.branchId == undefined)
			swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_BRANCH,"reportdet.branchId");
		else if (self.reportdet.accountCode == null || self.reportdet.accountCode == '' || self.reportdet.accountCode == undefined)
			swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_ACCCODE,"reportdet.accountCode");
		else if (self.reportdet.fromDate == null || self.reportdet.fromDate == '' || self.reportdet.fromDate == undefined)
			swal(FILTER_MSGS.FILTER_VALIDATION.VALID_FROMDT,"reportdet.fromDate");
		else if (self.reportdet.toDate == null || self.reportdet.toDate == '' || self.reportdet.toDate == undefined)
			swal(FILTER_MSGS.FILTER_VALIDATION.VALID_TODT,"reportdet.toDate");
		 else if(self.reportdet.otsMainClassId==null || self.reportdet.otsMainClassId=='' || self.reportdet.otsMainClassId==undefined || self.reportdet.otsMainClassId==0)
			 swal("Please select Main Class","reportdet.otsMainClassId");
		else
			ReportService.geteMotorCoverNoteSummaryGridDetails(self);
	};
	
	self.fnClearECoverNoteSummaryReport = function(){
		self.dateOnLoad();
		self.reportdet.accountCode="";
		self.subAccountCodeList="";
		self.reportdet.agentName="";
		self.reportdet.otsMainClassId="";
		self.reportdet.otsClassId="";
		GridServices.bindGrid(self,null,'emotorCNSummaryReportGrid',null,"Y",null);			
	};
	
	/*E-Motor Cover Note Summary Report Details End*/
	
													/* Make and Model Report Details Start */
	//Init
	self.setDefaultMakeAndModelDet = function() {
		self.reportdet.gridAlertInd = false;
		ReportService.loadMakeList(self);
		GridServices.defineGrid(self,null, 'makeAndModelReportGrid',null,columnDefs.makeAndModelDet,null, pagination, null);
	};	
	//To Load Make and Model
	self.fnSetSelectedMake = function(formObject){
			if(formObject.makeId != 0 && formObject.makeId!='' && formObject.makeId !=undefined){			
			ReportService.loadMakeReport(self);
		}
	};
	//Search button click event
	self.fnSearchMakeandModel = function(){
		self.makeAndModelReportGrid.data=[];
		if(self.reportdet.makeId > 0)
		{self.reportdet.makeName = $("#DD_MAKE option:selected").html();}
		if(self.reportdet.modelId > 0)
		{self.reportdet.modelName = $("#DD_MODEL option:selected").html();}
		if (self.reportdet.makeId == null || self.reportdet.makeId == '' || self.reportdet.makeId == undefined || self.reportdet.makeId == 0)
			swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_MAKE,"reportdet.makeId");		
		else
			ReportService.getMakeAndModelGridDetails(self);
	};
	//Grid
	columnDefs.makeAndModelDet = [ {
		field : 'slNo',
		displayName : 'S.No.',
		enableColumnMenu : false,width:150,
		cellClass: 'text-center'
	},{
		field : 'gisMakeCode',
		displayName : 'GIS Make Code',
		enableColumnMenu : false,width:150,
		cellClass: 'text-left' 
	},{
		field : 'ismMakeCode',
		displayName : 'ISM Make Code',
		enableColumnMenu : false,width:250,
		cellClass: 'text-left' 
	},{
		field : 'makeName',
		displayName : 'Make Name',
		enableColumnMenu : false,width:250,
		cellClass: 'text-left' 
	},{
		field : 'piamMakeCode',
		displayName : 'PIAM Make Code',
		enableColumnMenu : false,width:250,
		cellClass: 'text-left' 
	},{
		field : 'modelCode',
		displayName : 'GIS Model Code',
		enableColumnMenu : false,width:250,
		cellClass: 'text-left' 
	},{
		field : 'modelName',
		displayName : 'Model Name',
		enableColumnMenu : false,width:250,
		cellClass: 'text-left' 
	},{
		field : 'vehicleCapacity',
		displayName : 'Vehicle Capacity',
		enableColumnMenu : false,width:250,
		cellClass: 'text-left' 
	},{
		field : 'uom',
		displayName : 'UOM',
		enableColumnMenu : false,width:250,
		cellClass: 'text-left' 
	},{
		field : 'noOfSeats',
		displayName : 'No.of Seats',
		enableColumnMenu : false,width:250,
		cellClass: 'text-left' 
	},{
		field : 'vehBodyCode',
		displayName : 'Vehicle Body Code',
		enableColumnMenu : false,width:250,
		cellClass: 'text-left' 
	},{
		field : 'vehBodyName',
		displayName : 'Vehicle Body Name',
		enableColumnMenu : false,width:250,
		cellClass: 'text-left' 
	},{
		field : 'totalRecords',
		visible : false
	}];	
														/*Make and Model Report End*/
	//e-NCD confirmation / Enquiry Report
	self.resetEncdconfirmationEnqDet = function (){
		if(confirm(FILTER_MSGS.FILTER_VALIDATION.CONFIRM_RESET)){
		if(GLOBAL_DATA.staffId != 0){
			self.reportdet.branchId="";		
			self.reportdet.accountCode=null;	
		}	
		self.reportdet.fromDate = null;
		self.reportdet.toDate = null;
		self.reportdet.coverNoteNo = null;
		self.reportdet.ncdVehicleNo = null;
		self.reportdet.vehicleNo = null;
		self.reportdet.oldIcNO = null;
		self.reportdet.newIcNo = null;
		self.reportdet.subAgentId="";
		self.reportdet.checkismapprcode= "N";
		self.reportdet.checkcancelapprcode = "N";
		self.reportdet.checkismenquiryno = "N";
		self.reportdet.checkAll = "N";
		self.reportdet.sourceTypeId ="";
		self.gridAlertInd = false;
		self.eNcdConfirmEnqReportGrid.data = [];
		if(self.eNcdConfirmEnqReportGrid.data!=undefined)
	    	GridServices.bindGrid(self,'reportdet','eNcdConfirmEnqReportGrid',null,pagination,null);
		}
		
	};	
		
	/* User role rights details starts */
	//Init Function
	self.setReportsUserRolesRightsDet = function() {
		self.fnLoadRptSourceTypes().then(function(response){
			if(GLOBAL_DATA.staffId != 0){
				self.reportdet.staffInd="Y";
			}
			$("#DD_BRANCH").focus();
			CommonService.getCurrentDate().then(function(response) {
				var currDate=response.date;			
				self.reportdet.toDate = currDate;			
				self.reportdet.fromDate = monthFirst(currDate);
			});
			self.gridAlertInd = false;
			ReportService.loadDlyTransBranch(self);
			ReportService.loadMainClassListRefer1(self);
		});	
		
	/*	$http.post(CONTEXT_PATH+'reports/loadAllBranches').then(function(response) {
			self.loadBranchListOptions =  response.data[0];
		});*/
		var gridSettings = {
			enableRowHeaderSelection : true,enableSelectAll : true,multiSelect : true,enableColumnResizing : true,
			enableCellEdit : false,enableCellSelection : true,cellEditableCondition : false,enableCellEditOnFocus : true,
			enableRowSelection : true,enableColumnReordering : false,enableFiltering: true
		};
		var colsDefForRolesRights = [
		        {field : 'logInName', displayName : 'Login Name',enableColumnMenu : false},
		        {field : 'loginId', visible : false},
				{field : 'totalRecords', visible : false}];	                         
		var roleRightEvent = {'rowselection':'fnGetSelectedRoleRights'};
		GridServices.defineGrid(self,null, 'rolesRightsGrid', gridSettings, colsDefForRolesRights, null, null, roleRightEvent);
		/*if (GridServices.defineGrid(self,null, 'rolesRightsGrid', gridSettings, colsDefForRolesRights, null, null, roleRightEvent)){
			ReportService.getUserRoleRightsGridDetails(self);
		};	*/
	};
	
	self.fnUserRoleRightsReportDet = function(formObject){
		if (self.reportdet.branchId == undefined || self.reportdet.branchId == null || self.reportdet.branchId == '' || self.reportdet.branchId == 0) {
			swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_BRANCH,"reportdet.branchId");
			return false;
		} else {
			if (self.reportdet.branchId >0 ){
				ReportService.getUserRoleRightsGridDetails(self);
			} else {
				swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_BRANCH,"reportdet.branchId");
				return false;
			} 
		}
		
	};
	
	//Export Excel button click User Role Rights - (Excel)
	self.fnExportExcelUserRoleRighsRpt= function(formObject){
		
		
		var selectedId = new Array();		
	    var gridData=self.gridApi.selection.getSelectedRows();
	    var gridIds ="";
	    	
	    for(var i=0;i<gridData.length;i++){
	    	if (gridIds.length == 0){
	    		gridIds = gridData[i].loginId;	
	    	} else {
	    		gridIds += ","+gridData[i].loginId;
	    	}
	    }
	    self.reportdet.loginNames = gridIds;
        if(gridData.length>0){
        	jConfirm(FILTER_MSGS.FILTER_VALIDATION.CONFIRM_EXCEL,"Warning",function(res){
     			if(res){    
     				var data = JSON.stringify(formObject);
     				var form = $("<form action='"+CONTEXT_PATH+"reports/exceluserrolerightsreport/UserRolesRights' method='post'>");
     				var input =  $('<input type="hidden" name="json"/>').val(data);
     				input.appendTo(form);
     				form.appendTo('body');
     				form.submit();
     			} 
     		});
		} else swal("Please select login name to export");
	
    };
	/* User role rights details Ends */
	
	/* User Role Report Start */ 
    //Init
	self.loadUserRolesReportDet = function(){
		self.fnLoadRptSourceTypes().then(function(response){
			if(GLOBAL_DATA.staffId != 0){
				self.reportdet.staffInd="Y";
			}
			$("#DD_BRANCH").focus();
			CommonService.getCurrentDate().then(function(response) {
				var currDate=response.date;			
				self.reportdet.toDate = currDate;			
				self.reportdet.fromDate = monthFirst(currDate);
			});
			self.gridAlertInd = false;
			ReportService.loadDlyTransBranch(self);
			ReportService.loadMainClassListRefer1(self);
		});	
		
		/*$http.post(CONTEXT_PATH+'reports/loadAllBranches').then(function(response) {
			self.loadBranchListOptions =  response.data[0];
		});
		*/
		var gridSettings = {
				enableRowHeaderSelection : true,
				enableSelectAll : true,
				multiSelect : true,
				enableColumnResizing : true,
				enableCellEdit : false,
				enableCellSelection: true,
				cellEditableCondition : false,
				enableFiltering: true,
				enableCellEditOnFocus : true,
				enableRowSelection : true,
				enableColumnReordering : false
			};
	//Grid
		var colsDefForRole = [{field : 'logInName', displayName : 'Login Name',enableColumnMenu : false},
		                      {field : 'loginId', visible : false},
							  {field : 'totalRecords', visible : false}];
	                         
		var roleEvent = {'rowselection':'fnGetSelectedRole'};
		GridServices.defineGrid(self,null, 'SettingsRoleGrid', gridSettings, colsDefForRole, null, null, roleEvent)
		/*if (GridServices.defineGrid(self,null, 'SettingsRoleGrid', gridSettings, colsDefForRole, null, null, roleEvent)){
			ReportService.getUserRoleGridDetails(self); 
			
		};*/
	};
	
	self.fnUserRolesReportDet = function(formObject){
		if (self.reportdet.branchId == undefined || self.reportdet.branchId == null || self.reportdet.branchId == '' || self.reportdet.branchId == 0) {
			swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_BRANCH,"reportdet.branchId");
			return false;
		} else {
			if (self.reportdet.branchId >0 ){
				ReportService.getUserRoleGridDetails(self);
			} else {
				swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_BRANCH,"reportdet.branchId");
				return false;
			} 
		}
		
	};
	// Excel
	self.fnExportExcelUserRoleRight= function(formObject){
		var selectedId = new Array();		
	    var gridData=self.gridApi.selection.getSelectedRows();
	    var gridIds ="";
	    	
	    for(var i=0;i<gridData.length;i++){
	    	if (gridIds.length == 0){
	    		gridIds = gridData[i].loginId;	
	    	} else {
	    		gridIds += ","+gridData[i].loginId;
	    	}
	    }
	    self.reportdet.loginNames = gridIds;
        if(gridData.length>0){
        	jConfirm(FILTER_MSGS.FILTER_VALIDATION.CONFIRM_EXCEL,"Warning",function(res){
     			if(res){    
     				var data = JSON.stringify(formObject);
     				var form = $("<form action='"+CONTEXT_PATH+"reports/exceluserrolereport/UserRoles' method='post'>");
     				var input =  $('<input type="hidden" name="json"/>').val(data);
     				input.appendTo(form);
     				form.appendTo('body');
     				form.submit();
     			} 
     		});
		} else swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_ROLE);
	     
    };
    								/* User Role Report End */
	/*Vehicle Market Valuation Enquiry Report Details */
	self.setVehMarketValuationEnquiryDet = function() {		
		self.fnLoadRptSourceTypes().then(function(response){
			if(GLOBAL_DATA.staffId != 0){
			self.reportdet.staffInd = "Y";
			}
			$("#DD_BRANCH").focus();
			CommonService.getCurrentDate().then(function(response) {
				var currDate=response.date;			
				self.reportdet.toDate = currDate;			
				self.reportdet.fromDate = monthFirst(currDate);
			});
			self.gridAlertInd = false;
		ReportService.loadDlyTransBranch(self);
			ReportService.loadMainClassListRefer1(self);
		});		
		/*if (GLOBAL_DATA.staffId != 0) 
			self.reportdet.staffInd = "Y";
		$("#DD_BRANCH_ID").focus();*/
		self.reportdet.gridAlertInd=false;
		//ReportService.loadDlyTransBranch(self);
		self.dateOnLoad();
		GridServices.defineGrid(self,null, 'reportVehMarketValuationEnqGrid',null,columnDefs.reportVehMarketValuationEnqDet,null, pagination, null);
	};						
	self.fnSearchVehMarketValuationEnquiry = function(){
		var status=true;
		if(self.reportdet.sourceTypeId == undefined || self.reportdet.sourceTypeId == null || self.reportdet.sourceTypeId == 0 || self.reportdet.sourceTypeId == ''){
			swal("Please Select Source Type","reportdet.sourceTypeId");
			status=false;	
		}
		else if (self.reportdet.branchId == 0 || self.reportdet.branchId == ''|| self.reportdet.branchId == undefined || self.reportdet.branchId == null)
			{	swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_BRANCH,"reportdet.branchId");
				status=false;	}
		else if (self.reportdet.accountCode == 0 || self.reportdet.accountCode == ''|| self.reportdet.accountCode == undefined || self.reportdet.accountCode == null)
			{	swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_ACCCODE,"reportdet.accountCode");
				status=false;	}
		else if (self.reportdet.fromDate == null || self.reportdet.fromDate == ''|| self.reportdet.fromDate == undefined)
			{	swal(FILTER_MSGS.FILTER_VALIDATION.VALID_FROMDT,"reportdet.fromDate");
				status=false;	}
		else if (self.reportdet.toDate == null || self.reportdet.toDate == ''|| self.reportdet.toDate == undefined)
			{	swal(FILTER_MSGS.FILTER_VALIDATION.VALID_TODT,"reportdet.toDate");
				status=false;	}
		if(status==true) ReportService.getVehMarketValuationEnquiryGridDetails(self);
		else GridServices.bindGrid(self,'reportdet','reportVehMarketValuationEnqGrid',null,"Y",'reports/reportsvehmketvaluationenq');
	};
	self.fnClearAccodeVehMarVal = function(){
		self.dateOnLoad();
		self.reportdet.accountCode="";
		self.subAccountCodeList="";
		self.reportdet.coverNoteNo="";
		self.reportdet.vehicleNo="";
		GridServices.bindGrid(self,null,'reportVehMarketValuationEnqGrid',null,null,null);
	};
	/*Grid Start*/
	columnDefs.reportVehMarketValuationEnqDet = [ 
	     {field : 'slNo',displayName : 'S.No.',enableColumnMenu : false,width:60,cellClass: 'text-center'},
	     {field : 'transactionDate',displayName : 'Transaction Date / Time',enableColumnMenu : false,width:200,cellClass: 'text-center'},
	     {field : 'branchCode',displayName : 'Branch Code',enableColumnMenu : false,width:120,cellClass: 'text-left'},
	     {field : 'accountCode',displayName : 'Intermediary Code',enableColumnMenu : false,width:200,cellClass: 'text-left'},
	     {field : 'agencyName',displayName : 'Intermediary Name',enableColumnMenu : false,width:200,cellClass: 'text-left'},
	     {field : 'referenceNo',displayName : 'Reference No.',enableColumnMenu : false,width:150,cellClass: 'text-left'},
	     {field : 'coverNoteNo',displayName : 'Cover Note No.',enableColumnMenu : false,width:150,cellClass: 'text-left'},
	     {field : 'cnStatus',displayName : 'Cover Note Status',enableColumnMenu : false,width:150,cellClass: 'text-left'},
	     {field : 'coverNoteType',displayName : 'Cover Note Type',enableColumnMenu : false,width:150,cellClass: 'text-left'},
	     {field : 'vehicleNo',displayName : 'Vehicle No.',enableColumnMenu : false,width:150,cellClass: 'text-left'},
	     {field : 'makeModel',displayName : 'Make / Model',enableColumnMenu : false,width:200,cellClass: 'text-left'},
	     {field : 'year',displayName : 'Year Make',enableColumnMenu : false,width:120,cellClass: 'text-left'},
	     {field : 'vehicleCapacity',displayName : 'Cubic Capacity',enableColumnMenu : false,width:120,cellClass: 'text-left'},
	     {field : 'grossPremium',displayName : 'Gross Premium',enableColumnMenu : false,width:150,cellFilter: 'number: 2',cellClass: 'text-right'},
	     {field : 'statusGrid',displayName : 'Endt. Indicator (Y/N)',enableColumnMenu : false,width:150,cellClass: 'text-left'},
	     {field : 'effectDate',displayName : 'Policy Eff. Date',enableColumnMenu : false,width:150,cellClass: 'text-center'},
	     {field : 'marketValuation',displayName : 'Vehicle Market Valuation',enableColumnMenu : false,width:170,cellFilter: 'number: 2',cellClass: 'text-right'},
	     {field : 'vehSumInsured',displayName : 'Vehicle Sum Insured',enableColumnMenu : false,width:150,cellFilter: 'number: 2',cellClass: 'text-right'},
	     {field : 'remarks',displayName : 'Transaction Response Code & Desc',enableColumnMenu : false,width:250,cellClass: 'text-left'}];	
			
/* Vehicle Market Valuation Enquiry Report Details End*/
	
/*Motor - User Transaction Listing Report Details */
	self.setMotorUserTransactionListingDet = function() {	
		$("#DD_BRANCH_ID").focus();
		self.reportdet.gridAlertInd=false;
		self.fnLoadRptSourceTypes();
		if(self.staffId == 0){
			self.reportdet.sourceTypeId = 1;
			ReportService.loadDlyTransBranch(self);
		}
		ReportService.loadcvgType(self);
		ReportService.loadvehicleType(self);
		self.dateOnLoad();
		if (GLOBAL_DATA.staffId != 0) 
			self.reportdet.staffInd = "Y";
		GridServices.defineGrid(self,null, 'reportMUserTransListingGrid',null,columnDefs.reportMUserTransListingDet,null, pagination, null);
		//To call the grid pagination event explicitly.
		self.fnChangeGridPagination = "fnChangeUTLGridPage";
	};		
	self.fnChangeUTLGridPage = function(){		
		var data = self.reportMUserTransListingGrid.data;
		var totalPremium = 0;
		self.reportdet.grandTotalPremium = 0;
		if(data != null && data.length > 0 ){
			for(var i=0;i<data.length;i++){
				totalPremium += Number(data[i].totalPremium);
			}
		}
		self.reportdet.grandTotalPremium = totalPremium; 
	};	
	self.fnSearchMotorUserTransactionListing = function(){	
		var status=true;
		self.reportMUserTransListingGrid.data=[];
		self.reportdet.vehicletypeDesc=$("#DD_VEH_TYPE_ID").val().length != 0 ? $("#DD_VEH_TYPE_ID option:selected").text() : null;
		self.reportdet.cvgtypeDesc=$("#DD_CVG_TYPE_ID").val().length != 0 ? $("#DD_CVG_TYPE_ID option:selected").text() : null;
		self.reportdet.branchName=$("#DD_BRANCH_ID").val().length != 0 ? $("#DD_BRANCH_ID option:selected").text() : null;
		if(self.reportdet.sourceTypeId == undefined || self.reportdet.sourceTypeId == null || self.reportdet.sourceTypeId == 0 || self.reportdet.sourceTypeId == ''){
			swal("Please Select Source Type","reportdet.sourceTypeId");
			status=false;	
		}
		else if (self.reportdet.branchId == 0 || self.reportdet.branchId == ''|| self.reportdet.branchId == undefined || self.reportdet.branchId == null)
			{	swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_BRANCH,"reportdet.branchId");
				status=false;	}
		else if (self.reportdet.accountCode == 0 || self.reportdet.accountCode == ''|| self.reportdet.accountCode == undefined || self.reportdet.accountCode == null)
			{	swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_ACCCODE,"reportdet.accountCode");
				status=false;	}
		else if (self.reportdet.fromDate == null || self.reportdet.fromDate == ''|| self.reportdet.fromDate == undefined)
			{	swal(FILTER_MSGS.FILTER_VALIDATION.VALID_FROMDT,"reportdet.fromDate");
				status=false;	}
		else if (self.reportdet.toDate == null || self.reportdet.toDate == ''|| self.reportdet.toDate == undefined)
			{	swal(FILTER_MSGS.FILTER_VALIDATION.VALID_TODT,"reportdet.toDate");
				status=false;	}
		if(status==true)ReportService.getMotorUserTransactionListingGridDetails(self);
		else {self.reportdet.grandTotalPremium='';
			  self.reportdet.totalRecords='';
			  GridServices.bindGrid(self,'reportdet','reportMUserTransListingGrid',null,"Y",'reports/reportsmusertransactionlisting');}
	};		
	self.fnClearAccodeMUserTrans = function(){
		self.dateOnLoad();
		self.reportdet.accountCode="";
		self.subAccountCodeList="";
		self.reportdet.cvgtypeId="";
		self.reportdet.vehicletypeId="";
		self.reportdet.otsMainClassId="";
		self.reportdet.otsClassId="";
		self.reportdet.agentName="";
		self.reportdet.branchName="";
		self.reportdet.grandTotalPremium="";
		self.reportdet.checkPrinted="";
		self.reportdet.checkSaved="";
		self.reportdet.checkSubmitted="";
		self.reportdet.checkCancelPending="";
		self.reportdet.checkSavedPending="";
		self.reportdet.checkCancelled="";
		self.reportdet.checkCancelReplace="";
		self.reportdet.checkDisapproved="";
		self.reportdet.checkSubmissionPending="";
		GridServices.bindGrid(self,null,'reportMUserTransListingGrid',null,null,null);
	};		
	/*Grid Start*/
	columnDefs.reportMUserTransListingDet = [
        {field : 'slNo',displayName : 'S.No.',enableColumnMenu : false,width:70,cellClass: 'text-center'},
        {field : 'issueDate',displayName : 'Date',enableColumnMenu : false,width:120,cellClass: 'text-center'},
        {field : 'supervisor',displayName : 'Supervisor',enableColumnMenu : false,width:200,cellClass: 'text-left'},
        {field : 'customerName',displayName : 'Customer Name',enableColumnMenu : false,width:200,cellClass: 'text-left'},
        {field : 'coverNoteNo',displayName : 'Cover Note / Ref. No.',enableColumnMenu : false,width:165,cellClass: 'text-left'},
        {field : 'coverDesc',displayName : 'Coverage Type',enableColumnMenu : false,width:200,cellClass: 'text-left'},
        {field : 'cnStatus',displayName : 'Cover Note Status',enableColumnMenu : false,width:150,cellClass: 'text-left'},
        {field : 'otsClassDesc',displayName : 'Vehicle Type',enableColumnMenu : false,width:200,cellClass: 'text-left'},
        {field : 'vehicleNo',displayName : 'Vehicle No.',enableColumnMenu : false,width:150,cellClass: 'text-left'},
        {field : 'totalPremium',displayName : 'Total Premium',enableColumnMenu : false,width:150,cellFilter: 'number: 2',cellClass: 'text-right'},
        {field : 'gstPremium',displayName : 'GST Premium',enableColumnMenu : false,width:150,cellClass: 'text-right' ,cellFilter: 'number: 2'},
        {field : 'commission',displayName : 'Commission',enableColumnMenu : false,width:150,cellClass: 'text-right',cellFilter: 'number: 2'},
        {field : 'gstonCommission',displayName : 'GST on Commission',enableColumnMenu : false,width:160,cellClass: 'text-right' ,cellFilter: 'number: 2'},
        {field : 'gstTransferAmt',displayName : 'Transfer Fee',enableColumnMenu : false,width:160,cellClass: 'text-right' ,cellFilter: 'number: 2'},
        {field : 'cartPremium',displayName : 'CART Premium',enableColumnMenu : false,width:150,cellClass: 'text-right' ,cellFilter: 'number: 2'}];				
/* Motor - User Transaction Listing Report Details End*/
	
/*Non Motor - User Transaction Listing Report Details */
	self.setNonMotorUserTransactionListingDet = function() {	
		$("#DD_BRANCH_ID").focus();
		self.reportdet.gridAlertInd=false;
		self.fnLoadRptSourceTypes();
		if(self.staffId == 0){
			self.reportdet.sourceTypeId = 1;
			ReportService.loadDlyTransBranch(self);
		}
		ReportService.loadMainClassListNMUserTrans(self);	
		self.dateOnLoad();
		if (GLOBAL_DATA.staffId != 0) 
			self.reportdet.staffInd = "Y";
		GridServices.defineGrid(self,null, 'reportNMUserTransListingGrid',null,columnDefs.reportNMUserTransListingDet,null, pagination, null);
		self.fnChangeGridPagination = "fnChangeNMUTLGridPage";
	};		
	self.fnChangeNMUTLGridPage = function(){		
		var data = self.reportNMUserTransListingGrid.data;
		var totalPremium = 0;
		self.reportdet.grandTotalPremium = 0;
		if(data != null && data.length > 0 ){
			for(var i=0;i<data.length;i++){
				totalPremium += Number(data[i].totalPremium);
			}
		}
		self.reportdet.grandTotalPremium = totalPremium; 
	};
	self.fnSearchNonMotorUserTransactionListing = function(){
		var status=true;
		self.reportdet.vehicletypeDesc=$("#DD_SUB_CLASS_ID").val().length != 0 ? $("#DD_SUB_CLASS_ID option:selected").text() : null;
		self.reportdet.cvgtypeDesc=$("#DD_MAIN_CLASS_ID").val().length != 0 ? $("#DD_MAIN_CLASS_ID option:selected").text() : null;
		self.reportdet.branchName=$("#DD_BRANCH_ID").val().length != 0 ? $("#DD_BRANCH_ID option:selected").text() : null;
		if(self.reportdet.sourceTypeId == undefined || self.reportdet.sourceTypeId == null || self.reportdet.sourceTypeId == 0 || self.reportdet.sourceTypeId == ''){
			swal("Please Select Source Type","reportdet.sourceTypeId");
			status=false;	
		}
		else if (self.reportdet.branchId == 0 || self.reportdet.branchId == ''|| self.reportdet.branchId == undefined || self.reportdet.branchId == null)
			{	swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_BRANCH,"reportdet.branchId");
				status=false;	}
		else if (self.reportdet.accountCode == 0 || self.reportdet.accountCode == ''|| self.reportdet.accountCode == undefined || self.reportdet.accountCode == null)
			{	swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_ACCCODE,"reportdet.accountCode");
				status=false;	}
		else if (self.reportdet.fromDate == null || self.reportdet.fromDate == ''|| self.reportdet.fromDate == undefined)
			{	swal(FILTER_MSGS.FILTER_VALIDATION.VALID_FROMDT,"reportdet.fromDate");
				status=false;	}
		else if (self.reportdet.toDate == null || self.reportdet.toDate == ''|| self.reportdet.toDate == undefined)
			{	swal(FILTER_MSGS.FILTER_VALIDATION.VALID_TODT,"reportdet.toDate");
				status=false;	}
		if(status==true) ReportService.getNonMotorUserTransactionListingGridDetails(self);
		else { self.reportdet.grandTotalPremium='';
			   self.reportdet.totalRecords='';
			   GridServices.bindGrid(self,'reportdet','reportNMUserTransListingGrid',null,"Y",'reports/reportsnmusertransactionlisting');
			 }
	};			
	self.fnClearAccodeNMUserTrans = function(){
		self.dateOnLoad();
		self.reportdet.otsMainClassId="";
		self.reportdet.otsClassId="";
		self.reportdet.accountCode="";
		self.subAccountCodeList="";
		self.reportdet.vehicletypeDesc="";
		self.reportdet.cvgtypeDesc="";
		self.reportdet.agentName="";
		self.reportdet.branchName="";
		self.reportdet.grandTotalPremium="";
		self.reportdet.checkPrinted="";
		self.reportdet.checkSaved="";
		self.reportdet.checkSubmitted="";
		self.reportdet.checkCancelPending="";
		self.reportdet.checkSavedPending="";
		self.reportdet.checkCancelled="";
		self.reportdet.checkCancelReplace="";	
		self.reportdet.checkSubmissionPending="";
		GridServices.bindGrid(self,null,'reportNMUserTransListingGrid',null,null,null);
	};
	/*Grid Start*/
	columnDefs.reportNMUserTransListingDet = [ 
	     {field : 'slNo',displayName : 'S.No.',enableColumnMenu : false,width:60,cellClass: 'text-center'},
	     {field : 'issueDate',displayName : 'Date',enableColumnMenu : false,width:120,cellClass: 'text-center'},
	     {field : 'supervisor',displayName : 'Supervisor',enableColumnMenu : false,width:150,cellClass: 'text-left'},
	     {field : 'customerName',displayName : 'Customer Name',enableColumnMenu : false,width:150,cellClass: 'text-left'},
	     {field : 'coverNoteNo',displayName : 'Cover Note / Ref. No.',enableColumnMenu : false,width:150,cellClass: 'text-left'},
	     {field : 'cnStatus',displayName : 'Cover Note Status',enableColumnMenu : false,width:150,cellClass: 'text-left'},
	     {field : 'otsMainClassDesc',displayName : 'Class',enableColumnMenu : false,width:150,cellClass: 'text-left'},
	     {field : 'otsClassDesc',displayName : 'Sub Class',enableColumnMenu : false,width:250,cellClass: 'text-left'},
	     {field : 'totalPremium',displayName : 'Total Premium',enableColumnMenu : false,width:150,cellClass: 'text-right',cellFilter: 'number: 2'},
	     {field : 'gstPremium',displayName : 'GST Premium',enableColumnMenu : false,width:150,cellClass: 'text-right',cellFilter: 'number: 2'},
	     {field : 'commission',displayName : 'Commission',enableColumnMenu : false,width:150,cellClass: 'text-right',cellFilter: 'number: 2'},
	     {field : 'gstonCommission',displayName : 'GST on Commission',enableColumnMenu : false,width:150,cellClass: 'text-right',cellFilter: 'number: 2'}
	    /* {field : 'cartPremium',displayName : 'CART Premium',enableColumnMenu : false,width:150,cellClass: 'text-right',cellFilter: 'number: 2'}*/];			
/*Non Motor - User Transaction Listing Report Details End*/

/*Receipt after agent declared payment Report Details */
	self.setReceiptAgentDeclaredPaymentDet = function() {		
		if (GLOBAL_DATA.staffId != 0) 
			self.reportdet.staffInd = "Y";
		$("#DD_BRANCH_ID").focus();
		self.reportdet.gridAlertInd=false;

		self.fnLoadRptSourceTypes();
		if(self.staffId == 0){
			self.reportdet.sourceTypeId = 1;
			ReportService.loadDlyTransBranch(self);
		}
		self.dateOnLoad();
		
		var gridSettings = {
				enableRowHeaderSelection : true,
				enableSelectAll : true,
				multiSelect : true,
				enableColumnResizing : false,
				enableCellEdit : false,
				enableCellSelection: false,
				cellEditableCondition : false,
				enableCellEditOnFocus : false,
				enableRowSelection : true,
				enableColumnReordering : false
			};
		
		GridServices.defineGrid(self,null, 'reportReceiptAgentPaymentGrid',gridSettings,columnDefs.reportReceiptAgentDecPay,null, pagination, null);
	};	
	
	self.fnCheckRecAfterDecPmt = function(frmModel, format){	
		
		//var gridData=  self.reportReceiptAgentPaymentGrid.selection.getSelectedRows();
		var gridData=  self.gridApi.selection.getSelectedRows();
		frmModel.hdnSubmsnHdrId ="";
		var subHdrId="";
		for(var i=0;i<gridData.length;i++) {
	    	if (subHdrId.length == 0 ) {
	    		subHdrId = gridData[i].submissionHeaderId;
	    	} else {
	    		subHdrId = subHdrId +","+gridData[i].submissionHeaderId;
	    	}
		}		
		frmModel.hdnSubmsnHdrId = subHdrId;
		if ( (format == "PDF")  && (frmModel.hdnSubmsnHdrId == undefined || frmModel.hdnSubmsnHdrId == null || frmModel.hdnSubmsnHdrId.length == 0) ) {
			swal('Please Select a record to Print');
			return false;			
		} else {	
			if (format == "PDF") {
				self.fnExportPdf(frmModel,'pdfReceiptAgentDeclaredPayment');	
			} else {
				self.fnExportExcel(frmModel,'receiptafteragentpayment','Receipt after agent declared payment');	
			}			
			return true;
		}
	};
	
	self.fnSearchReceiptAgentDeclaredPayment = function(){		
		var status=true;
		if(self.reportdet.sourceTypeId == undefined || self.reportdet.sourceTypeId == null || self.reportdet.sourceTypeId == 0 || self.reportdet.sourceTypeId == ''){
			swal("Please Select Source Type","reportdet.sourceTypeId");
			status=false; 		}
		else if (self.reportdet.fromDate == null || self.reportdet.fromDate == ''|| self.reportdet.fromDate == undefined)
			{	swal(FILTER_MSGS.FILTER_VALIDATION.VALID_FROMDT,"reportdet.fromDate");
				status=false;	}
		else if (self.reportdet.toDate == null || self.reportdet.toDate == ''|| self.reportdet.toDate == undefined)
			{	swal(FILTER_MSGS.FILTER_VALIDATION.VALID_TODT,"reportdet.toDate");	
				status=false;	}		
		if(status==true) {self.reportdet.hdnSubmsnHdrId =""; ReportService.getAgentDecPaymentGridDetails(self); }
		else { GridServices.bindGrid(self,'reportdet','reportReceiptAgentPaymentGrid',null,"Y",'reports/rptsreceiptagentdecpayment'); }
	};
	self.fnClearAccodeAgentDecPayment = function(){
		self.dateOnLoad();
		self.reportdet.agentId="";
		self.reportdet.accountCode="";
		self.reportdet.submissionNo="";
		GridServices.bindGrid(self,null,'reportReceiptAgentPaymentGrid',null,null,null);
	};			
	columnDefs.reportReceiptAgentDecPay = [ 
 	     {field : 'slNo',displayName : 'S.No.',enableColumnMenu : false,width:'50',cellClass: 'text-center'},
 	    // {field : 'coverNoteNo',displayName : 'Cover Note No.',enableColumnMenu : false,cellClass: 'text-left'},
 	     {field : 'receiptNo',displayName : 'Receipt No.',enableColumnMenu : false,width:'150',cellClass: 'text-left'},
 	     {field : 'submissionNo',displayName : 'Submission No.',enableColumnMenu : false,width:'150',cellClass: 'text-left'},
 	     /*{field : 'coverNoteNo',displayName : 'Cover Note No.',enableColumnMenu : false,width:'15%',cellClass: 'text-left'},*/
 	     /*{field : 'clientName',displayName : 'Insured Name',enableColumnMenu : false,cellClass: 'text-left'},*/
 	     {field : 'branchName',displayName : 'Branch Name',enableColumnMenu : false,width:'150',cellClass: 'text-left'},
 	     {field : 'agentCode',displayName : 'Intermediary Code',enableColumnMenu : false,width:'250',cellClass: 'text-left'},
   		 {field : 'agencyName',displayName : 'Intermediary Name',enableColumnMenu : false,width:'250',cellClass: 'text-left'},
   		 {field : 'paymentMode',displayName : 'Payment Mode',enableColumnMenu : false,width:'150',cellClass: 'text-left'},
   		 {field : 'bankApprovalCode',displayName : 'Bank Approval Code',enableColumnMenu : false,width:'150',cellClass: 'text-left'},
   		 {field : 'submissionDate',displayName : 'Submitted On',enableColumnMenu : false,width:'150',cellClass: 'text-left'},   		
 	     /*{field : 'totalAmount',displayName : 'Total Amount Received',enableColumnMenu : false,width:'15%',cellClass: 'text-right',cellFilter: 'number: 2'},*/
 	     {field : 'totalPaymentAmt',displayName : 'Payment Total Amount (RM)',enableColumnMenu : false,width:'200',cellClass: 'text-right',cellFilter: 'number: 2'},
 	     {field : 'totalPayableAmt',displayName : 'Payable Total Amount (RM)',enableColumnMenu : false,width:'200',cellClass: 'text-right',cellFilter: 'number: 2'},
 	     {field : 'submissionHeaderId',visible:false}];			
/*Receipt after agent declared payment Report Details End*/	
	
/*Receipt from CRC counter for client Report Details */
	self.setReceiptCRCCounterClientDet = function() {		
		if (GLOBAL_DATA.staffId != 0) 
			self.reportdet.staffInd = "Y";		
		self.reportdet.id = 'RECEIPT_CRC_COUNTER_FOR_CLIENT_REPORT';
		$("#DD_STAFF_ID").focus();
		ReportService.loadStaffList(self);
		self.dateOnLoad();		
		GridServices.defineGrid(self,null, 'reportReceiptCRCCounterClientGrid',null,columnDefs.reportCrcCounter,null, pagination, null);
	};	
	self.fnShowMotorSearchPopup = function(formObject, searchPageType) {
		localStorageService.set("searchPageType", searchPageType);
		localStorageService.set("searchScopeObj", formObject);
		$http.get(CONTEXT_PATH+'nsurebase/common/search/motorsearch').success(function(data) {
			new modal().open(data);
		});
	};
	self.fnShowAdminSearchPopup = function(formObject,searchPageType){
		self.reportdet.id = 'RECEIPT_CRC_COUNTER_FOR_CLIENT_REPORT';
		var status = true;	
		if(status){			
	    	localStorageService.set("searchPageType",searchPageType);
	    	localStorageService.set("searchScopeObj",formObject.id);     
	        $http.get(CONTEXT_PATH+'nsurebase/common/search/adminsearch').success(function(data) {
	              new modal().open(data);
	        });
		}
	};
	
	self.fnShowlogAccountCodeSearch = function(formObject, searchPageType) {		
		
		if (formObject.branchId == null || formObject.branchId == undefined || formObject.branchId == 0) {
			swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_BRANCH);
		} else {
			localStorageService.set("searchPageType", searchPageType);
			localStorageService.set("searchScopeObj", formObject);
			if (formObject.id != undefined && formObject.id != "") {
	    		localStorageService.set("searchScopeObjId",formObject.id);
	    	}
			$http.get(CONTEXT_PATH+'nsurebase/common/search/logsearch').success(function(data) {
				new modal().open(data);
			});		
		}
	};
	
	self.fnSearchReceiptCRCCounterClientDet = function(){	
		var status=true;
		if (self.reportdet.staffId == 0 || self.reportdet.staffId == ''|| self.reportdet.staffId == undefined || self.reportdet.staffId == null)
			{	swal("Please select Staff Code","reportdet.staffId");
				status=false;	}
		else if (self.reportdet.fromDate == null || self.reportdet.fromDate == ''|| self.reportdet.fromDate == undefined)
			{	swal(FILTER_MSGS.FILTER_VALIDATION.VALID_FROMDT,"reportdet.fromDate");
				status=false;	}
		else if (self.reportdet.toDate == null || self.reportdet.toDate == ''|| self.reportdet.toDate == undefined)
			{	swal(FILTER_MSGS.FILTER_VALIDATION.VALID_TODT,"reportdet.toDate");
				status=false;	}
		if(status==true) ReportService.getReceiptCRCCounterClient(self);
		else GridServices.bindGrid(self,'reportdet','reportReceiptCRCCounterClientGrid',null,"Y",'reports/rptsreceiptcrccounterclient');
	};		
	columnDefs.reportCrcCounter = [ 
	     {field : 'slNo',displayName : 'S.No.',enableColumnMenu : false,width:80,cellClass: 'text-center'},
	    // {field : 'coverNoteNo',displayName : 'Cover Note No.',enableColumnMenu : false,cellClass: 'text-left'},
	     {field : 'agentCode',displayName : 'Intermediary Code',enableColumnMenu : false,width:200,cellClass: 'text-left'},
	     {field : 'agencyName',displayName : 'Intermediary Name',enableColumnMenu : false,width:250,cellClass: 'text-left'},
	     {field : 'receiptNo',displayName : 'Receipt No.',enableColumnMenu : false,width:100,cellClass: 'text-left'},
	     {field : 'submissionNo',displayName : 'Submission No.',enableColumnMenu : false,width:130,cellClass: 'text-left'},
	     {field : 'bankApprovalCode',displayName : 'Bank Approval Code',enableColumnMenu : false,width:130,cellClass: 'text-left'},
	     {field : 'clientName',displayName : 'Insured Name',enableColumnMenu : false,width:200,cellClass: 'text-left'},
	     /*{field : 'totalAmount',displayName : 'Total Amount Received',enableColumnMenu : false,width:200,cellClass: 'text-right',cellFilter: 'number: 2'},*/
	     {field : 'totalPaymentAmt',displayName : 'Payment Total Amount',enableColumnMenu : false,width:200,cellClass: 'text-right',cellFilter: 'number: 2'},
	     {field : 'totPayableAmt',displayName : 'Payable Total Amount',enableColumnMenu : false,width:200,cellClass: 'text-right',cellFilter: 'number: 2'}];
/*Receipt from CRC counter for client Report Details End*/	
/* E-Cover Note Issued Report Details Start*/
	self.seteCoverNoteIssuedReportDet = function() {
		if(GLOBAL_DATA.staffId != 0){
			self.reportdet.staffInd="Y";
		}
		 $("#DD_BRANCHID").focus();
		CommonService.getCurrentDate().then(function(response) {
			var currDate=response.date;			
			self.reportdet.toDate = currDate;			
			self.reportdet.fromDate = monthFirst(currDate);
		});			
		self.gridAlertInd=false;
		self.reportdet.jpjStatusId=3;
		self.fnLoadRptSourceTypes();
		if(self.staffId == 0){
			self.reportdet.sourceTypeId = 1;
			ReportService.loadDlyTransBranch(self);
		}
		ReportService.loadMainClassList(self);	
		FilterSearchService.loadJPJStatusList(self);
		FilterSearchService.loadPaymentStatuslist1(self);
		GridServices.defineGrid(self,null, 'eCNIssuedReportGrid',null,columnDefs.eCNIssuedReportDet,null, pagination, null);
	};	
	
	self.fnClearecndata=function(){
		
		self.reportdet.otsMainClassId="";
		self.reportdet.otsClassId="";
		CommonService.getCurrentDate().then(function(response) {
			var currDate=response.date;			
			self.reportdet.toDate = currDate;			
			self.reportdet.fromDate = monthFirst(currDate);
		});	
		self.reportdet.paymentStatusId="";
	}
	
	//load sub class details
	self.fnSetSelectedMainClass2 = function(formObject){

		if(formObject.otsMainClassId != 0 && formObject.otsMainClassId !='' && formObject.otsMainClassId !=undefined ){			
			ReportService.loadClassByMainClassRefer2(self);
		}
		else
			{
			self.classCodeOption="";
			}
	};
	
	
	

self.fnGetClassGroup = function(frmModel) {	
	
	if (self.reportdet.otsMainClassId != undefined && self.reportdet.otsMainClassId != null && self.reportdet.otsMainClassId==4 ) {
		$http.post(CONTEXT_PATH+'reports/loadClassGrpByMain',self.reportdet.otsMainClassId).then(function(response) {
			self.loadClassGroupOptions = response.data;		
		});
	}
	else
	{
		self.loadClassGroupOptions =0;	
	}
};




	self.fnSearchECNIssuedReport = function(){
		if(self.eCNIssuedReportGrid.data!=undefined)
	    	GridServices.bindGrid(self,'reportdet','eCNIssuedReportGrid',null,pagination,null);	
		if(self.reportdet.subAgentId == "")
			self.reportdet.subAgentId=0;
		if(self.reportdet.sourceTypeId == undefined || self.reportdet.sourceTypeId == null || self.reportdet.sourceTypeId == 0 || self.reportdet.sourceTypeId == ''){
			swal("Please Select Source Type","reportdet.sourceTypeId");
		}
		else if(self.reportdet.branchId == 0 || self.reportdet.branchId == '' || self.reportdet.branchId == undefined || self.reportdet.branchId == null)
			{
			swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_BRANCH,"reportdet.branchId");}
		else if(self.reportdet.accountCode == 0 || self.reportdet.accountCode == '' || self.reportdet.accountCode == undefined || self.reportdet.accountCode == null)
			{
			swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_ACCCODE,"reportdet.accountCode");	}
		 else if (self.reportdet.fromDate == null || self.reportdet.fromDate == '' || self.reportdet.fromDate == undefined){
			 swal(FILTER_MSGS.FILTER_VALIDATION.VALID_FROMDT,"reportdet.fromDate");
		 }			 	
		 else if (self.reportdet.toDate == null || self.reportdet.toDate == '' || self.reportdet.toDate == undefined){
			 swal(FILTER_MSGS.FILTER_VALIDATION.VALID_TODT,"reportdet.toDate");
		 }				
		 else
			 ReportService.geteCNIssuedGridDetails(self);
	};	
	
	// From fnECNGetToDate ng-change
	self.fnECNGetToDate = function(formObject){
		CommonService.getCurrentDate().then(function(response) {
			var currDate=response.date;			
			var maxDate = fnDateManipulation(formObject.fromDate,30,"+", "D");			
			if(stringToDate(maxDate) > stringToDate(currDate))
				self.reportdet.toDate = currDate;
			else
				self.reportdet.toDate = maxDate;		
		});	
	};
	// To check from date ng-blur
	self.fnOnChangeECNFromDate = function(){	
		if (self.reportdet.fromDate != undefined && self.reportdet.fromDate.length > 0) {	
			if(isValidDate(self.reportdet.fromDate)){							
				CommonService.getCurrentDate().then(function(response) {
					if (self.reportdet.fromDate instanceof Date){
						fromDate = dateToString(self.reportdet.fromDate);
					}else{
						fromDate = self.reportdet.fromDate;
					}
					if(isValidDate(fromDate)){
						if (stringToDate(fromDate) > stringToDate(response.date)) {
							self.reportdet.fromDate = '';
							self.reportdet.toDate = '';
							swal(FILTER_MSGS.FILTER_VALIDATION.EQUAL_LESS_SYSDATE,"reportdet.fromDate");
							}
					}else{
						$("#DDT_ECN_ISSUED_FROM_DATE").focus();
						self.reportdet.fromDate = '';	
						self.reportdet.toDate='';
					}
				});		
			}
			else{				
				self.reportdet.fromDate = '';
				$("#DDT_ECN_ISSUED_FROM_DATE").focus();	
			}
		}			
		};
	//To date validation ng-blur
	self.fnOnChangeECNToDate = function(){
		if(isValidDate(self.reportdet.toDate)){
			CommonService.getCurrentDate().then(function(response) {
				var currDate=response.date;			
				var maxDate = fnDateManipulation(self.reportdet.fromDate, 30,"+", "D");				
				 if(stringToDate(currDate) < stringToDate(self.reportdet.toDate)){				
							self.reportdet.toDate = '';
							swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_SYS_TO_DATE,"reportdet.toDate");
						}
				else if (self.reportdet.fromDate != null && self.reportdet.fromDate.length > 0 &&(isValidDate(self.reportdet.toDate))) {
					if (stringToDate(self.reportdet.fromDate) > stringToDate(self.reportdet.toDate)) {
						self.reportdet.toDate = '';
						swal(FILTER_MSGS.FILTER_VALIDATION.EQUAL_GREATER_FROMDT,"reportdet.toDate");
					}
					else if(stringToDate(maxDate) < stringToDate(self.reportdet.toDate)){
						self.reportdet.toDate = '';
						swal(FILTER_MSGS.FILTER_VALIDATION.DATE_THIRTY_DIFF,"reportdet.toDate");
					}		
				}	
		});
		}	
		else{
			self.reportdet.toDate = '';
			$("#DDT_ECN_ISSUED_TO_DATE").focus();	
		}	
	};
	
	// Export Excel
	self.fnExportExcelECNIssuedReport=function(){
		 jConfirm(FILTER_MSGS.FILTER_VALIDATION.CONFIRM_EXCEL,"Warning",function(res){
				if(res){    
			 if(self.eCNIssuedReportGrid.data.length > 0){
				 document.getElementById('EXCEL_ECN').click();    				
			 }
			 else
				 swal(FILTER_MSGS.FILTER_VALIDATION.NO_DATA_TOEXPORT);
		 	}	 });
	};
	
	/*Grid Start*/
	
	columnDefs.voidPaymentReport = [{
		field : 'hdnSubmsnHdrId',	displayName : 'hdnSubmsnHdrId', 	enableColumnMenu: false,visible : false},{
		field : 'slNo', 			displayName : 'S.No.',				cellClass: 'text-center',enableColumnMenu : false,width:70},{
		field : 'branchName',		displayName : 'Branch Name'	,		cellClass: 'text-left',	 enableColumnMenu : false,width:160},{
		field : 'accountCode',		displayName : 'Intermediary Code'	,		cellClass: 'text-left',	 enableColumnMenu : false,width:200},{
		field : 'agentName',		displayName : 'Intermediary Name'	,		cellClass: 'text-left',	 enableColumnMenu : false,width:200},{
		field : 'eReferenceNo',		displayName : 'E Reference No.'	,	cellClass: 'text-left',	 enableColumnMenu : false,width:160},{
		field : 'submissionDate',   displayName : 'Submission Date',	cellClass: 'text-left',	 enableColumnMenu : false,width:140},{
		field : 'paymentMode',		displayName : 'Payment Mode',		cellClass: 'text-left',	 enableColumnMenu : false,width:140},{
		field : 'paymentReferenceNo',displayName : 'Payment Reference No.'	,cellClass: 'text-left',enableColumnMenu : false,width:160},{
		field : 'voidDate',			displayName : 'Void Date',			cellClass: 'text-left',	 enableColumnMenu : false,width:140},{
		field : 'remarks',			displayName : 'Remarks',				cellClass: 'text-left',	 enableColumnMenu : false,width:500}

		];
	columnDefs.submissiontReport = [{
		field : 'newIcNo',			displayName : 'New IC No.'	,		cellClass: 'text-left',	 enableColumnMenu : false,width:160},{
		field : 'clientName',		displayName : 'Client Name'	,		cellClass: 'text-left',	 enableColumnMenu : false,width:140},{
		field : 'creationFromDate',	displayName : 'Creation Date'	,	cellClass: 'text-left',	 enableColumnMenu : false,width:140},{
		field : 'coverNoteNo',		displayName : 'Cover Note No.'	,	cellClass: 'text-left',	 enableColumnMenu : false,width:160},{
		field : 'originalCnNo',		displayName : 'Original CN No.'	,	cellClass: 'text-left',	 enableColumnMenu : false,width:160},{
		field : 'vehicleNo',   		displayName : 'Vehicle No.',		cellClass: 'text-left',	 enableColumnMenu : false,width:130},{
		field : 'sumInsured',		displayName : 'Sum Insured',		cellClass: 'text-left',	 enableColumnMenu : false,width:140,cellFilter: 'number: 2'},{
		field : 'basicPremium',		displayName : 'Basic Premium',		cellClass: 'text-left',	 enableColumnMenu : false,width:130,cellFilter: 'number: 2'},{
		field : 'totalPayable',		displayName : 'Total Payable',		cellClass: 'text-left',	 enableColumnMenu : false,width:130,cellFilter: 'number: 2'},{
		field : 'cnIndication', cellClass: 'text-left',	 enableColumnMenu : false,visible : false}
		];
	columnDefs.eCNIssuedReportDet = [ {
		field : 'slNo', 			displayName : 'S.No.',				cellClass: 'text-center',enableColumnMenu : false,width:70},{
		field : 'issueDate',		displayName : 'Issued On',			cellClass: 'text-left',	 enableColumnMenu : false,width:120},{
		field : 'branchName',		displayName : 'Branch Name'	,		cellClass: 'text-left',	 enableColumnMenu : false,width:120},{
		field : 'intermediaryName',	displayName : 'Intermediary Name',	cellClass: 'text-left',  enableColumnMenu : false,width:250},{
		field : 'intermediaryCode',	displayName : 'Intermediary Code',	cellClass: 'text-left',  enableColumnMenu : false,width:250},{
		field : 'insuredName',		displayName : 'Insured Name',	    cellClass: 'text-left',  enableColumnMenu : false,width:250},{
		field : 'newOldICNo',		displayName : 'New IC / Old IC NO.',cellClass: 'text-left',	 enableColumnMenu : false,width:100},{
		field : 'coverNoteNo',		displayName : 'Cover Note No.',		cellClass: 'text-left',	 enableColumnMenu : false,width:130},{
		field : 'referenceNo',		displayName : 'CN Reference No.',	cellClass: 'text-left',	 enableColumnMenu : false,width:120},{
		field : 'vehicleNo',		displayName : 'Vehicle No.',		cellClass: 'text-left',	 enableColumnMenu : false,width:100},{
		field : 'policyNo',			displayName : 'Policy No.',			cellClass: 'text-left',  enableColumnMenu : false,width:150},{
		field : 'originalCoverNoteNo',displayName : 'Original Cover Note No.',		cellClass: 'text-left',	 enableColumnMenu : false,width:250},{
		field : 'renewalCNNo',		displayName : 'Renewal No.',		cellClass: 'text-left',	 enableColumnMenu : false,width:130},{
		field : 'coverNoteType',	displayName : 'Cover Note Type',	cellClass: 'text-left',	 enableColumnMenu : false,width:150},{
		field : 'jpjStatus',		displayName : 'JPJ Status',			cellClass: 'text-left',  enableColumnMenu : false,width:130},{
		field : 'submitJpjOn',		displayName : 'Submitted JPJ On',	cellClass: 'text-left',  enableColumnMenu : false,width:150},{
		field : 'mainClassDesc',	displayName : 'Main Class'	,		cellClass: 'text-left',	 enableColumnMenu : false,width:120},{
		field : 'otsClassDesc',		displayName : 'Sub Class '	,		cellClass: 'text-left',	 enableColumnMenu : false,width:180},{
		field : 'effectDate',		displayName : 'Policy From Date',	cellClass: 'text-left',	 enableColumnMenu : false,width:180},{
		field : 'expiryDate',		displayName : 'Policy To Date',		cellClass: 'text-left',	 enableColumnMenu : false,width:150},{
		field : 'sumInsured',		displayName : 'Sum Insured',cellClass: 'text-right',enableColumnMenu : false,width:180},{
		field : 'basicPremium',		displayName : 'Basic Premium',cellClass: 'text-right',enableColumnMenu : false,width:180},{
		field : 'grossPremium',		displayName : 'Gross Premium',cellClass: 'text-right',enableColumnMenu : false,width:180},{
		field : 'netPremium',		displayName : 'Net Premium',cellClass: 'text-right',enableColumnMenu : false,width:180},{
		field : 'totalPayRounded',	displayName : 'Payment Total Amount',cellClass: 'text-right',enableColumnMenu : false,width:180},{
		field : 'declareDate',		displayName : 'Payment Declared On',cellClass: 'text-left',	 enableColumnMenu : false,width:150},{
		field : 'paymentMode',		displayName : 'Payment Mode',		cellClass: 'text-left',	 enableColumnMenu : false,width:130},{
		field : 'paymentStatus',	displayName : 'Payment Status',		cellClass: 'text-left',  enableColumnMenu : false,width:250},{
		field : 'paymentType',		displayName : 'Payment Type',		cellClass: 'text-left',	 enableColumnMenu : false,width:130},{
		field : 'paymentDeclaredBy',displayName : 'Payment Declared By',cellClass: 'text-left',	 enableColumnMenu : false,width:180},{
		field : 'paymentUpdatedBy',	displayName : 'Payment Updated By',	cellClass: 'text-left',	 enableColumnMenu : false,width:150},{
		field : 'paymentUpdatedOn',	displayName : 'Payment Updated On',	cellClass: 'text-left',	 enableColumnMenu : false,width:150},{
		field : 'createdBy',		displayName : 'Created By',			cellClass: 'text-left',  enableColumnMenu : false,width:130},{
		field : 'updatedBy',		displayName : 'Updated By',			cellClass: 'text-left',	 enableColumnMenu : false,width:130},{
		field : 'range',			displayName : 'Range',				cellClass: 'text-left',	 enableColumnMenu : false,width:100},{
		field : 'noOfDays',			displayName : 'Days',				cellClass: 'text-left',	 enableColumnMenu : false,width:100}
	];	

/* E-Cover Note Issued Report Details End*/	
	
	
/* System Illegal Access Log Report Details Start*/
	self.setSystemIllegalAccessLogDet = function() {
		$("#DD_USER_TYPE").focus();
		self.reportdet.gridAlertInd = false;
		FilterSearchService.loadLogTypeList(self);
		self.dateOnLoad();
		GridServices.defineGrid(self,null, 'systemIllegalAccessLogDetGrid',null,columnDefs.systemIllegalAccessLogDet,null, pagination, null);
	};	
	self.fnSearchSystemIllegalAccessLogDet = function(){
		var status=true;
		if (self.reportdet.userTypeIdForm == 0 || self.reportdet.userTypeIdForm == ''|| self.reportdet.userTypeIdForm == undefined || self.reportdet.userTypeIdForm == null)
			{	swal("Please select Log Type","reportdet.userTypeIdForm");
				status=false;	}
		else if (self.reportdet.fromDate == null || self.reportdet.fromDate == ''|| self.reportdet.fromDate == undefined)
			{	swal(FILTER_MSGS.FILTER_VALIDATION.VALID_FROMDT,"reportdet.fromDate");
				status=false;	}
		else if (self.reportdet.toDate == null || self.reportdet.toDate == ''|| self.reportdet.toDate == undefined)
			{	swal(FILTER_MSGS.FILTER_VALIDATION.VALID_TODT,"reportdet.toDate");
				status=false;	}	
		if(status==true){
			self.reportdet.gridAlertInd = false;
			ReportService.getSystemIllegalAccessLogGridDetails(self);	}
		else GridServices.bindGrid(self,'reportdet','systemIllegalAccessLogDetGrid',null,"Y",'reports/rptsystemillegalaccesslog');			
	};
	self.fnClearDataSysIllAccLog = function(){
		self.dateOnLoad();
		GridServices.bindGrid(self,null,'systemIllegalAccessLogDetGrid',null,null,null);	
	};
	//Grid 
	columnDefs.systemIllegalAccessLogDet = [
	         {field : 'slNo',displayName : 'S.No.',cellClass: 'text-center',enableColumnMenu : false,width:50},
	         {field : 'attemptDateTime',displayName : 'Attempt On',cellClass: 'text-left',enableColumnMenu : false,width:250},
	         {field : 'errorMessage',cellClass: 'text-left',displayName : 'Error Message',enableColumnMenu : false,width:250},
	         {field : 'lockedStatus',cellClass: 'text-left',displayName : 'Locked Status',enableColumnMenu : false,width:250}];	
	
/* System Illegal Access Log Report Details End*/

/* GST Report Details Start*/
	self.setGSTReportDet = function() {
		
		if(GLOBAL_DATA.staffId != 0){
			self.reportdet.staffInd="Y";
		}
	
		$("#DD_SOURCE_TYPE").focus();
		self.dateOnLoad();
		self.fnLoadRptSourceTypes(); 
		if(self.staffId == 0){
			self.reportdet.sourceTypeId = 1;
			ReportService.loadDlyTransBranch(self); 
	 }

		self.reportdet.gridAlertInd=false;
			ReportService.loadDlyTransBranch(self); 
		FilterSearchService.loadJPJStatusList(self);
		GridServices.defineGrid(self,null, 'gstReportGrid',null,columnDefs.gstReportDet,null, pagination, null);
	};	
	self.fnSearchGSTReport = function(){
		var status=true;
		self.gstReportGrid.data=[];
		if(self.reportdet.sourceTypeId == undefined || self.reportdet.sourceTypeId == null || self.reportdet.sourceTypeId == 0 || self.reportdet.sourceTypeId == ''){
			swal("Please Select Source Type","reportdet.sourceTypeId");
			status=false; 		
		} else if(self.reportdet.branchId == 0 || self.reportdet.branchId == '' || self.reportdet.branchId == undefined || self.reportdet.branchId == null){
			swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_BRANCH,"reportdet.branchId");
			status=false; 		
		} else if (self.reportdet.fromDate == null || self.reportdet.fromDate == '' || self.reportdet.fromDate == 'undefined'){
		 	swal(FILTER_MSGS.FILTER_VALIDATION.VALID_FROMDT,"reportdet.fromDate");
		 	status=false;			 	
		} else if (self.reportdet.toDate == null || self.reportdet.toDate == '' || self.reportdet.toDate == 'undefined'){
		 	swal(FILTER_MSGS.FILTER_VALIDATION.VALID_TODT,"reportdet.toDate");
		 	status=false;	
		}			
		
		if(status==true){
				 self.reportdet.gridAlertInd = false;
				 ReportService.getGSTReportGridDetails(self);
		}else	GridServices.bindGrid(self,'reportdet','gstReportGrid',null,"Y",'reports/reportsgst');	 		
	};
	self.fnClearAccodeGstRpt = function(){
		self.dateOnLoad();
		self.reportdet.accountCode="";
		self.subAccountCodeList="";
		self.reportdet.coverNoteNo="";
		GridServices.bindGrid(self,null,'gstReportGrid',null,null,null);	
	};
	/*Grid Start*/
	columnDefs.gstReportDet = [ 
	        {field : 'slNo', displayName : 'S.No.', enableColumnMenu : false, width:70,cellClass: 'text-center'},
	        {field : 'branch', displayName : 'Branch Name', cellClass: 'text-left', enableColumnMenu : false, width:150},
	        {field : 'intermediaryCode', displayName : 'Intermediary Code', cellClass: 'text-left', enableColumnMenu : false, width:150},
//	        {field : 'IntermediarySNO', displayName : 'Intermediary S.No.', cellClass: 'text-left', enableColumnMenu : false, width:150},
	        {field : 'intermediaryName', displayName : 'Intermediary Name', cellClass: 'text-left', enableColumnMenu : false, width:200},
	        {field : 'insuredName', cellClass: 'text-left', enableColumnMenu : false, width:200},
	        {field : 'newOldICNo', displayName : 'New IC No.', cellClass: 'text-left', enableColumnMenu : false, width:130},
	        {field : 'appNo', displayName : 'Old IC No.', enableColumnMenu : false, width:130},
	        {field : 'businessRegNo', displayName : 'Business Reg.No.', cellClass: 'text-left', enableColumnMenu : false, width:150},
	        {field : 'coverNoteType', displayName : 'Cover Note Type', cellClass: 'text-left', enableColumnMenu : false, width:150},
	        {field : 'vehicleTypeDesc', displayName : 'Vehicle Type Desc.', cellClass: 'text-left',enableColumnMenu : false, width:200},
	        {field : 'cnCategory', displayName : 'CN Category', cellClass: 'text-left', enableColumnMenu : false, width:130},
	        {field : 'coverNoteNo', displayName : 'Cover Note No.', cellClass: 'text-left', enableColumnMenu : false, width:130},
	        /*{field : 'referenceNo', displayName : 'CN Reference No.', cellClass: 'text-left', enableColumnMenu : false, width:120},*/
	        {field : 'vehicleNo', displayName : 'Vehicle No.', cellClass: 'text-left', enableColumnMenu : false, width:100},
	        {field : 'cnIssuedDate', displayName : 'CN Issued Date', cellClass: 'text-center', enableColumnMenu : false, width:130},
	        {field : 'effectDate', displayName : 'Policy From Date', enableColumnMenu : false,width:150},
	        {field : 'expiryDate', displayName : 'Policy To Date', cellClass: 'text-center', enableColumnMenu : false, width:150},
	        {field : 'policyNo', displayName : 'Policy No.', cellClass: 'text-left', enableColumnMenu : false, width:150},
	        {field : 'renewalCNNo', displayName : 'Renewal No.', cellClass: 'text-left', enableColumnMenu : false, width:130},
	        {field : 'sumInsured', displayName : 'Sum Insured',cellClass: 'text-right', cellFilter: 'number: 2',enableColumnMenu : false,width:150},
	        {field : 'grossPremium', cellClass: 'text-right',displayName : 'Gross Premium', cellFilter: 'number: 2',enableColumnMenu : false,width:150},
	        {field : 'stampDuty', cellClass: 'text-right',displayName : 'Stamp Duty', cellFilter: 'number: 2',enableColumnMenu : false,width:150},
	        {field : 'gstTransferAmt', cellClass: 'text-right',displayName : 'Transfer Fee', cellFilter: 'number: 2',enableColumnMenu : false,width:150},
	        {field : 'gstCutoffDate', displayName : 'GST Registration Date', enableColumnMenu : false,width:150},
	        {field : 'receiptNo', displayName : 'GST Registration No.',cellClass: 'text-left', enableColumnMenu : false,width:150},
	        {field : 'gstPremiumPercent', displayName : 'GST Premium Percentage',cellClass: 'text-right', cellFilter: 'number: 2',enableColumnMenu : false,width:180},
	        {field : 'gstPremium', displayName : 'GST Premium Amount',cellClass: 'text-right', cellFilter: 'number: 2',enableColumnMenu : false,width:150},
	        {field : 'commPercent', displayName : 'Commission Percentage',cellClass: 'text-right', cellFilter: 'number: 2',enableColumnMenu : false,width:180},
	        {field : 'commission', displayName : 'Commission Amount',cellClass: 'text-right', cellFilter: 'number: 2',enableColumnMenu : false,width:150},
	        {field : 'gstCommPercent', displayName : 'GST Comm. Percentage',cellClass: 'text-right', cellFilter: 'number: 2',enableColumnMenu : false,width:180},
	        {field : 'gstCommissionAmnt', displayName : 'GST Comm. Amount',cellClass: 'text-right', cellFilter: 'number: 2',enableColumnMenu : false,width:150},
	        {field : 'repatePercent', displayName : 'Rebate Percentage',cellClass: 'text-right', cellFilter: 'number: 2',enableColumnMenu : false,width:150},
	        {field : 'repateAmount', displayName : 'Rebate Amount',cellClass: 'text-right', cellFilter: 'number: 2',enableColumnMenu : false,width:150},
	        {field : 'totalPayableAmt', displayName : 'Total Payment Amount',cellClass: 'text-right', cellFilter: 'number: 2',enableColumnMenu : false,width:150},
	        {field : 'paymentMode',  displayName : 'Payment Type', cellClass: 'text-left', enableColumnMenu : false, width:130},
	        {field : 'status',  cellClass: 'text-left', enableColumnMenu : false, width:130},
	        {field : 'submissionDate', displayName : 'Payment Confirmation Date', cellClass: 'text-left', enableColumnMenu : false, width:180},
	        {field : 'intermediaryDate', displayName : 'Integration Date', cellClass: 'text-left', enableColumnMenu : false, width:200},
	        {field : 'invoiceNo', displayName : 'GST Invoice No.',cellClass: 'text-left', enableColumnMenu : false, width:150},
	        {field : 'erpTaxCode', displayName : 'GST Tax Code',cellClass: 'text-left', enableColumnMenu : false, width:150},
	        {field : 'description', displayName : 'Debit Advice No.',cellClass: 'text-left', enableColumnMenu : false, width:150},
	        {field : 'creditNoteNo', displayName : 'Credit Note No.',cellClass: 'text-left', enableColumnMenu : false, width:150}];	
	/*columnDefs.gstReportDet = [ 
		               	        {field : 'slNo', displayName : 'S.No.', enableColumnMenu : false, cellClass: 'text-center'},
		               	        {field : 'intermediaryCode', displayName : 'Intermediary Code', cellClass: 'text-left', enableColumnMenu : false},
		               	        {field : 'IntermediarySNO', displayName : 'Intermediary S.No.', cellClass: 'text-left', enableColumnMenu : false},
		               	        {field : 'intermediaryName', displayName : 'Intermediary Name', cellClass: 'text-left', enableColumnMenu : false},
		               	        {field : 'coverNoteNo', displayName : 'Cover Note No.', cellClass: 'text-left', enableColumnMenu : false},
		               	        {field : 'referenceNo', displayName : 'CN Reference No.', cellClass: 'text-left', enableColumnMenu : false},
		               	        {field : 'vehicleNo', displayName : 'Vehicle No.', cellClass: 'text-left', enableColumnMenu : false},
		               	        {field : 'coverNoteType', displayName : 'Cover Note Type', cellClass: 'text-left', enableColumnMenu : false},
		               	        {field : 'effectDate', displayName : 'Policy From Date', enableColumnMenu : false},
		               	        {field : 'expiryDate', displayName : 'Policy To Date', cellClass: 'text-center', enableColumnMenu : false},
		               	        {field : 'policyNo', displayName : 'Policy No.', cellClass: 'text-left', enableColumnMenu : false},
		               	        {field : 'renewalCNNo', displayName : 'Renewal No.', cellClass: 'text-left', enableColumnMenu : false},
		               	        {field : 'vehicleTypeDesc', displayName : 'Vehicle Type Desc.', cellClass: 'text-left',enableColumnMenu : false},
		               	        {field : 'cnCategory', displayName : 'CN Category', cellClass: 'text-left', enableColumnMenu : false},
		               	        {field : 'cnIssuedDate', displayName : 'CN Issued Date', cellClass: 'text-center', enableColumnMenu : false},
		               	        {field : 'newOldICNo', displayName : 'New IC No.', cellClass: 'text-left', enableColumnMenu : false},
		               	        {field : 'appNo', displayName : 'Old IC No.', enableColumnMenu : false},
		               	        {field : 'basicPremium', displayName : 'Basic Premium',cellClass: 'text-right', cellFilter: 'number: 2',enableColumnMenu : false},
		               	        {field : 'grossPremium', cellClass: 'text-right',displayName : 'Gross Premium', cellFilter: 'number: 2',enableColumnMenu : false},
		               	        {field : 'sumInsured', displayName : 'Sum Insured',cellClass: 'text-right', cellFilter: 'number: 2',enableColumnMenu : false},
		               	        {field : 'totalPayableAmt', displayName : 'Total Payable',cellClass: 'text-right', cellFilter: 'number: 2',enableColumnMenu : false},
		               	        {field : 'gstCutoffDate', displayName : 'GST Registration Date', enableColumnMenu : false},
		               	        {field : 'receiptNo', displayName : 'GST Registration No.',cellClass: 'text-left', enableColumnMenu : false},
		               	        {field : 'gstCommPercent', displayName : 'GST Comm. Percentage',cellClass: 'text-right', cellFilter: 'number: 2',enableColumnMenu : false},
		               	        {field : 'commission', displayName : 'GST Comm. Amount',cellClass: 'text-right', cellFilter: 'number: 2',enableColumnMenu : false},
		               	        {field : 'repatePercent', displayName : 'GST Premium Percentage',cellClass: 'text-right', cellFilter: 'number: 2',enableColumnMenu : false},
		               	        {field : 'gstPremium', displayName : 'GST Premium Amount',cellClass: 'text-right', cellFilter: 'number: 2',enableColumnMenu : false},
		               	        {field : 'invoiceNo', displayName : 'GST Invoice No.',cellClass: 'text-left', enableColumnMenu : false},
		               	        {field : 'erpTaxCode', displayName : 'GST Tax Code',cellClass: 'text-left', enableColumnMenu : false}];	*/
/* GST Report Details End*/	
	
/* User Log Report Details Start*/
	self.setDefaultUserLogReportDet = function() {
		if(GLOBAL_DATA.staffId != 0){
			self.reportdet.staffInd="Y";
		}		
		$("#DD_LOGIN_NAME").focus();
		GridServices.defineGrid(self,null,'userLogReportDetGrid',null,columnDefs.userLogReprotGrid,null, pagination, events);	
		if(localStorageService.get("filterData")!=null && localStorageService.get("filterData")!= '' && localStorageService.get("filterData") !=undefined){
			var data=localStorageService.get("filterData");	
			self.reportdet.firstLogInId=data.firstLogInId;
			self.reportdet.logInName=data.logInName;
			self.reportdet.fromDate=data.fromDate;
			self.reportdet.toDate=data.toDate;
			ReportService.getUserLogReportGridDetails(self);
		}else{
			self.dateOnLoad();
			ReportService.loadLoginNameList(self);
			self.reportdet.gridAlertInd=false;			
		}				
	};
	self.fnSearchUserLogReportDet = function(){
		var status = true;		
		if (self.reportdet.logInName == ''|| self.reportdet.logInName == undefined || self.reportdet.logInName == null)
			{	swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_ACCCODE,"reportdet.logInName");
				status=false;	}
		else if (self.reportdet.fromDate == null || self.reportdet.fromDate == ''|| self.reportdet.fromDate == undefined)
			{	swal(FILTER_MSGS.FILTER_VALIDATION.VALID_FROMDT,"reportdet.fromDate");
				status=false;	}				
		else if (self.reportdet.toDate == null || self.reportdet.toDate == ''|| self.reportdet.toDate == undefined)
			{	swal(FILTER_MSGS.FILTER_VALIDATION.VALID_TODT,"reportdet.toDate");
				status=false;	}
		if(status==true){
			self.reportdet.gridAlertInd = false;
			localStorageService.set("filterData",self.reportdet);
			ReportService.getUserLogReportGridDetails(self);	}
		else GridServices.bindGrid(self,'reportdet','userLogReportDetGrid',null,"Y",'reports/reportsuserlog');
	};
	self.fnBackToUserLog = function(){
		 self.$parent.formNav('rptuserlog', 'reportdet', '~','~','~', 'G','~','~');
	};
	self.viewUserLogDetails = function(rowEntity){
		 localStorageService.set("logData",rowEntity);
		 self.reportdet=rowEntity;
		 self.$parent.formNav('reportsuserlogdataview', 'reportdet', '~',self.reportdet,self.reportdet, 'G',self.reportdet,'~');
	};
	self.setDefaultUserLogDataViewDet=function(){
		self.reportdet=localStorageService.get("logData");
	};
	/*Grid Start*/	
	columnDefs.userLogReprotGrid = [ 
	    {field : 'slNo',        displayName : 'S.No.',             enableColumnMenu : false, width:50,  cellClass: 'text-center'},
	    {field : 'userIdGrid',  displayName : 'User ID',           enableColumnMenu : false, width:150, cellClass: 'text-left'},
	    {field : 'nextInputDate',visible : false},
	    {field : 'userName',    displayName : 'Full Name',         enableColumnMenu : false, width:180, cellClass: 'text-left'},
	    {field : 'roleName',    displayName : 'Application Role',  enableColumnMenu : false, width:150, cellClass: 'text-left'},
	    {field : 'coverNoteNo', displayName : 'Cover Note No.',    enableColumnMenu : false, width:150, cellClass: 'text-left'},
	    {name  : 'Data',enableColumnMenu : false,width:150,type	: 'boolean',visible : true,
	    	cellTemplate : '<center><div class="ui-grid-cell-contents"><div class="col-md-6"><button class="btn btn-icon-left btn-sm" ng-click="grid.appScope.viewUserLogDetails(row.entity)" >View</button></div></div></center>'},
	    {field : 'loginTime',   displayName : 'Log Data Updated On',enableColumnMenu : false,width:170, cellClass: 'text-left'}];

/* User Log Report Details End*/
/*E - Motor Integration Report Start*/
	self.setDefaultEMotorIntegrationReportDet = function() {
		self.fnLoadRptSourceTypes().then(function(response){
			if(GLOBAL_DATA.staffId != 0){
				self.reportdet.staffInd="Y";
			}
			$("#DD_SOURCE_TYPE").focus();
			CommonService.getCurrentDate().then(function(response) {
				var currDate=response.date;			
				self.reportdet.toDate = currDate;			
				self.reportdet.fromDate = monthFirst(currDate);
			});
			self.gridAlertInd = false;
			if(self.staffId == 0){
				self.reportdet.sourceTypeId = 1;
				ReportService.loadDlyTransBranch(self);
			}
			
			ReportService.loadMainClassListRefer1(self);
		});		
		self.reportdet.gridAlertInd=false;
		self.dateOnLoad();			
		FilterSearchService.loadIntegrationList(self);
		GridServices.defineGrid(self,null, 'eMotorIntegrationReportDetGrid',null,columnDefs.eMotorIntegrationReportDet,null, pagination, null);
	};
	
	self.fnSearchEMotorIntegrationReportDet=function(){
		var status=true;
		if(self.reportdet.sourceTypeId == undefined || self.reportdet.sourceTypeId == null || self.reportdet.sourceTypeId == 0 || self.reportdet.sourceTypeId == '')
			{	swal("Please Select Source Type","reportdet.sourceTypeId");
				status=false; 		}
		else if (self.reportdet.branchId == 0 || self.reportdet.branchId == ''|| self.reportdet.branchId == undefined || self.reportdet.branchId == null)
			{	swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_BRANCH,"reportdet.branchId");
				status=false;	}
		/*else if (self.reportdet.accountCode == 0 || self.reportdet.accountCode == ''|| self.reportdet.accountCode == undefined || self.reportdet.accountCode == null)
			{	swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_ACCCODE,"reportdet.accountCode");
				status=false;	}*/
		else if (self.reportdet.fromDate == null || self.reportdet.fromDate == ''|| self.reportdet.fromDate == undefined)
			{	swal(FILTER_MSGS.FILTER_VALIDATION.VALID_FROMDT,"reportdet.fromDate");
				status=false;	}
		else if (self.reportdet.toDate == null || self.reportdet.toDate == ''|| self.reportdet.toDate == undefined)
			{	swal(FILTER_MSGS.FILTER_VALIDATION.VALID_TODT,"reportdet.toDate");
				status=false;	}
		
		if(status==true){
			ReportService.getEMotorGridDetails(self);
		}else{
			GridServices.bindGrid(self,null,'eMotorIntegrationReportDetGrid',null,"N",null);
		}		
	};
	self.fnClearAccodeEMotor = function(){
		self.dateOnLoad();
		self.reportdet.accountCode="";
		self.subAccountCodeList="";
		self.reportdet.paymentTypeId="";
		GridServices.bindGrid(self,null,'eMotorIntegrationReportDetGrid',null,"N",null);
	};
	columnDefs.eMotorIntegrationReportDet = [
	     {field : 'slNo',displayName : 'S.No.',enableColumnMenu : false,width:60,cellClass: 'text-center'},
	     {field : 'serialNo',displayName : 'Payment Serial',enableColumnMenu : false,width:150,cellClass: 'text-left'},
	     {field : 'coverNoteNo',displayName : 'Cover Note No.',enableColumnMenu : false,width:150,cellClass: 'text-left'},
	     {field : 'branchCode',displayName : 'Branch Code',enableColumnMenu : false,width:170,cellClass: 'text-left'},
	     {field : 'intermediaryCode',displayName : 'Intermediary Code',enableColumnMenu : false,width:170,cellClass: 'text-left'},
	     {field : 'intermediaryName',displayName : 'Intermediary Name',enableColumnMenu : false,width:150,cellClass: 'text-left'},
	     {field : 'totalPayableAmt',displayName : 'Total Payable',cellFilter: 'number: 2',enableColumnMenu : false,width:170,cellClass: 'text-right'},
	     {field : 'paymentType',displayName : 'Payment Type',enableColumnMenu : false,width:170,cellClass: 'text-left'},
	     {field : 'paymentDate',displayName : 'Payment Date',enableColumnMenu : false,width:150,cellClass: 'text-left'},
	     {field : 'statusGrid',displayName : 'Integration Status',enableColumnMenu : false,width:150,cellClass: 'text-left'}
	     ];

/*E - Motor Integration Report End*/
/* Gross Premium Monthly Report Details Start*/	
	self.setGrossPremMonthlyReportDet = function() {
		if(GLOBAL_DATA.staffId != 0){
			self.reportdet.staffInd="Y";
		}		
		$("#DD_BRANCH_ID").focus();
		self.reportdet.gridAlertInd =false;
		self.fnLoadRptSourceTypes();
		if(self.staffId == 0){
			self.reportdet.sourceTypeId = 1;
			ReportService.loadBranchList(self);
		}
		ReportService.loadYearList(self);
		GridServices.defineGrid(self,null, 'grossPremiumMonthlyReportDetGrid',null,columnDefs.grossPremiumMonthlyReportDet,null, null, null);
	};
	self.fnClearPremiumData= function (){
		self.reportdet.accountCode = "";
		self.reportdet.agentId="";
		self.reportdet.searchTypeId="";
		self.reportdet.periodYear = "";
		self.reportdet.periodToYear="";
		self.reportdet.periodFromYear="";
			};
	
	//ng-blur year validation
	self.fnValidateFromYear = function(){	
		var currentYear = new Date().getFullYear();		
		if(self.reportdet.periodYear > currentYear){
			alert(FILTER_MSGS.FILTER_VALIDATION.SELECT_PERIOD_LESSEQUAL_CUR);
			self.reportdet.periodYear="";			
			$("#MONTHLY_SEARCH").focus();
			}
		};
	//Search button click event
	self.fnsearchGrossPremiumMonthly = function(){
		var status=true;
		if(self.reportdet.sourceTypeId == undefined || self.reportdet.sourceTypeId == null || self.reportdet.sourceTypeId == 0 || self.reportdet.sourceTypeId == ''){
			swal("Please Select Source Type","reportdet.sourceTypeId");
			status=false;
		}
		else if (self.reportdet.periodYear == null || self.reportdet.periodYear =='' || self.reportdet.periodYear =='undefined')
			{	status=false;
				swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_PERIOD,"reportdet.periodYear");	}
		if(status==true){

			ReportService.getGrossPremMonthlyGridDetails(self);
			if(self.reportdet.branchId>0){
				self.reportdet.branchName = $('#DD_BRANCH_ID option:selected').html();
		 		}
				if(self.reportdet.accountCode!='' && self.reportdet.accountCode =='undefined'){
					self.reportdet.accountCode = $('#ACC_CODE option:selected').html();}					
				}
				else GridServices.bindGrid(self,null, 'grossPremiumMonthlyReportDetGrid',null,null,null);
	};
	//Export Excel
	self.fnExportExcelGrossPremium = function(doObject){	
		 if (confirm(FILTER_MSGS.FILTER_VALIDATION.CONFIRM_EXCEL)) {
			 var data = JSON.stringify(doObject);
				var form = $('<form action="'+CONTEXT_PATH+'reports/excelGrossPremiumMonthly/Gross Premium Monthly Report" method="post">');
				var input =  $('<input type="hidden" name="json"/>').val(data);
				input.appendTo(form);
				form.appendTo('body');
				form.submit();
		 	}
	};
	// Print Generation
	self.fnExportPdfGrossPremiumMonthly = function(doObject) {
		if (confirm(FILTER_MSGS.FILTER_VALIDATION.CONFIRM_PRINT)) {
			var data = JSON.stringify(doObject);
			var form = $('<form action="'+CONTEXT_PATH+'reports/pdfgrosspremmonthlyreport" method="post" target="_blank" >');
			var input =  $('<input type="hidden" name="json"/>').val(data);
			input.appendTo(form);
			form.appendTo('body');
			form.submit();
		}
	};	
	//Gross Premium Reset
	self.fnClearAccCodeGrossMonthlyDet = function (){
		self.reportdet.accountCode = "";
		self.reportdet.periodYear = "";
		self.grossPremiumMonthlyReportDetGrid.data=[];
	};
	columnDefs.grossPremiumMonthlyReportDet = [ 
	       {field : 'sino',displayName : 'S.NO.',cellClass: 'text-left',enableColumnMenu : false,width:100},
	       {field : 'month',displayName : 'MONTH',cellClass: 'text-left',enableColumnMenu : false,width:100},
	       {field : 'strGPMotor',displayName : 'MOTOR',cellClass: 'text-right',enableColumnMenu : false},
	       {field : 'strGPPA',displayName : 'PERSONAL ACCIDENT',cellClass: 'text-right',enableColumnMenu : false,width:170},
	       {field : 'strGPWorkmen',displayName : 'WORKMEN',cellClass: 'text-right',enableColumnMenu : false},
	       {field : 'strGPFire',displayName : 'FIRE',cellClass: 'text-right',enableColumnMenu : false},
	       {field : 'strGPMarine',displayName : 'MARINE',cellClass: 'text-right',enableColumnMenu : false},
	       {field : 'strGPBond',displayName : 'BOND',cellClass: 'text-right',enableColumnMenu : false}
	       ];
/* Gross Premium Monthly Report Details End*/	
	
/*common function and date validation starts */
	
	//Common function for Export Excel button click event
	
	self.dateOnLoadCurrent = function(){			
		CommonService.getCurrentDate().then(function(response) {
			var currDate=response.date;			
			self.reportdet.fromDate = currDate;
			self.reportdet.toDate = monthLast(currDate);			
		}); 
	};
	
	self.fnExportExcel = function(formData,methodUrl,excelName){	
		jConfirm(FILTER_MSGS.FILTER_VALIDATION.CONFIRM_EXCEL,"Warning",function(res){
			if(res){    
				var data = JSON.stringify(formData);
				var form = $('<form action="'+CONTEXT_PATH+'reports/'+methodUrl+'/'+excelName+'" method="post">');
				var input =  $('<input type="hidden" name="json"/>').val(data);
				input.appendTo(form);
				form.appendTo('body');
				form.submit();
				} 
		});
	};	
	//Common function for Print button click event
	self.fnExportPdf = function(formData,method){
		jConfirm(FILTER_MSGS.FILTER_VALIDATION.CONFIRM_PRINT,"Warning",function(res){
			if(res){    
				formData.subAccount =($("#DD_SUB_AGENT_ID option:selected").text()!= null && formData.subAgentId > 0)  ? $("#DD_SUB_AGENT_ID option:selected").text() : null ;
				formData.branchName = $("#DD_BRANCH_ID option:selected").text();
				var fields = formData.branchName.split('-');
				formData.branchCode = fields[0];
				var strData = JSON.stringify(formData);		
				
				var form = $('<form action="'+CONTEXT_PATH+'reports/'+method+'" method="post" target="_blank" >');
				var input =  $('<input type="hidden" name="json"/>').val(strData);
				input.appendTo(form);
				form.appendTo('body');
				form.submit();
			}
		 });
	};  
	
	self.fnCommonReset = function(ctrlObj){
		jConfirm(FILTER_MSGS.FILTER_VALIDATION.CONFIRM_RESET,"Warning",function(res){
			if(res){    
				localStorageService.remove("reportdet");
				localStorageService.remove("logData");
				localStorageService.remove("filterData");		
				$state.reload();
			}
		});
	};	
	
	self.fnGetTo30Date = function() {
		if (self.voidpaymentdet != null && self.voidpaymentdet != undefined ) {
			self.voidpaymentdet.toDate = fnDateManipulation(self.voidpaymentdet.fromDate,29,"+","D");	
		} else {
			self.reportdet.toDate = fnDateManipulation(self.reportdet.fromDate,29,"+","D");
		}
		return true;
	};
	
	self.dateOnLoad = function(){
		//alert();
		CommonService.getCurrentDate().then(function(response) {
			var currDate=response.date;			
			self.reportdet.toDate = currDate;		
			//self.reportdet.toDate =monthLast(currDate);	
			self.reportdet.fromDate = monthFirst(currDate);
		});
	};
	self.commonDatePattern = function(date)
		{	 var datePat = /^(\d{2})(-)(\d{2})\2(\d{4})$/;
			 var matchArray = date.match(datePat);
			 if (date!=undefined && date!=null && date !="" && matchArray == null) {
				swal("Date is not in a valid format.");
				return false;
			 }
			 return true;
		};

	self.fnCommonOnChangeFromDate = function(){
 		var fDate = self.reportdet.fromDate;
 		if(fDate != null && fDate != undefined && fDate.trim().length > 0){
 			if (self.commonDatePattern(fDate) && isValidDate(fDate)) {
	     		CommonService.getCurrentDate().then(function(response){
	     			if(stringToDate(fDate)>stringToDate(response.date)){
	     				{
	     					self.reportdet.fromDate='';
	     					self.reportdet.toDate='';
	     					swal(FILTER_MSGS.FILTER_VALIDATION.EQUAL_LESS_SYSDATE,"reportdet.fromDate");	     					
		  				 }
	     			}else{//self.reportdet.toDate= monthLast(fDate);   
	     				var tDate = monthLast(fDate);
	     				CommonService.getCurrentDate().then(function(response){
	    	     			if(stringToDate(tDate)>=stringToDate(response.date)){
	    	     				self.reportdet.toDate=response.date;
	    	     			}else
	    	     				self.reportdet.toDate= monthLast(fDate);   	     				
	     				});
	     			}
	     		});
 			}
     		else{
     			self.reportdet.fromDate='';
     			self.reportdet.toDate='';
     			angular.element($('[ng-model="reportdet.fromDate"]'))[0].focus();
    		}
		}
 	};
 	// Defect Id #302
 	self.fnCommonOnChangeFromDateCBC = function(){
 		var fDate = self.reportdet.fromDate;
 		if(fDate != null && fDate != undefined && fDate.trim().length > 0){
 			if (self.commonDatePattern(fDate) && isValidDate(fDate)) {
	     		CommonService.getCurrentDate().then(function(response){
	     			if(stringToDate(fDate)>stringToDate(response.date)){
	     				{
	     					self.reportdet.fromDate='';
	     					self.reportdet.toDate='';
	     					swal(FILTER_MSGS.FILTER_VALIDATION.EQUAL_LESS_SYSDATE,"reportdet.fromDate");	     					
		  				 }
	     			}else{//self.reportdet.toDate= monthLast(fDate);   
	     				var tDate = monthLast(fDate);
	     				CommonService.getCurrentDate().then(function(response){
	    	     			if(stringToDate(tDate)>=stringToDate(response.date)){
	    	     				self.reportdet.toDate=response.date;
	    	     			}else
	    	     				self.reportdet.toDate= monthLast(fDate);   	     				
	     				});
	     			}
	     		});
 			} else {
     			self.reportdet.fromDate='';
     			self.reportdet.toDate='';
     			angular.element($('[ng-model="reportdet.fromDate"]'))[0].focus();
    		}
		}else {
			self.reportdet.toDate='';
		}
 	};
 	self.fnCommonOnChangeToDateCBC = function(){
 		var issueToDate = self.reportdet.toDate;		
 		if(issueToDate != null && issueToDate != undefined && issueToDate.trim().length >0 ){
 			if (self.reportdet.fromDate!=null && self.reportdet.fromDate != undefined && self.reportdet.fromDate.trim().length >0 ) {
	 			if(isValidDate(issueToDate)){
	 				if (!self.commonDatePattern(issueToDate)) {
	 					self.reportdet.toDate='';
	 					angular.element($('[ng-model="reportdet.toDate"]'))[0].focus();
	 				}else if(self.reportdet.fromDate!=null && self.reportdet.toDate!=null){
	 					CommonService.getCurrentDate().then(function(response){
	 						if(stringToDate(self.reportdet.fromDate)>stringToDate(self.reportdet.toDate)){ 								
	 							self.reportdet.toDate='';
	 							swal(ADMIN_SETTING.GREATER_THAN_FROM,"reportdet.toDate");
	 						}else if(stringToDate(self.reportdet.toDate)>stringToDate(response.date)){	
	 							self.reportdet.toDate='';
	 							swal("To date should be less than or equal to system date","reportdet.toDate");				  				 		     			
	 						}else if(stringToDate(issueToDate)>stringToDate(monthLast(self.reportdet.fromDate))){
	 							self.reportdet.toDate='';
	 							swal("To Date Month should be equal to From Date Month","reportdet.toDate");	
	 						}
	 					});
	 				}else{
	 					self.reportdet.toDate='';
	 					angular.element($('[ng-model="reportdet.toDate"]'))[0].focus();	
	 				}
				}else { 				
	     			self.reportdet.toDate='';
	     			swal("To Date Month should be equal to From Date Month","reportdet.toDate");
	 			} 
 			} else {
 				self.reportdet.toDate='';
 				swal("Please enter the from date",self.reportdet.fromDate);
 			}
		}
 	};
 	
 	self.fnCommonOnChangeToDate = function(){
 		var issueToDate = self.reportdet.toDate;
 		if(issueToDate != null && issueToDate != undefined && issueToDate.trim().length >0 ){
 			if(isValidDate(issueToDate)){
 				if (!self.commonDatePattern(issueToDate)) {
 					self.reportdet.toDate='';
 					angular.element($('[ng-model="reportdet.toDate"]'))[0].focus();
 				}else if(self.reportdet.fromDate!=null && self.reportdet.toDate!=null){
 					CommonService.getCurrentDate().then(function(response){
 						if(stringToDate(self.reportdet.fromDate)>stringToDate(self.reportdet.toDate)){ 								
 							self.reportdet.toDate='';
 							swal(ADMIN_SETTING.GREATER_THAN_FROM,"reportdet.toDate");
 						}else if(stringToDate(self.reportdet.toDate)>stringToDate(response.date)){	
 							self.reportdet.toDate='';
 							swal("To date should be less than or equal to system date","reportdet.toDate");				  				 		     			
 						}else if(stringToDate(issueToDate)>stringToDate(monthLast(self.reportdet.fromDate))){
 							self.reportdet.toDate='';
 							swal("To Date Month should be equal to From Date Month","reportdet.toDate");	
 						}
 					});
 				}else{
 					alert("test ss");
 					self.reportdet.toDate='';
 					angular.element($('[ng-model="reportdet.toDate"]'))[0].focus();	
 				}
			}else self.reportdet.toDate=''; 			
		}
 	};
/*common function and date validation ends */
	self.fnCommonFromDateValidate = function() {
		if (self.reportdet != '') {
			if (self.reportdet.fromDate != undefined) {
				if (self.formModel instanceof Date){
					fromDate = dateToString(self.reportdet.fromDate);
				}else{
					fromDate = self.reportdet.fromDate;
				}
				CommonService.getCurrentDate().then(function(response) {
				if (stringToDate(fromDate) > stringToDate(response.date)) {
					alert(FILTER_MSGS.FILTER_VALIDATION.EQUAL_LESS_SYSDATE);
					self.reportdet.fromDate = "";
				}
				});
			}else {
				alert(FILTER_MSGS.FILTER_VALIDATION.INVAL_DT);
				self.reportdet.fromDate = "";
			}
		}
	};
	
	self.fnClearAccCode=function() {
		self.reportdet.accountCode="";
		self.reportdet.agentId="";
		if(self.reportdet.subAgentId !=undefined && (self.reportdet.subAgentId !=0 || self.reportdet.subAgentId!="")){
			self.reportdet.subAgentId="";
			self.subAccountCodeList="";
		}
		/*if(self.reportdet.fromDate !=undefined && (self.reportdet.fromDate !=null || self.reportdet.fromDate!="")){
			self.reportdet.fromDate="";
		}
		if(self.reportdet.toDate !=undefined && (self.reportdet.toDate !=null || self.reportdet.toDate!="")){
			self.reportdet.toDate="";
		}*/
		if(self.reportdet.renewalStatusId !=undefined && (self.reportdet.renewalStatusId !=0 || self.reportdet.renewalStatusId!="")){
			self.reportdet.renewalStatusId="";
		}		
		if(self.reportdet.otsMainClassId !=undefined && (self.reportdet.otsMainClassId !=0 || self.reportdet.otsMainClassId!="")){
			self.reportdet.otsMainClassId="";
		}
		if(self.reportdet.otsClassId !=undefined && (self.reportdet.otsClassId !=0 || self.reportdet.otsClassId!="")){
			self.reportdet.otsClassId="";
			self.classCodeOptions="";
		}
		if(self.reportdet.covernoteStatusId !=undefined && (self.reportdet.covernoteStatusId !=0 || self.reportdet.covernoteStatusId!="")){
			self.reportdet.covernoteStatusId="";
		}
		if(self.reportdet.statusId !=undefined && (self.reportdet.statusId !=0 || self.reportdet.statusId!="")){
			self.reportdet.statusId="";
		}
	};
	
	self.fngetSelectedVal=function(selId){
		if(selId!=null && selId!="" && selId.length!=0){
			if(selId=='SEL_BRANCH')
				self.reportdet.branchName = $("#SEL_BRANCH option:selected").html();
			if(selId=='SEL_MAIN_CLASS')
				self.reportdet.otsMainClassDesc = $("#SEL_MAIN_CLASS option:selected").html();
		}
	};	
	
	self.voidPaymentOnload =function(){
		self.fnLoadRptSourceTypes().then(function(response){
			if(GLOBAL_DATA.staffId != 0){
				self.voidpaymentdet.staffInd="Y";
			}
			$("#DD_BRANCH").focus();
			CommonService.getCurrentDate().then(function(response) {
				var currDate=response.date;			
				self.voidpaymentdet.toDate = currDate;			
				self.voidpaymentdet.fromDate = monthFirst(currDate);
			});
			self.gridAlertInd = false;
			
			
			if(self.staffId == 0){
				self.voidpaymentdet.sourceTypeId = 1;
				ReportService.loadDlyTransBranch(self);
			}

			ReportService.loadMainClassListRefer1(self);
		});
		self.voidpaymentdet.id = "VOID_PAYMENT";
		
		self.voidpaymentdet = {};
		// $("#DD_BRANCHID").focus();
	
			self.gridAlertInd=false;
			self.voidpaymentdet.jpjStatusId=3;
		
			/*$http.post(CONTEXT_PATH+'reports/loadAllBranches').then(function(response) {
				self.branchList = response.data[0];
			});*/		
			
			ReportService.loadMainClassList(self);	
			FilterSearchService.loadJPJStatusList(self);
			FilterSearchService.loadPaymentStatuslist(self);
			
			self.gridSettings = {
					enableRowHeaderSelection : true,
					enableSelectAll : false,
					multiSelect : true,
					enableColumnResizing : true,
					enableCellEdit : false,
					enableCellSelection: false,				
					enableRowSelection : true,
					enableSorting : false
				};
			var events = {'rowselection':'fnOnSubmissionSelection'};
			
			GridServices.defineGrid(self,null, 'voidPaymentReportGrid',self.gridSettings,columnDefs.voidPaymentReport,null, pagination, events);
			GridServices.defineGrid(self,null, 'submissionReportGrid',null,columnDefs.submissiontReport,null, pagination, null);
			
			
			CommonService.getCurrentDate().then(function(response) {
				var currDate=response.date;			
				self.voidpaymentdet.toDate = currDate;			
				self.voidpaymentdet.fromDate = monthFirst(currDate);
			});			
	};
	
	self.fnResetAccodeCode = function(){
		self.voidpaymentdet.accountCode = "";
		self.voidpaymentdet.agentId = "";
	};
	
	var submissionHeaders = [];
	var unSelectedRow = null;
	self.fnOnSubmissionSelection =function(row){
		unSelectedRow = self.voidPaymentReportGrid.data.indexOf(row.entity);
		self.selectedRows = self.voidPaymentReportGridApi.selection.getSelectedRows();
		submissionHeaders = [];
		for(var i=0;i<self.selectedRows.length;i++){
			submissionHeaders.push(self.selectedRows[i].hdnSubmsnHdrId);
		}
		
		if(row.isSelected){
			self.submissionReportGrid.data = [];
			$http.post(CONTEXT_PATH+'reports/getVoidPaymentCNDetails',submissionHeaders).then(function(response) {
				var gridData=[];
				for(var i =0;i<response.data.length;i++){
					for(var j =0;j<response.data[i].length;j++)
						self.submissionReportGrid.data.push(response.data[i][j]);
				}
			});
		}else{
			var temp = angular.copy(self.submissionReportGrid.data);
			self.submissionReportGrid.data = [];
			for(var i=0;i<temp.length;i++){
				if(self.voidPaymentReportGrid.data[unSelectedRow].hdnSubmsnHdrId != temp[i].cnIndication){
					self.submissionReportGrid.data.push( temp[i]);
				}
			}
		}
	};
	
	self.voidPaymentSearch = function (formObject){
		var status = true;
		self.submissionReportGrid.data = [];
		if(formObject.sourceTypeId == undefined || formObject.sourceTypeId == null || formObject.sourceTypeId == 0 || formObject.sourceTypeId == ''){
			swal("Please Select Source Type","reportdet.sourceTypeId");
			status = false;
		}
		if(status){
			$http.post(CONTEXT_PATH+'reports/getPaymentDetails',formObject).then(function(response) {
				if (response != null && response.data != null) {
					GridServices.bindGrid(self,'voidpaymentdet','voidPaymentReportGrid',response.data,"Y",'reports/getPaymentDetails');
					self.voidPaymentReportGrid.data = response.data;
				}
			});
		}
	};
	
	
	//Void Payment Report Print Generation
	self.voidPaymentPrint = function(formObject) {
		jConfirm(FILTER_MSGS.FILTER_VALIDATION.CONFIRM_PRINT,"Warning",function(res){
			if(res){    
				formObject.branchName = $("#DD_BRANCH").val().length != 0 ?   $("#DD_BRANCH option:selected").text() : null; 
				formObject.activityDesc =$("#CLASS_ID").val().length != 0 ?   $("#CLASS_ID option:selected").text() : null;
				var data = JSON.stringify(formObject);
				var firstGridDate = {};
				firstGridDate.reportGridDet =   self.voidPaymentReportGridApi.selection.getSelectedRows();
				var gridData = {};
				gridData.reportGridDet = self.submissionReportGrid.data;
				var gridDet =  JSON.stringify(gridData);
				var form = $('<form action="'+CONTEXT_PATH+'reports/pdfvoidpaymentreport" method="post" target="_blank" >');
				var input =  $('<input type="hidden" name="json"/>').val(data);
				var inputforvoidPaymentGrid =  $('<input type="hidden" name="json1"/>').val(gridDet);
				var inputforVoidPaymentSubGrid =  $('<input type="hidden" name="json2"/>').val(JSON.stringify(firstGridDate));
				input.appendTo(form);
				inputforvoidPaymentGrid.appendTo(form);
				inputforVoidPaymentSubGrid.appendTo(form);
				form.appendTo('body');
				form.submit();
			}
		});
	};	
	
	self.fnExportExcelVoidPayment = function(doObject){	
		jConfirm(FILTER_MSGS.FILTER_VALIDATION.CONFIRM_EXCEL,"Warning",function(res){
			if(res){    
				var firstGridDate = {};
				firstGridDate.reportGridDet =   self.voidPaymentReportGridApi.selection.getSelectedRows();
				var gridData = {};
				gridData.reportGridDet  = self.submissionReportGrid.data;
				var gridDet =  JSON.stringify(gridData);				
				var form = $('<form action="'+CONTEXT_PATH+'reports/excelVoidPayment/VoidPaymentSheet" method="post" target="_blank">');
				var inputforvoidPaymentGrid =  $('<input type="hidden" name="json"/>').val(gridDet);
				var inputforVoidPaymentSubGrid =  $('<input type="hidden" name="json1"/>').val(JSON.stringify(firstGridDate));
				inputforvoidPaymentGrid.appendTo(form);
				inputforVoidPaymentSubGrid.appendTo(form);
				form.appendTo('body');
				form.submit();
				} 
		});
	};
	
	
	
	
	
	/*Incomplete Quotation Report Details Start*/
	//Init Function
	self.setDefaultIncompleteQuoReportDet = function() {
	
		if(GLOBAL_DATA.staffId != 0){
			self.reportdet.staffInd="Y";
			
		}
		/*self.reportdet.otsMainClassId=12;*/
		ReportService.loadBranchList(self);
		self.gridAlertInd =false;
		$("#DD_BRANCH").focus();	
		
		/*CommonService.getCurrentDate().then(function(response) {
			var currDate=response.date;			
			self.reportdet.toDate = currDate;			
			self.reportdet.fromDate = monthFirst(currDate);
		});*/
		ReportService.loadMainClassListRefer1(self);	
		
		var events = {
				'ondblclick' : 'fnGetIncompleteQuoDet'
			};
	GridServices.defineGrid(self,null, 'incompletequotationreportGrid',null,columnDefs.incompleteQuotationReportDet,null, null, events);
		
	GridServices.defineGrid(self,null, 'incompletequotationreportMainGrid',null,columnDefs.incompleteQuotationReportMainDet,null, null, null);

	
	};	
	//Load Main Class
	self.fnSetSelectedMainClass1 = function(formObject){

		if(formObject.otsMainClassId != 0 && formObject.otsMainClassId !='' && formObject.otsMainClassId !=undefined ){			
			ReportService.loadClassByMainClassRefer1(self);
			if(formObject.otsMainClassId==4){
				ReportService.loadTransactionTypeList(self);
			}
			else
				{
				ReportService.loadTransactionTypeList1(self);
				}
			
			
		}
	};
	
	self.fnGetIncompleteQuoDet=function(rowEntity){

		self.reportdet.otsClassId=rowEntity.otsClassId;
		
		
		ReportService.getIncompleteQuoMainGridDetails(self);
		/*if(self.reportdet.otsMainClassId > 0)
		{self.reportdet.otsMainClassDesc = $("#DD_MAINCLASS option:selected").html();}
		if(self.reportdet.otsClassId > 0)
		{self.reportdet.otsClassId = $("#DD_SUBCLASS option:selected").html();}
		*/
	};
	
	//Grid - Incomplete Quotation Report
	columnDefs.incompleteQuotationReportDet = [{
	
	field : 'otsClassDesc',		displayName : 'Sub Class',				cellClass: 'text-left',		enableColumnMenu : false,width:150	},{
		field : 'totalQuotationCount',			displayName : 'Quotation Issued',			cellClass: 'text-left',		enableColumnMenu : false,width:150	},{
		field : 'incompleteQuotation',		displayName : 'Incomplete Quotation',		cellClass: 'text-left',		enableColumnMenu : false,width:150	},{
		field : 'premium',	displayName : 'Premium',		cellClass: 'text-left',		enableColumnMenu : false,width:150	},{
		field : 'standardRiskcount',	displayName : 'Standard Risk',		cellClass: 'text-left',		enableColumnMenu : false,width:130	},{
		field : 'referRiskcount',		displayName : 'Refer Risk',				cellClass: 'text-left',		enableColumnMenu : false,width:130},{
		field : 'declineRiskcount',		displayName : 'Decline Risk',	cellClass: 'text-left',	enableColumnMenu : false,width:130	
	}];
	
	columnDefs.incompleteQuotationReportMainDet = [{
		field : 'sino',				displayName : 'S.No.',			cellClass: 'text-left',		enableColumnMenu : false,width:100	},{
		field : 'serialNo',			displayName : 'Quotation Serial No.',			cellClass: 'text-left',		enableColumnMenu : false,width:200	},{
		field : 'rep_policyno',		displayName : 'Policy Number',		cellClass: 'text-left',		enableColumnMenu : false,width:200	},{
		field : 'fgfg',					displayName : 'Type Of Transaction',		cellClass: 'text-left',		enableColumnMenu : false,width:200	},{
		field : 'otsMainClassDesc',	displayName : 'Product',		cellClass: 'text-left',		enableColumnMenu : false,width:170	},{
		field : 'accountCode',		displayName : 'Intermediary Code',				cellClass: 'text-left',		enableColumnMenu : false,width:150	},{
		field : 'agencyName',		displayName : 'Inermediary Name',	cellClass: 'text-right',	enableColumnMenu : false,width:180	},{
		field : 'branchName',		displayName : 'Branch	',	cellClass: 'text-right',	enableColumnMenu : false,width:180	},{
		field : 'clientName',		displayName : 'Insured Name',	cellClass: 'text-right',	enableColumnMenu : false,width:180	},{
		field : 'occupation',		displayName : 'Occupation',	cellClass: 'text-right',	enableColumnMenu : false,width:180	},{
		field : 'fgfg',					displayName : 'Location',		cellClass: 'text-left',		enableColumnMenu : false,width:200	},{
		field : 'sumInsured',		displayName : 'Sum Insured',	cellClass: 'text-right',	enableColumnMenu : false,width:180},{	
		field : 'fgfg',					displayName : 'Rate',		cellClass: 'text-left',		enableColumnMenu : false,width:200	},{
		field : 'premium',			displayName : 'Premium',	cellClass: 'text-right',	enableColumnMenu : false,width:180},	{
		field : 'riskType',			displayName : 'Risk Type',	cellClass: 'text-right',	enableColumnMenu : false,width:180	},{
		field : 'issueDate',		displayName : 'Date of agent submitted	',	cellClass: 'text-right',	enableColumnMenu : false,width:180},{	
		field : 'fgfg',					displayName : 'Date Of UW Submitted',		cellClass: 'text-left',		enableColumnMenu : false,width:200	},{
		field : 'status',			displayName : 'Status',	cellClass: 'text-right',	enableColumnMenu : false,width:180	},{
		field : 'fgfg',					displayName : 'TAT For UW Submitted',		cellClass: 'text-left',		enableColumnMenu : false,width:200	

			
			}];
	
	
	//Search Incomplete Quotation
	self.fnIncompleteQuoSummSearch=function(){
		
		if (self.reportdet.otsMainClassId == null || self.reportdet.otsMainClassId == '' || self.reportdet.otsMainClassId == undefined || self.reportdet.otsMainClassId == 0)
			swal(FILTER_MSGS.FILTER_VALIDATION.SELECT_MAINCLASS,"reportdet.otsMainClassId");
		else if (self.reportdet.fromDate == null || self.reportdet.fromDate == '' || self.reportdet.fromDate == undefined || self.reportdet.fromDate == 0)
			swal(FILTER_MSGS.FILTER_VALIDATION.VALID_FROMDT,"reportdet.fromDate");
		else if (self.reportdet.toDate == null || self.reportdet.toDate == '' || self.reportdet.toDate == undefined || self.reportdet.toDate == 0)
			swal(FILTER_MSGS.FILTER_VALIDATION.VALID_TODT,"reportdet.toDate");
		else
		ReportService.getIncompleteQuoGridDetails(self);
		if(self.reportdet.branchId>0){
		self.reportdet.branchName = $('#DD_BRANCH option:selected').html();}
		self.reportdet.accountCode=$('#DD_ACCOUNTCODE option:selected').html();
		if(self.reportdet.otsMainClassId > 0)
		{self.reportdet.otsMainClassDesc = $("#DD_MAINCLASS option:selected").html();}
		if(self.reportdet.otsClassId > 0)
		{self.reportdet.otsClassDesc = $("#DD_SUBCLASS option:selected").html();}
		
		
		
	};
/* Incomplete Quotation Report Details End*/
	
/*Third party exception report start*/
	 self.setDefaultTPException = function(){
		 self.tpexception = {};
		var pagination = {pageSizes :[10,20,50,100],page:10};
		var tpExceptionColDefs = [
		        {field : 'slNo',			displayName : 'S.No.',		   		cellClass: 'text-left',		enableColumnMenu : false,width:80	},{
		        field : 'channelName',		displayName : 'Channel Type',		cellClass: 'text-left',		enableColumnMenu : false,width:150	},{
				field : 'coverNoteNo',		displayName : 'Cover Note No.',		cellClass: 'text-left',		enableColumnMenu : false,width:150	},{
				field : 'vehicleNo',		displayName : 'Vehicle No.',		cellClass: 'text-left',		enableColumnMenu : false,width:150	},{
				field : 'transactionDate',	displayName : 'Created On',			cellClass: 'text-left',		enableColumnMenu : false,width:170	},{
				field : 'errorCode',		displayName : 'Error Code',			cellClass: 'text-left',		enableColumnMenu : false,width:150	},{
				field : 'errorMessage',		displayName : 'Error Description',	cellClass: 'text-left',		enableColumnMenu : false,width:250	}];
		GridServices.defineGrid(self,null, 'tpExceptionGrid',null,tpExceptionColDefs,null, pagination, null);
		$http.post(CONTEXT_PATH+'reports/getTPChannelTypes',self.tpexception).then(function(response) {
			if (response != null && response.data != null) {
				self.rptChannelTypeOptions = response.data;
			}
		});
	 };
	 
	 self.fnChangeTPChannelType = function(commonutilsDO){
		 self.tpexception.agentId = commonutilsDO.agentId;
		 self.tpexception.sourceTypeId = commonutilsDO.sourceTypeId;
		 self.tpexception.accountCode = commonutilsDO.commonutilsCode;
		 self.tpexception.channelType = commonutilsDO.commonutilsDesc;
	 };
	 self.searchTPExceptionRpt = function(formObject){
		 if(formObject.commonutilsDO == null || formObject.commonutilsDO == undefined ||formObject.commonutilsDO==0 )
			 swal('Please select Channel Type');
		 else  if(formObject.fromDate == null || formObject.fromDate == undefined ||formObject.fromDate =='' )
			 swal('Please select From Date');
		 else{
			 formObject.isPagination = 'Y';
			 $http.post(CONTEXT_PATH+'reports/searchTPExceptionRpt',formObject).then(function(response) {
				if (response != null && response.data != null && response.data.length>0) {
					GridServices.bindGrid(self,'tpexception','tpExceptionGrid',response.data,'Y','reports/searchTPExceptionRpt');
				}else{
					swal('No data found..!');
					GridServices.bindGrid(self,'tpexception','tpExceptionGrid',[],'N',null);
				}
				 $http.post(CONTEXT_PATH+'reports/getTPSuccessCount',formObject).then(function(resp) {
					 formObject.successCount = resp.data.successCount;
					 formObject.failureCount = resp.data.failureCount;
				 });
			});
		 }
	 };
	
	 self.fnValidateTPExceptionDate = function(formObject,dateInd){
		if(dateInd =='FROM'){
			if(formObject.fromDate != undefined && formObject.fromDate.trim().length>0){
				if(isValidDate(formObject.fromDate)){
					if(formObject.toDate!=undefined && formObject.toDate.trim().length>0 && stringToDate(formObject.fromDate)>stringToDate(formObject.toDate)){
						swal('From date should be less than or equal to To date');
						formObject.fromDate = '';
					}
				}else
					formObject.fromDate = '';
			}
		}else{
			if(formObject.toDate != undefined && formObject.toDate.trim().length>0){
				if(isValidDate(formObject.toDate)){
					if(formObject.fromDate!=undefined && formObject.fromDate.trim().length>0 && stringToDate(formObject.fromDate)>stringToDate(formObject.toDate)){
						swal('To date should be greater than or equal to From date');
						formObject.toDate = '';
					}
				}else
					formObject.toDate = '';
			}
		}
	 };
	 self.fnExportTpException = function(formData){	
		jConfirm(FILTER_MSGS.FILTER_VALIDATION.CONFIRM_EXCEL,"Warning",function(res){
			if(res){    
				var data = JSON.stringify(formData);
				var form = $('<form action="'+CONTEXT_PATH+'reports/tpExceptionExport" method="post" target="_blank">');
				var input =  $('<input type="hidden" name="json"/>').val(data);
				input.appendTo(form);
				form.appendTo('body');
				form.submit();
				} 
		});
	 };
	 self.fnTPExceptionReset = function(){
		 $state.reload();
	 };
	 
// CARFIX ENQUIRY AND RESEND	 
	 
	 self.fnLoadCarfixEnquiry = function(){
		self.updateDisable = true;
    	self.gridSettings = {
				enableRowHeaderSelection : true,
				enableSelectAll : true,
				multiSelect : true,
				enableColumnResizing : true,
				enableCellEdit : false,
				enableCellSelection: false,				
				enableRowSelection : true,
				enableSorting : false
		};
		var events = {'rowselection':'fnSelectCovernote','rowbatchselection':'fnSelectCovernote'};
		ReportService.loadCarfixSetup("CARFIX").then(function(response){
			self.carfixSetup = response;
		});
		GridServices.defineGrid(self,null, 'carfixGrid',self.gridSettings,columnDefs.carfixEnquiry,null, pagination, events);
		ReportService.loadcvgType(self);
		ReportService.loadCarfixSourceType(self);
		CommonService.getCurrentDate().then(function(response) {			
			var currDate=response.date;			
			self.carfix.issuedToDate = currDate;			
			self.carfix.issuedFromDate = monthFirst(currDate);
			self.searchCarfixEnqDetails(self.carfix);
		});
	};
	
	self.fnChangeCarfixStatus = function(formObject){
		formObject.vehicleNo = "";
		formObject.coverNoteNo = "";
		self.carfixGrid.data = [];
		if(self.carfix.transferStatus!=null)
			self.carfix.transferStatusDesc = $('#ID_INTEGRATION_STATUS option:selected').html();
	};
	    
	self.fnClearCarfixGrid = function(){
		if(self.carfix.sourceTypeId>0)
			self.carfix.sourceTypeName = $('#ID_SRC_TYPE option:selected').html();
		if(self.carfix.coverageTypeId>0)
			self.carfix.subClassDesc = $('#ID_CVG_TYPE option:selected').html();
		if(self.carfix.transferStatus!=null)
			self.carfix.transferStatusDesc = $('#ID_INTEGRATION_STATUS option:selected').html();
		
		self.carfixGrid.data = [];
		
	};
	
	self.fnChangeCarfixIssuedFromDt = function(formObject){
 		var issueFromDate = formObject.issuedFromDate;
 		if(issueFromDate != null && issueFromDate.trim().length > 0){
 			if (isValidDate(issueFromDate)) {
     			if(self.carfixSetup!=undefined && self.carfixSetup.integrationEffectiveDate!=undefined && self.carfixSetup.integrationEffectiveDate.trim().length > 0 && stringToDate(issueFromDate)<stringToDate(self.carfixSetup.integrationEffectiveDate)){
 					swal("Issued From date should be greater than Integration to CARFIX starts from","carfix.issuedFromDate");
 					formObject.issuedFromDate='';
     			}else{
     				var maxDate = monthLast(issueFromDate);	
 					formObject.issuedToDate=maxDate;
     			}
 			}else{
     			formObject.issuedFromDate='';
    		}
		}
 	};
 	self.fnChangeCarfixIssuedToDt = function(formObject){
 		var issueToDate = formObject.issuedToDate;
 		if(issueToDate != null && issueToDate.trim().length > 0){
 			if (!isValidDate(issueToDate)) {
 				formObject.issuedToDate='';
 			}else if(formObject.issuedFromDate!=null && formObject.issuedFromDate.trim().length > 0){
	 			if(stringToDate(formObject.issuedFromDate)>stringToDate(issueToDate)){
					swal("Issued To date should be greater than Issued From date","carfix.issuedToDate");
					formObject.issuedToDate='';
				}else if(formObject.issuedFromDate!=null && formObject.issuedFromDate.trim().length > 0){
		 			if(stringToDate(issueToDate)>stringToDate(fnDateManipulation(formObject.issuedFromDate,1,"+", "M"))){
						swal("Issued To date should not exceed one month","carfix.issuedToDate");
						formObject.issuedToDate='';
					}
	 			}
 			}
 		}
 	};
 	self.fnChangeCarfixInceptionFromDt = function(formObject){
 		var inceptionFromDate = formObject.inceptionFromDate;
 		if(inceptionFromDate != null && inceptionFromDate.trim().length > 0){
 			if (isValidDate(inceptionFromDate) && formObject.inceptionToDate!=null && formObject.inceptionToDate.trim().length > 0){
	 			if(stringToDate(formObject.inceptionFromDate)>stringToDate(formObject.inceptionToDate)){
					swal("Inception From date should be lesser than Inception To date","carfix.inceptionFromDate");
					formObject.inceptionFromDate='';
				}
 			}
		}
 	};
 	self.fnChangeCarfixInceptionToDt = function(formObject){
 		var inceptionToDate = formObject.inceptionToDate;
 		if(inceptionToDate != null && inceptionToDate.trim().length > 0){
 			if (isValidDate(inceptionToDate) && formObject.inceptionFromDate!=null && formObject.inceptionFromDate.trim().length > 0){
	 			if(stringToDate(formObject.inceptionFromDate)>stringToDate(formObject.inceptionToDate)){
					$timeout(function(){
						swal("Inception To date should be greater than Inception From date","carfix.inceptionToDate");
						formObject.inceptionToDate='';
	  			    });
				}
 			}
		}
 	};
	self.fnExportCarfixEnquiry = function(){
		if(self.carfixGrid.data != null && self.carfixGrid.data.length > 0){
			jConfirm(FILTER_MSGS.FILTER_VALIDATION.CONFIRM_EXCEL,"Warning",function(res){
				if(res){     
					document.getElementById('EXCEL_CARFIX').click();  
				}
			});
		}else{
			swal("No data to export");
		}
	};
	
	self.searchCarfixEnqDetails = function(formObject){
		if(self.carfixGridApi != undefined && self.carfixGridApi != null){
			self.carfixGridApi.selection.clearSelectedRows();
		}
		self.updateDisable = true;
		var status = true;
		if(formObject.issuedFromDate== null || formObject.issuedFromDate== undefined || formObject.issuedFromDate.trim().length ==0 ){
			swal("Please enter Issued From date","carfix.issuedFromDate");
			status = false;
		}else if(formObject.issuedToDate== null || formObject.issuedToDate== undefined || formObject.issuedToDate.trim().length ==0 ){
			swal("Please enter Issued To date","carfix.issuedToDate");
			status = false;
		}
		if(status){
			$http.post(CONTEXT_PATH+'reports/getCarfixDetails',formObject).then(function(response) {
				if (response != null && response.data != null) {
					GridServices.bindGrid(self,'carfix','carfixGrid',response.data,"Y",'reports/getCarfixDetails');
				}
			});
		}
	};
	
	self.fnSelectCovernote = function(row) {
		var selectedRows =  self.carfixGridApi.selection.getSelectedRows();
		if(selectedRows != null && selectedRows.length > 0){
			self.updateDisable = false;
		}else {
			self.updateDisable = true;
		}
	};
	
	self.fnUpdateandSendToCarfix = function(){
		var selectedRows =  self.carfixGridApi.selection.getSelectedRows();
		if(selectedRows != null && selectedRows.length > 0){
		  angular.element(document.getElementById("MAIN_APP_SCOPE")).scope().checkSessionOnSubmit().then(function(response){	
			  $http.post(CONTEXT_PATH+"reports/updateCarfix",selectedRows).then(function(res) {
				  if(res.data != null && res.data == 1){
					  swal("Request Sent to Carfix Successfully");
					  $state.reload();
				  }
			  });
		  });
		}
	 };
	    
	
}; //CONTROLLER End

columnDefs.carfixEnquiry = [{field : 'sno',displayName : 'S.No.',cellClass: 'text-center',enableColumnMenu : false,width:50},
							{field : 'carfixId',visible:false},
                            {field : 'referenceId',displayName : 'Reference ID',enableColumnMenu : false,width:160},
                            {field : 'icNo',displayName : 'ID Number',enableColumnMenu : false,width:160},
                            {field : 'insuredName',displayName : 'Insured Name',enableColumnMenu : false,width:160},
							{field : 'coverNoteNo',displayName : 'Cover Note No.',enableColumnMenu : false,width:150},
                            {field : 'vehicleNo',displayName : 'Vehicle No.',enableColumnMenu : false,width:150},
                            {field : 'policyNo',displayName : 'Policy No.',enableColumnMenu : false,width:160},
                            {field : 'issuedDate',displayName : 'Issued Date',enableColumnMenu : false,width:160},
                            {field : 'effectiveDate',displayName : 'Effective Date',enableColumnMenu : false,width:160},
                            {field : 'expiryDate',displayName : 'Expiry Date',enableColumnMenu : false,width:160},
                            {field : 'creationDate',displayName : 'Creation Date',enableColumnMenu : false,width:160},
                            {field : 'modifiedDate',displayName : 'Modified Date',enableColumnMenu : false,width:160},
                            {field : 'classDesc',displayName : 'Vehicle Class',enableColumnMenu : false,width:160},
                            {field : 'subClassDesc',displayName : 'Coverage',enableColumnMenu : false,width:160},
                            {field : 'coverNoteTypeDesc',displayName : 'Cover Note Type',enableColumnMenu : false,width:160},
                            {field : 'vehicleUsageDesc',displayName : 'Vehicle Usage',enableColumnMenu : false,width:160},
                            {field : 'makeCode',displayName : 'Make',enableColumnMenu : false,width:160,visible:false},
                            {field : 'makeDesc',displayName : 'Make',enableColumnMenu : false,width:160},
                            {field : 'modelCode',displayName : 'Model',enableColumnMenu : false,width:160,visible:false},
                            {field : 'modelDesc',displayName : 'Model',enableColumnMenu : false,width:160},
                            {field : 'sourceTypeName',displayName : 'Policy Source Type',enableColumnMenu : false,width:160},
                            {field : 'mpaCNNo',displayName : 'MPA CN No.',enableColumnMenu : false,width:160},
                            {field : 'dataSentDate',displayName : 'Data Sent Date',enableColumnMenu : false,width:160},
                            {field : 'transferStatus',displayName : 'Integration Status',enableColumnMenu : false,width:150},
                            {field : 'processedTime',displayName : 'Integration Date',enableColumnMenu : false,width:160},
                            {field : 'cancelPolicy',displayName : 'Cancel Policy',enableColumnMenu : false,width:160},
                            {field : 'sourceType',displayName : 'Source Type',enableColumnMenu : false,width:160,visible:false},
                            {field : 'errorRemarks',displayName : 'Error Remarks',enableColumnMenu : false,width:160}

];

// DEPENDENCY INJECTION TO CONTROLLER/SERVICE/FACTORY ETC..
ReportController.$inject = [ '$rootScope', 'modal','$interval', '$scope','$filter',
		'$window', '$http', 'localStorageService', 'CommonService', '$state',
		'httpPostService', '$timeout', '$stateParams', 'MotorSearchService',
     	'GridServices','uiGridConstants', 'ReportService','FilterSearchService' ];

reportModule.controller('ReportController', ReportController);
reportModule.service('ReportService', ReportService);
reportModule.service('GridServices', GridServices);